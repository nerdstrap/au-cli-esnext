{"version":3,"sources":["environment.js","main.js","app/app.js","components/index.js","config/app.js","config/auth.js","config/deployed.js","config/local.js","config/router.js","models/challengeQuestion.js","models/challengeQuestionAnswer.js","models/emailInfo.js","models/smsInfo.js","models/user.js","resources/index.js","services/user-service.js","util/event-timer.js","util/location-helper.js","util/logger-helper.js","util/string-helper.js","util/window-helper.js","components/site-footer/site-footer.js","components/nav-bar/nav-bar.js","components/validation-summary/validation-summary.js","resources/messages/challenge-messages.js","resources/messages/enrollment-messages.js","resources/messages/event-messages.js","resources/messages/login-messages.js","resources/messages/self-service-messages.js","resources/value-converters/date-formatter.js","resources/value-converters/interval-formatter.js","resources/value-converters/phone-formatter.js","resources/value-converters/timer-formatter.js","components/views/challenge-with-challenge-questions/challenge-with-challenge-questions.js","components/views/challenge-with-email-info/challenge-with-email-info.js","components/views/challenge-with-phone-info/challenge-with-phone-info.js","components/views/challenge-with-rsa-token/challenge-with-rsa-token.js","components/views/change-password/change-password.js","components/views/confirm-dialog/confirm-dialog.js","components/views/edit-credentials/edit-credentials.js","components/views/enroll-challenge-question-answers/enroll-challenge-question-answers.js","components/views/enroll-email-infos/enroll-email-infos.js","components/views/enroll-phone-infos/enroll-phone-infos.js","components/views/enrollment/enroll-credentials.js","components/views/enrollment/enrollment-disclaimer.js","components/views/enrollment/enrollment-intro.js","components/views/enrollment/enrollment-review.js","components/views/enrollment/enrollment.js","components/views/login/challenge-with-credentials.js","components/views/login/challenge.js","components/views/login/deny.js","components/views/login/login.js","components/views/login/network-credentials.js","components/views/logout/logout.js","components/views/self-service/self-service.js","components/views/unlock-account/unlock-account.js","components/views/verify-email-info-dialog/verify-email-info-dialog.js","components/views/verify-phone-info-dialog/verify-phone-info-dialog.js"],"names":["debug","testing","configure","addAppender","setLevel","window","location","hostname","match","RegExp","logLevel","error","Promise","config","warnings","wForgottenReturn","getLanguage","resolve","lng","configureRouter","title","app","addPipelineStep","map","routes","fallbackRoute","setRoot","aurelia","setupAureliaDone","setupI18NDone","container","get","initialize","use","standardConfiguration","feature","plugin","useDefaults","useCSS","settings","lock","centerHorizontalOnly","startingZIndex","enableEscClose","rejectOnCancel","instance","i18next","language","localStorage","getItem","setup","backend","loadPath","defaultLocale","attributes","fallbackLng","i18n","interpolation","format","value","parts","split","vc","resources","valueConverters","shift","toView","then","prototype","getMessage","key","translation","t","parser","parseMessage","getDisplayName","propertyName","displayName","undefined","mergedConfig","fetch","developmentLogging","start","lang","catch","App","router","authService","ux","notification","languages","code","locale","flag","payload","getTokenPayload","username","authenticated","isAuthenticated","setLanguage","setItem","top","reload","attached","design","primary","accent","info","tr","globalResources","environment","logger","name","endpoints","endpoint","default","defaults","timeout","clickToClose","notifications","success","enrollment","numberOfRequiredChallengeQuestionAnswers","numberOfRequiredSmsInfos","numberOfRequiredEmailInfos","confirmDisclaimerEventTimerStartTime","verifyPhoneInfoTimerStartTime","verifyEmailInfoTimerStartTime","configureEndpoints","baseUrl","loginUrl","signupUrl","loginRedirect","profileUrl","accessTokenProp","refreshTokenProp","idTokenProp","refreshTokenSubmitProp","refreshTokenUrl","useRefreshToken","route","moduleId","nav","auth","roles","ChallengeQuestion","challengeQuestionId","challengeQuestionText","userAnswerText","fromJson","response","ChallengeQuestionAnswer","EmailInfo","emailAddress","label","isDefault","verified","hasActiveToken","Boolean","SmsInfo","phoneNumber","User","sessionId","transactionId","userId","credentials","fullName","access_token","_availableChallengeQuestions","_challengeQuestionAnswers","challengeQuestions","smsInfos","emailInfos","availableChallengeCredentialTypes","authStatusCode","userInfo","buildChallengeQuestions","availableChallengeQuestionAnswers","length","i","newChallengeQuestion","push","mapChallengeQuestionAnswers","challengeQuestionAnswers","j","newChallengeQuestionAnswer","k","newSmsInfo","l","newEmailInfo","credentialTypes","m","n","numberOfChallengeQuestions","availableChallengeQuestions","orderBy","cloneDeep","selectedAvailableChallengeQuestion","previouslySelectedAvailableChallengeQuestion","showActualAnswer","updateAvailableChallengeQuestions","selectedChallengeQuestion","currentChallengeQuestion","removedAvailableChallengeQuestion","index","findIndex","splice","getChallengeQuestionAnswers","challengeQuestion","challengeQuestionAnswer","find","a","isValid","UserService","deviceHelper","isRequesting","userEndpoint","getEndpoint","signin","request","_pre","post","_post","analyzePreAuthUser","challengePreAuthUser","challengeUser","authenticatePreAuthUser","authenticateUser","getPreAuthUser","getUser","addChallengeQuestionAnswers","verifyContactInfo","removeContactInfo","resetPassword","deviceRequest","deviceTokenCookie","setDeviceTokenCookie","EventTimer","eventAggregator","interval","tickKey","timeoutKey","currentTime","intervalId","setInterval","stop","publish","clearInterval","LocationHelperFunction","getQueryParameter","default_","replace","regex","qs","exec","href","decodeURIComponent","LocationHelper","getLogger","StringHelperFunction","formatDate","date","formattedDate","d","Date","dateErr","warn","parseDate","parsedDate","formatPhoneNumber","formattedPhoneNumber","rawPhoneNumber","size","substring","toString","parsePhoneNumber","parsedPhoneNumber","StringHelper","WindowHelper","addEventListener","type","listener","options","removeEventListener","useCapture","SiteFooter","dialogService","userService","event","NavBar","goToLogout","confirmDialogModel","returnObjects","open","viewModel","model","whenClosed","openDialogResult","wasCancelled","navigateToRoute","reason","ValidationSummary","ChallengeStart","Object","assign","ChallengeCancel","ChallengeReceived","ChallengeVerify","ChallengeSuccess","ChallengeFail","ChallengeComplete","EnrollmentDisclaimerConfirmed","EnrollmentStart","EnrollChallengeQuestionAnswersComplete","EnrollPhoneInfosComplete","EnrollEmailInfosComplete","EnrollCredentialsComplete","EnrollmentComplete","RequiredCredentialTypeChanged","GoToLogin","GoToLogout","SigninSuccess","ChallengeWithCredentials","AuthenticateUserFail","AuthenticateUserSuccess","GoToForgotPassword","GoToChangePassword","GoToEditProfile","GoToUnlockProfile","GoToEditChallengeQuestionAnswers","GoToEditPhoneInfos","GoToEditEmailInfos","dateFormatterValueConverter","fromView","intervalFormatterValueConverter","formatInterval","phoneFormatterValueConverter","TimerFormatterValueConverter","formattedValue","ChallengeWithChallengeQuestions","controllerFactory","controller","createForCurrentScope","activate","vm","applyValidationRules","user","ensure","required","on","onSelectedAvailableChallengeQuestionAnswerChanged","bindingContext","cancel","_getCredentials","trimEnd","next","reject","validate","result","valid","message","credentialType","validateReason","ChallengeWithEmailInfo","validateTrigger","manual","token","contactInfo","challengeStatus","goToVerifyEmailInfo","verifyEmailInfoModel","verificationCode","verificationCodeHasFocus","messageParams","output","resendCode","onChallengeSuccess","onChallengeFail","ChallengeWithPhoneInfo","subscribers","selectedSmsInfo","subscribe","onChallengeReceived","detached","each","subscriber","dispose","verifyPhoneInfoModel","ChallengeWithRSAToken","authToken","controllerValidateResult","bindDevice","ChangePassword","params","routeConfig","navigationInstruction","ConfirmDialog","dialogController","headerIcon","headerText","cancelButtonText","confirmButtonText","confirm","ok","EditCredentials","QUESTIONS","onEnrollChallengeQuestionAnswersComplete","onEnrollPhoneInfosComplete","onEnrollEmailInfosComplete","onGoToEnrollChallengeQuestionAnswers","editCredentialsViewModel","onGoToEnrollPhoneInfos","onGoToEnrollEmailInfos","EnrollChallengeQuestionAnswers","save","validateError","Error","exception","EnrollEmailInfos","windowHelper","onKeypressInputCallback","onKeypressInput","bind","showEnrollEmailInfoWarning","emailAddressHasFocus","showAddEmailInfoForm","email","withMessage","deactivate","target","id","addEmailInfo","removeEmailInfo","onConfirmRemoveEmailInfo","contactType","isEmailAddressUnique","idx","s","duplicateEmailError","onVerifyEmailInfoSuccess","emailInfo","EnrollPhoneInfos","showEnrollPhoneInfoWarning","phoneNumberHasFocus","showAddPhoneInfoForm","minLength","maxLength","matches","addPhoneInfo","removePhoneInfo","onConfirmRemovePhoneInfo","isPhoneNumberUnique","goToVerifyPhoneInfo","duplicatePhoneError","onVerifyPhoneInfoSuccess","phoneInfo","EnrollCredentials","enrollCredentialsViewModel","skip","PHONE","EMAIL","credentialsComplete","challengeQuestionAnswersComplete","smsInfosComplete","emailInfosComplete","EnrollmentDisclaimer","eventTimerStartTime","eventTimerTickKey","eventTimerTimeoutKey","timer","equals","confirmDisclaimerChecked","eventTimerExpired","remainingTime","onEventTimerTick","startTime","onEventTimerTimeout","EnrollmentIntro","EnrollmentReview","done","EnrollmentDone","Enrollment","enrollmentViewModel","onEnrollmentDisclaimerConfirmed","onEnrollmentStart","onEnrollCredentialsComplete","onEnrollmentComplete","selectedCredentialType","challengeWithCredentialsViewModel","onChallengeStart","onChallengeCancel","onChallengeVerify","Challenge","bindDeviceOptions","Deny","Login","loginViewModel","onGoToLogin","onSigninSuccess","onAuthenticateUserSuccess","onChallengeWithCredentials","onGoToForgotPassword","userStatus","password","login","NetworkCredentials","userIdHasFocus","goToForgotPassword","Logout","logout","SelfService","goToChangePassword","goToEditProfile","goToUnlockAccount","UnlockAccount","VerifyEmailInfoDialog","verify","VerifyPhoneInfoDialog"],"mappings":";;;;;;oBAAe;AACbA,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;YCuHCC,YAAAA;;;;;;;;;;;;;;;;;;;;AA1GhB,iCAAWC,WAAX,CAAuB,4CAAvB;AACA,iCAAWC,QAAX,CAAoBC,OAAOC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,IAAIC,MAAJ,CAAW,WAAX,CAA/B,IACd,6BAAWC,QAAX,CAAoBV,KADN,GAEd,6BAAWU,QAAX,CAAoBC,KAF1B;;AAIAC,YAAQC,MAAR,CAAe;AACXC,kBAAU;AACNC,8BAAkB;AADZ;AADC,KAAf;;AAMA,aAASC,WAAT,GAAuB;AACnB,eAAO,IAAIJ,OAAJ,CAAY,UAACK,OAAD,EAAa;AAC5B,gBAAIC,MAAM,IAAV;AACAD,oBAAQC,GAAR;AACH,SAHM,CAAP;AAIH;;AAED,aAASC,eAAT,CAAyBN,MAAzB,EAAiC;AAC7BA,eAAOO,KAAP,GAAe,cAAUC,GAAV,CAAcD,KAA7B;AACAP,eAAOS,eAAP,CAAuB,WAAvB;AACAT,eAAOU,GAAP,CAAW,iBAAaC,MAAxB;AACAX,eAAOY,aAAP,CAAqB,iBAAaA,aAAlC;AACH;;AAED,aAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACtB,YAAIA,QAAQC,gBAAR,IAA4BD,QAAQE,aAAxC,EAAuD;AACnDF,oBAAQG,SAAR,CAAkBC,GAAlB,wBAA8B7B,SAA9B,CAAwCiB,eAAxC;AACAQ,oBAAQD,OAAR,CAAgB,SAAhB;AACH;AACJ;;AAED,aAASM,UAAT,CAAoBL,OAApB,EAA6BT,GAA7B,EAAkC;AAC9BS,gBAAQC,gBAAR,GAA2B,KAA3B;AACAD,gBAAQE,aAAR,GAAwB,KAAxB;AACAF,gBAAQM,GAAR,CACKC,qBADL,GAEKC,OAFL,CAEa,WAFb,EAGKA,OAHL,CAGa,YAHb,EAIKC,MAJL,CAIY,oBAJZ,EAKKA,MALL,CAKY,YALZ,EAMKA,MANL,CAMY,gBANZ,EAM8B,qBAAa;AACnC,mBAAOlC,UAAU,CACb,aADa,EAEb,wBAFa,EAGb,sBAHa,CAAV,iDAAP;AAKH,SAZL,EAaKkC,MAbL,CAaY,gBAbZ,EAa8B,kBAAU;AAChCvB,mBAAOwB,WAAP;AACAxB,mBAAOyB,MAAP,CAAc,EAAd;AACAzB,mBAAO0B,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AACA3B,mBAAO0B,QAAP,CAAgBE,oBAAhB,GAAuC,KAAvC;AACA5B,mBAAO0B,QAAP,CAAgBG,cAAhB,GAAiC,CAAjC;AACA7B,mBAAO0B,QAAP,CAAgBI,cAAhB,GAAiC,IAAjC;AACA9B,mBAAO0B,QAAP,CAAgBK,cAAhB,GAAiC,IAAjC;AACH,SArBL,EAsBKR,MAtBL,CAsBY,cAtBZ,EAsB4B,oBAAY;AAChCS,qBAASC,OAAT,CAAiBb,GAAjB;AACA,gBAAIc,WAAWC,aAAaC,OAAb,CAAqB,UAArB,CAAf;AACAJ,qBAASK,KAAT,CAAe;AACXC,yBAAS;AACLC,8BAAU;AADL,iBADE;AAIXlC,qBAAK6B,YAAY,cAAUM,aAAV,CAAwBN,QAJ9B;AAKXO,4BAAY,CAAC,GAAD,EAAM,MAAN,CALD;AAMXC,6BAAaR,YAAY,cAAUM,aAAV,CAAwBN,QANtC;AAOX/C,uBAAO,cAAUwD,IAAV,CAAexD,KAPX;AAQXyD,+BAAe;AACXC,4BAAQ,gBAAUC,KAAV,EAAiBD,OAAjB,EAAyBxC,GAAzB,EAA8B;AAClC,4BAAM0C,QAAQF,QAAOG,KAAP,CAAa,GAAb,CAAd;AACA,4BAAMC,KAAKnC,QAAQoC,SAAR,CAAkBC,eAAlB,CAAkCJ,MAAMK,KAAN,EAAlC,CAAX;AACA,+BAAOH,KAAKA,GAAGI,MAAH,YAAUP,KAAV,SAAoBC,KAApB,EAAL,GAAkCD,KAAzC;AACH;AALU;AARJ,aAAf,EAeGQ,IAfH,CAeQ,YAAM;AACV,6DAA0BC,SAA1B,CAAoCC,UAApC,GAAiD,UAAUC,GAAV,EAAe;AAC5D,wBAAMC,cAAc1B,SAASC,OAAT,CAAiB0B,CAAjB,yBAAyCF,GAAzC,CAApB;AACA,2BAAO,KAAKG,MAAL,CAAYC,YAAZ,CAAyBH,WAAzB,CAAP;AACH,iBAHD;AAIA,6DAA0BH,SAA1B,CAAoCO,cAApC,GAAqD,UAAUC,YAAV,EAAwBC,WAAxB,EAAqC;AACtF,wBAAIA,gBAAgB,IAAhB,IAAwBA,gBAAgBC,SAA5C,EAAuD;AACnD,+BAAOD,WAAP;AACH;AACD,2BAAOhC,SAASC,OAAT,CAAiB0B,CAAjB,sBAAsCI,YAAtC,CAAP;AACH,iBALD;AAMAjD,wBAAQE,aAAR,GAAwB,IAAxB;AACAH,wBAAQC,OAAR;AACH,aA5BD;AA6BH,SAtDL;;AAwDA,YAAIoD,eAAepD,QAAQG,SAAR,CAAkBC,GAAlB,uBAAnB;AACA,YAAIgD,aAAaC,KAAb,CAAmB,aAAnB,MAAsC,aAA1C,EAAyD;AACrDrD,oBAAQM,GAAR,CAAYgD,kBAAZ;AACH;;AAED,YAAIF,aAAaC,KAAb,CAAmB,aAAnB,MAAsC,SAA1C,EAAqD;AACjDrD,oBAAQM,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACH;;AAEDT,gBAAQuD,KAAR,GAAgBf,IAAhB,CAAqB,YAAM;AACvBxC,oBAAQC,gBAAR,GAA2B,IAA3B;AACAF,oBAAQC,OAAR;AACH,SAHD;AAIH;;AAEM,aAASzB,SAAT,CAAmByB,OAAnB,EAA4B;AAC/BX,sBAAcmD,IAAd,CAAmB,gBAAQ;AACvBnC,uBAAWL,OAAX,EAAoBwD,IAApB;AACH,SAFD,EAEGC,KAFH,CAES,aAAK;AACVpD,uBAAWL,OAAX,EAAoB,IAApB;AACH,SAJD;AAKH;;;;;;;;;;;;;;;;;;;;;;;;;;;;QClHY0D,cAAAA,cADZ;AAOG,qBAAYC,MAAZ,EAAoBC,WAApB,EAAiCC,EAAjC,EAAqCC,YAArC,EAAmDjC,IAAnD,EAAyD;AAAA;;AAAA,iBAJzDkC,SAIyD,GAJ7C,CACR,EAACC,MAAM,IAAP,EAAaC,QAAQ,OAArB,EAA8BC,MAAM,IAApC,EADQ,CAI6C;;AACrD,iBAAKP,MAAL,GAAcA,MAAd;AACA,iBAAKC,WAAL,GAAmBA,WAAnB;AACA,iBAAKC,EAAL,GAAUA,EAAV;AACA,iBAAKC,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;;AAEA,gBAAIsC,UAAUP,YAAYQ,eAAZ,EAAd;AACA,iBAAKC,QAAL,GAAgBF,UAAUA,QAAQE,QAAlB,GAA6B,IAA7C;AACA,iBAAKC,aAAL,GAAqB,KAAKV,WAAL,CAAiBW,eAAjB,EAArB;AACH;;sBAEDC,mCAAYpD,UAAU;AAClBC,yBAAaoD,OAAb,CAAqB,UAArB,EAAiCrD,SAAS4C,IAA1C;AACAtF,mBAAOgG,GAAP,CAAW/F,QAAX,CAAoBgG,MAApB;AACH;;sBAEDC,+BAAW;AACPf,eAAGgB,MAAH,CAAUC,OAAV,GAAoB,SAApB;AACAjB,eAAGgB,MAAH,CAAUE,MAAV,GAAmB,SAAnB;AACA,iCAAOC,IAAP,CAAY,KAAKnD,IAAL,CAAUoD,EAAV,CAAa,sBAAb,CAAZ;AACA,iBAAKnB,YAAL,CAAkBkB,IAAlB,CAAuB,sBAAvB;AACH;;;;;;;;;;;YCvCWzG,YAAAA;AAAT,aAASA,SAAT,CAAmBW,MAAnB,EAA2B;AAC9BA,eAAOgG,eAAP,CAAuB,CACnB,mBADmB,EAEnB,2BAFmB,EAGnB,yCAHmB,CAAvB;AAKH;;;;;;;;sBCNc;AACXxF,aAAK;AACDD,mBAAO,qCADN;AAED0F,yBAAa;AAFZ,SADM;AAKXC,gBAAQ;AACJC,kBAAM;AADF,SALG;AAQXxD,cAAM;AACFxD,mBAAO;AADL,SARK;AAWX,uBAAe;AACXiH,uBAAW,CACP;AACID,sBAAM,MADV;AAEIE,0BAAU,6BAFd;;AAIIC,yBAAS;AAJb,aADO,EAOP;AACIH,sBAAM,MADV;AAEIE,0BAAU;AAFd,aAPO;AADA,SAXJ;AA0BX7D,uBAAe;AACXN,sBAAU,IADC;AAEX6C,oBAAQ;AAFG,SA1BJ;AA8BX,gCAAwB;AACpBwB,sBAAU;AACNC,yBAAS,IADH;AAENC,8BAAc;AAFR,aADU;AAKpBC,2BAAe;AACXC,yBAAS,uBADE;AAEX7G,uBAAO,qBAFI;AAGXgG,sBAAM;AAHK;AALK,SA9Bb;AAyCXc,oBAAY;AACRC,sDAA0C,CADlC;AAERC,sCAA0B,CAFlB;AAGRC,wCAA4B,CAHpB;AAIRC,kDAAsC,CAJ9B;AAKRC,2CAA+B,EALvB;AAMRC,2CAA+B;AANvB;AAzCD;;;;;;;;0BCAA;AAEX,0CAA0B;AAEtBb,kCAAU,MAFY;;AAKtBc,4CAAoB,CAAC,MAAD,EAAS,MAAT,CALE;;AAStBC,iCAAS,MATa;;AAYtBC,kCAAU,QAZY;;AAetBC,mCAAW,SAfW;;AAkBtBC,uCAAe,iBAlBO;;AAqBtBC,oCAAY,KArBU;;AAuBtBC,yCAAiB,cAvBK;AAwBtBC,0CAAkB,eAxBI;AAyBtBC,qCAAa,UAzBS;AA0BtBC,gDAAwB,eA1BF;AA2BtBC,yCAAiB,gBA3BK;AA4BtBC,yCAAiB;AA5BK;AAFf;;;;;;;;sBCMA;AACXtH,aAAK;AAEDyF,yBAAa,iBAFZ,EADM;AAKX,uBAAe;AACXG,uBAAW,CACP;AACID,sBAAM,MADV;AAEIE,0BAAU,YAFd;AAGIC,yBAAS,IAHb,EADO,EAMP;AACIH,sBAAM,MADV;AAEIE,0BAAU,YAFd,EANO;AADA;AALJ;;;;;;;;oBCNA;;;;;;;;sBCAA;AACX1F,gBAAQ,CACJ;AACIoH,mBAAO,CAAC,EAAD,EAAK,QAAL,CADX;AAEI5B,kBAAM,OAFV;AAGI6B,sBAAU,8BAHd;AAIIC,iBAAK,KAJT;AAKIC,kBAAM,KALV;AAMI3H,mBAAO,OANX;AAOImB,sBAAU;AACNiC,mBAAG,aADG;AAENwE,uBAAO;AAFD;AAPd,SADI,EAYD;AACCJ,mBAAO,SADR;AAEC5B,kBAAM,QAFP;AAGC6B,sBAAU,gCAHX;AAICzH,mBAAO,QAJR;AAKCmB,sBAAU;AACNiC,mBAAG,cADG;AAENwE,uBAAO;AAFD;AALX,SAZC,EAqBD;AACCJ,mBAAO,aADR;AAEC5B,kBAAM,YAFP;AAGC6B,sBAAU,wCAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,YANR;AAOCmB,sBAAU;AACNiC,mBAAG,kBADG;AAENwE,uBAAO,CAAC,aAAD;AAFD;AAPX,SArBC,EAgCD;AACCJ,mBAAO,YADR;AAEC5B,kBAAM,WAFP;AAGC6B,sBAAU,sCAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,WANR;AAOCmB,sBAAU;AACNiC,mBAAG,iBADG;AAENwE,uBAAO;AAFD;AAPX,SAhCC,EA2CD;AACCJ,mBAAO,eADR;AAEC5B,kBAAM,cAFP;AAGC6B,sBAAU,4CAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,cANR;AAOCmB,sBAAU;AACNiC,mBAAG,oBADG;AAENwE,uBAAO;AAFD;AAPX,SA3CC,EAsDD;AACCJ,mBAAO,+BADR;AAEC5B,kBAAM,iBAFP;AAGC6B,sBAAU,kDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,iBANR;AAOCmB,sBAAU;AACNiC,mBAAG,uBADG;AAENwE,uBAAO;AAFD;AAPX,SAtDC,EAiED;AACCJ,mBAAO,8BADR;AAEC5B,kBAAM,gBAFP;AAGC6B,sBAAU,gDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,gBANR;AAOCmB,sBAAU;AACNiC,mBAAG,sBADG;AAENwE,uBAAO;AAFD;AAPX,SAjEC,EA4ED;AACCJ,mBAAO,gCADR;AAEC5B,kBAAM,cAFP;AAGC6B,sBAAU,oDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMC3H,mBAAO,kBANR;AAOCmB,sBAAU;AACNiC,mBAAG,wBADG;AAENwE,uBAAO;AAFD;AAPX,SA5EC,CADG;AAyFXvH,uBAAe;AAzFJ;;;;;;;;;;;;;;;QCAFwH,4BAAAA;AAKT,qCAAc;AAAA;;AAAA,iBAJdC,mBAIc,GAJQ,EAIR;AAAA,iBAHdC,qBAGc,GAHU,EAGV;AAAA,iBAFdC,cAEc,GAFG,EAEH;AACb;;oCAEDC,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASJ,mBAAb,EAAkC;AAC9B,yBAAKA,mBAAL,GAA2BI,SAASJ,mBAApC;AACH;AACD,oBAAII,SAASH,qBAAb,EAAoC;AAChC,yBAAKA,qBAAL,GAA6BG,SAASH,qBAAtC;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;QCjBQI,kCAAAA;AAKT,2CAAc;AAAA;;AAAA,iBAJdL,mBAIc,GAJQ,EAIR;AAAA,iBAHdC,qBAGc,GAHU,EAGV;AAAA,iBAFdC,cAEc,GAFG,EAEH;AACb;;0CAEDC,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASJ,mBAAb,EAAkC;AAC9B,yBAAKA,mBAAL,GAA2BI,SAASJ,mBAApC;AACH;AACD,oBAAII,SAASH,qBAAb,EAAoC;AAChC,yBAAKA,qBAAL,GAA6BG,SAASH,qBAAtC;AACH;AACD,oBAAIG,SAASF,cAAb,EAA6B;AACzB,yBAAKA,cAAL,GAAsBE,SAASF,cAA/B;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;QCpBQI,oBAAAA;AAOT,6BAAc;AAAA;;AAAA,iBANdC,YAMc,GANA,EAMA;AAAA,iBALdC,KAKc,GALN,EAKM;AAAA,iBAJdC,SAIc,GAJF,KAIE;AAAA,iBAHdC,QAGc,GAHH,KAGG;AAAA,iBAFdC,cAEc,GAFG,KAEH;AACb;;4BAEDR,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASG,YAAb,EAA2B;AACvB,yBAAKA,YAAL,GAAoBH,SAASG,YAA7B;AACH;AACD,oBAAIH,SAASI,KAAb,EAAoB;AAChB,yBAAKA,KAAL,GAAaJ,SAASI,KAAtB;AACH;AACD,qBAAKC,SAAL,GAAiBG,QAAQR,SAASK,SAAjB,CAAjB;AACA,qBAAKC,QAAL,GAAgBE,QAAQR,SAASM,QAAjB,CAAhB;AACA,qBAAKC,cAAL,GAAsBC,QAAQR,SAASO,cAAjB,CAAtB;AACH;AACJ;;;;;;;;;;;;;;;;;;QCtBQE,kBAAAA;AAOT,2BAAc;AAAA;;AAAA,iBANdC,WAMc,GAND,EAMC;AAAA,iBALdN,KAKc,GALN,EAKM;AAAA,iBAJdC,SAIc,GAJF,KAIE;AAAA,iBAHdC,QAGc,GAHH,KAGG;AAAA,iBAFdC,cAEc,GAFG,KAEH;AACb;;0BAEDR,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASU,WAAb,EAA0B;AACtB,yBAAKA,WAAL,GAAmBV,SAASU,WAA5B;AACH;AACD,oBAAIV,SAASI,KAAb,EAAoB;AAChB,yBAAKA,KAAL,GAAaJ,SAASI,KAAtB;AACH;AACD,qBAAKC,SAAL,GAAiBG,QAAQR,SAASK,SAAjB,CAAjB;AACA,qBAAKC,QAAL,GAAgBE,QAAQR,SAASM,QAAjB,CAAhB;AACA,qBAAKC,cAAL,GAAsBC,QAAQR,SAASO,cAAjB,CAAtB;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCdQI,eAAAA;AAiBT,sBAAY3G,UAAZ,EAAwB;AAAA;;AAAA,iBAhBxB4G,SAgBwB,GAhBZ,EAgBY;AAAA,iBAfxBC,aAewB,GAfR,EAeQ;AAAA,iBAdxBC,MAcwB,GAdf,EAce;AAAA,iBAbxBC,WAawB,GAbV,EAaU;AAAA,iBAZxBC,QAYwB,GAZb,EAYa;AAAA,iBAXxBC,YAWwB,GAXT,EAWS;AAAA,iBAVxBC,4BAUwB,GAVO,EAUP;AAAA,iBATxBC,yBASwB,GATI,EASJ;AAAA,iBARxBC,kBAQwB,GARH,EAQG;AAAA,iBAPxBC,QAOwB,GAPb,EAOa;AAAA,iBANxBC,UAMwB,GANX,EAMW;AAAA,iBALxBC,iCAKwB,GALY,EAKZ;AAAA,iBAJxBnD,wCAIwB,GAJmB,cAAUD,UAAV,CAAqBC,wCAArB,IAAiE,CAIpF;AAAA,iBAHxBC,wBAGwB,GAHG,cAAUF,UAAV,CAAqBE,wBAArB,IAAiD,CAGpD;AAAA,iBAFxBC,0BAEwB,GAFK,cAAUH,UAAV,CAAqBG,0BAArB,IAAmD,CAExD;;AACpB,iBAAKyB,QAAL,CAAc/F,UAAd;AACH;;uBAED+F,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASwB,cAAb,EAA6B;AACzB,yBAAKA,cAAL,GAAsB,6BAAexB,SAASwB,cAAxB,CAAtB;AACH;AACD,oBAAIxB,SAASY,SAAb,EAAwB;AACpB,yBAAKA,SAAL,GAAiBZ,SAASY,SAA1B;AACH;AACD,oBAAIZ,SAASa,aAAb,EAA4B;AACxB,yBAAKA,aAAL,GAAqBb,SAASa,aAA9B;AACH;AACD,oBAAIb,SAASc,MAAb,EAAqB;AACjB,yBAAKA,MAAL,GAAcd,SAASc,MAAvB;AACH;AACD,oBAAId,SAASyB,QAAT,IAAqBzB,SAASyB,QAAT,CAAkBT,QAA3C,EAAqD;AACjD,yBAAKA,QAAL,GAAgBhB,SAASyB,QAAT,CAAkBT,QAAlC;AACH;AACD,oBAAIhB,SAASiB,YAAb,EAA2B;AACvB,yBAAKA,YAAL,GAAoBjB,SAASiB,YAA7B;AACH;AACD,oBAAIS,0BAA0B,KAA9B;AACA,oBAAI1B,SAAS2B,iCAAT,IAA8C3B,SAAS2B,iCAAT,CAA2CC,MAAzF,IAAmG5B,SAAS2B,iCAAT,CAA2CC,MAA3C,GAAoD,CAA3J,EAA8J;AAC1JF,8CAA0B,IAA1B;AACA,yBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI7B,SAAS2B,iCAAT,CAA2CC,MAA/D,EAAuEC,GAAvE,EAA4E;AACxE,4BAAIC,uBAAuB,0CAA3B;AACAA,6CAAqB/B,QAArB,CAA8BC,SAAS2B,iCAAT,CAA2CE,CAA3C,CAA9B;AACA,6BAAKX,4BAAL,CAAkCa,IAAlC,CAAuCD,oBAAvC;AACH;AACJ;AACD,oBAAIE,8BAA8B,KAAlC;AACA,oBAAIhC,SAASiC,wBAAT,IAAqCjC,SAASiC,wBAAT,CAAkCL,MAAvE,IAAiF5B,SAASiC,wBAAT,CAAkCL,MAAlC,GAA2C,CAAhI,EAAmI;AAC/HI,kDAA8B,IAA9B;AACA,yBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIlC,SAASiC,wBAAT,CAAkCL,MAAtD,EAA8DM,GAA9D,EAAmE;AAC/D,4BAAIC,6BAA6B,sDAAjC;AACAA,mDAA2BpC,QAA3B,CAAoCC,SAASiC,wBAAT,CAAkCC,CAAlC,CAApC;AACA,6BAAKf,yBAAL,CAA+BY,IAA/B,CAAoCI,0BAApC;AACH;AACJ;AACD,oBAAInC,SAASqB,QAAT,IAAqBrB,SAASqB,QAAT,CAAkBO,MAAvC,IAAiD5B,SAASqB,QAAT,CAAkBO,MAAlB,GAA2B,CAAhF,EAAmF;AAC/E,yBAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIpC,SAASqB,QAAT,CAAkBO,MAAtC,EAA8CQ,GAA9C,EAAmD;AAC/C,4BAAIC,aAAa,sBAAjB;AACAA,mCAAWtC,QAAX,CAAoBC,SAASqB,QAAT,CAAkBe,CAAlB,CAApB;AACA,6BAAKf,QAAL,CAAcU,IAAd,CAAmBM,UAAnB;AACH;AACJ;AACD,oBAAIrC,SAASsB,UAAT,IAAuBtB,SAASsB,UAAT,CAAoBM,MAA3C,IAAqD5B,SAASsB,UAAT,CAAoBM,MAApB,GAA6B,CAAtF,EAAyF;AACrF,yBAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAItC,SAASsB,UAAT,CAAoBM,MAAxC,EAAgDU,GAAhD,EAAqD;AACjD,4BAAIC,eAAe,0BAAnB;AACAA,qCAAaxC,QAAb,CAAsBC,SAASsB,UAAT,CAAoBgB,CAApB,CAAtB;AACA,6BAAKhB,UAAL,CAAgBS,IAAhB,CAAqBQ,YAArB;AACH;AACJ;AACD,oBAAIvC,SAASwC,eAAT,IAA4BxC,SAASwC,eAAT,CAAyBZ,MAArD,IAA+D5B,SAASwC,eAAT,CAAyBZ,MAAzB,GAAkC,CAArG,EAAwG;AACpG,yBAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIzC,SAASwC,eAAT,CAAyBZ,MAA7C,EAAqDa,GAArD,EAA0D;AACtD,6BAAKlB,iCAAL,CAAuCQ,IAAvC,CAA4C/B,SAASwC,eAAT,CAAyBC,CAAzB,CAA5C;AACH;AACJ;;AAED,oBAAIf,uBAAJ,EAA6B;AACzB,yBAAKA,uBAAL,CAA6B,KAAKtD,wCAAlC;AACH;AACD,oBAAI4D,2BAAJ,EAAiC;AAC7B,wBAAI,CAACN,uBAAL,EAA8B;AAC1B,4BAAI1B,SAASiC,wBAAT,IAAqCjC,SAASiC,wBAAT,CAAkCL,MAAvE,IAAiF5B,SAASiC,wBAAT,CAAkCL,MAAlC,GAA2C,CAAhI,EAAmI;AAC/H,iCAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAI1C,SAASiC,wBAAT,CAAkCL,MAAtD,EAA8Dc,GAA9D,EAAmE;AAC/D,oCAAIZ,wBAAuB,0CAA3B;AACAA,sDAAqB/B,QAArB,CAA8BC,SAASiC,wBAAT,CAAkCS,CAAlC,CAA9B;AACA,qCAAKxB,4BAAL,CAAkCa,IAAlC,CAAuCD,qBAAvC;AACH;AACD,iCAAKJ,uBAAL,CAA6B1B,SAASiC,wBAAT,CAAkCL,MAA/D;AACH;AACJ;AACD,yBAAKI,2BAAL;AACH;AACJ;AACJ;;uBAEDN,2DAAwBiB,4BAA4B;AAChD,iBAAKvB,kBAAL,GAA0B,EAA1B;AACA,iBAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAIc,0BAApB,EAAgDd,GAAhD,EAAqD;AACjD,qBAAKT,kBAAL,CAAwBW,IAAxB,CAA6B;AACzBa,iDAA6B,iBAAEC,OAAF,CAAU,iBAAEC,SAAF,CAAY,KAAK5B,4BAAjB,EAA+C,CAAC,qBAAD,CAA/C,EAAwE,CAAC,KAAD,CAAxE,CAAV,CADJ;AAEzB6B,wDAAoC,IAFX;AAGzBC,kEAA8C,IAHrB;AAIzBlD,oCAAgB,EAJS;AAKzBmD,sCAAkB;AALO,iBAA7B;AAOH;AACJ;;uBAEDC,+EAAkCC,2BAA2BJ,oCAAoC;AAC7F,iBAAK,IAAIlB,IAAI,CAAb,EAAgBA,IAAI,KAAKT,kBAAL,CAAwBQ,MAA5C,EAAoDC,GAApD,EAAyD;AACrD,oBAAIuB,2BAA2B,KAAKhC,kBAAL,CAAwBS,CAAxB,CAA/B;AACA,oBAAIuB,6BAA6BD,yBAAjC,EAA4D;AACxD,wBAAIE,0CAAJ;AACA,wBAAIN,uCAAuC,IAA3C,EAAiD;AAC7C,4BAAIO,QAAQ,iBAAEC,SAAF,CAAYH,yBAAyBR,2BAArC,EAAkEG,kCAAlE,CAAZ;AACA,4BAAIO,QAAQ,CAAC,CAAb,EAAgB;AACZD,gEAAoCD,yBAAyBR,2BAAzB,CAAqDY,MAArD,CAA4DF,KAA5D,EAAmE,CAAnE,CAApC;AACH;AACJ;AACD,wBAAIH,0BAA0BH,4CAA1B,KAA2E,IAA/E,EAAqF;AACjFI,iDAAyBR,2BAAzB,CAAqDY,MAArD,CAA4D,CAA5D,EAA+D,CAA/D,EAAkEL,0BAA0BH,4CAA5F;AACH;AACJ;AACJ;;AAEDG,sCAA0BH,4CAA1B,GAAyED,kCAAzE;AACH;;uBAEDU,qEAA8B;AAC1B,gBAAIxB,2BAA2B,EAA/B;AACA,iBAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAI,KAAKT,kBAAL,CAAwBQ,MAA5C,EAAoDC,GAApD,EAAyD;AACrD,oBAAI6B,oBAAoB,KAAKtC,kBAAL,CAAwBS,CAAxB,CAAxB;AACA,oBAAI6B,qBAAqBA,kBAAkBX,kCAAvC,IAA6EW,kBAAkBX,kCAAlB,CAAqDnD,mBAAlI,IAAyJ8D,kBAAkBX,kCAAlB,CAAqDlD,qBAA9M,IAAuO6D,kBAAkB5D,cAA7P,EAA6Q;AACzQmC,6CAAyBF,IAAzB,CAA8B;AAC1BnC,6CAAqB8D,kBAAkBX,kCAAlB,CAAqDnD,mBADhD;AAE1BC,+CAAuB6D,kBAAkBX,kCAAlB,CAAqDlD,qBAFlD;AAG1BC,wCAAgB4D,kBAAkB5D;AAHR,qBAA9B;AAKH;AACJ;AACD,mBAAOmC,wBAAP;AACH;;uBAEDD,qEAA8B;AAAA;;AAAA,uCACjBH,CADiB;AAEtB,oBAAI6B,oBAAoB,MAAKtC,kBAAL,CAAwBS,CAAxB,CAAxB;AACA,oBAAI8B,0BAA0B,MAAKxC,yBAAL,CAA+BU,CAA/B,CAA9B;AACA,oBAAI6B,qBAAqBC,uBAAzB,EAAkD;AAC9CD,sCAAkBX,kCAAlB,GAAuD,iBAAEa,IAAF,CAAOF,kBAAkBd,2BAAzB,EAAsD,UAAUiB,CAAV,EAAa;AACtH,+BAAOA,EAAEjE,mBAAF,KAA0B+D,wBAAwB/D,mBAAzD;AACH,qBAFsD,CAAvD;AAGA,0BAAKsD,iCAAL,CAAuCQ,iBAAvC,EAA0DA,kBAAkBX,kCAA5E;AACH;AATqB;;AAC1B,iBAAK,IAAIlB,IAAI,CAAb,EAAgBA,IAAI,KAAKT,kBAAL,CAAwBQ,MAA5C,EAAoDC,GAApD,EAAyD;AAAA,sBAAhDA,CAAgD;AASxD;AACJ;;;;gCAEsC;AACnC,uBAAO,KAAKV,yBAAL,IAAkC,KAAKA,yBAAL,CAA+BS,MAAjE,IAA2E,KAAKT,yBAAL,CAA+BS,MAA/B,IAAyC,KAAKxD,wCAAhI;AACH;;;gCAEsB;AACnB,uBAAO,KAAKiD,QAAL,IAAiB,KAAKA,QAAL,CAAcO,MAA/B,IAAyC,KAAKP,QAAL,CAAcO,MAAd,IAAwB,KAAKvD,wBAA7E;AACH;;;gCAEwB;AACrB,oBAAIyF,UAAU,KAAd;AACA,oBAAI,KAAKxC,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,MAAnC,IAA6C,KAAKN,UAAL,CAAgBM,MAAhB,IAA0B,KAAKtD,0BAAhF,EAA4G;AACxG,wBAAI,KAAKgD,UAAL,CAAgBM,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BkC,kCAAU,IAAV;AACH,qBAFD,MAEO;AACH,4BAAI,CAAC,KAAKxC,UAAL,CAAgB,CAAhB,EAAmBnB,YAAnB,CAAgCjJ,KAAhC,CAAsC,iBAAtC,CAAL,EAA+D;AAC3D4M,sCAAU,IAAV;AACH;AACJ;AACJ;AACD,uBAAOA,OAAP;AACH;;;;;;;;;;;;YC3LWlN,YAAAA;AAAT,aAASA,SAAT,CAAmBW,MAAnB,EAA2B;AAC9BA,eAAOgG,eAAP,CAAuB,CACnB,mCADmB,EAEnB,oCAFmB,EAGnB,oCAHmB,CAAvB;AAKH;;;;;;;;;;;;;;;;;;QCIYwG,sBAAAA,sBADZ;AAIG,6BAAYxM,MAAZ,EAAoByM,YAApB,EAAkC;AAAA;;AAAA,iBAFlCC,YAEkC,GAFnB,KAEmB;;AAC9B,iBAAKC,YAAL,GAAoB3M,OAAO4M,WAAP,CAAmB,MAAnB,CAApB;AACA,iBAAKH,YAAL,GAAoBA,YAApB;AACH;;8BAEDI,yBAAOC,SAAS;AAAA;;AACZ,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,QAAvB,EAAiCF,OAAjC,EACFxJ,IADE,CACG,oBAAY;AACd,sBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDyE,iDAAmBJ,SAAS;AAAA;;AACxB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,oBAAvB,EAA6CF,OAA7C,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAED0E,qDAAqBL,SAAS;AAAA;;AAC1B,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,sBAAvB,EAA+CF,OAA/C,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAED2E,uCAAcN,SAAS;AAAA;;AACnB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,eAAvB,EAAwCF,OAAxC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACH,aAHE,CAAP;AAIH;;8BAED4E,2DAAwBP,SAAS;AAAA;;AAC7B,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,yBAAvB,EAAkDF,OAAlD,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAED6E,6CAAiBR,SAAS;AAAA;;AACtB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,kBAAvB,EAA2CF,OAA3C,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAED8E,yCAAeT,SAAS;AAAA;;AACpB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,gBAAvB,EAAyCF,OAAzC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAED+E,2BAAQV,SAAS;AAAA;;AACb,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,SAAvB,EAAkCF,OAAlC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDgF,mEAA4BX,SAAS;AAAA;;AACjC,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,6BAAvB,EAAsDF,OAAtD,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDiF,+CAAkBZ,SAAS;AAAA;;AACvB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,mBAAvB,EAA4CF,OAA5C,EACFxJ,IADE,CACG,oBAAY;AACd,wBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDkF,+CAAkBb,SAAS;AAAA;;AACvB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,mBAAvB,EAA4CF,OAA5C,EACFxJ,IADE,CACG,oBAAY;AACd,wBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDmF,uCAAcd,SAAS;AAAA;;AACnB,iBAAKC,IAAL,CAAUD,OAAV;AACA,mBAAO,KAAKH,YAAL,CAAkBK,IAAlB,CAAuB,kBAAvB,EAA2CF,OAA3C,EACFxJ,IADE,CACG,oBAAY;AACd,wBAAK2J,KAAL,CAAWxE,QAAX;AACA,uBAAOA,QAAP;AACH,aAJE,CAAP;AAKH;;8BAEDsE,qBAAKD,SAAS;AACV,iBAAKJ,YAAL,GAAoB,IAApB;AACA,gBAAII,OAAJ,EAAa;AACTA,wBAAQe,aAAR,GAAwB,KAAKpB,YAAL,CAAkBoB,aAA1C;AACH;AACJ;;8BAEDZ,uBAAMxE,UAAU;AACZ,gBAAIA,YAAYA,SAASoF,aAArB,IAAsCpF,SAASoF,aAAT,CAAuBC,iBAAjE,EAAoF;AAChF,qBAAKrB,YAAL,CAAkBsB,oBAAlB,CAAuCtF,SAASoF,aAAT,CAAuBC,iBAA9D;AACH;AACD,iBAAKpB,YAAL,GAAoB,KAApB;AACH;;;;;;;;;;;;;;;;;;QCzIgBsB;AAEjB,4BAAYC,eAAZ,EAA6B;AAAA;;AACzB,iBAAKA,eAAL,GAAuBA,eAAvB;AACH;;6BAED5J,uBAAM6J,UAAUC,SAASC,YAAY;AAAA;;AACjC,gBAAIC,cAAcH,QAAlB;;AAEA,iBAAKI,UAAL,GAAkB9O,OAAO+O,WAAP,CAAmB,YAAM;AACvC,oBAAI,EAAEF,WAAF,GAAgB,CAApB,EAAuB;AACnB,0BAAKG,IAAL;AACA,wBAAI,MAAKP,eAAL,IAAwB,MAAKA,eAAL,CAAqBQ,OAA7C,IAAwDL,UAA5D,EAAwE;AACpE,8BAAKH,eAAL,CAAqBQ,OAArB,CAA6BL,UAA7B,EAAyC,CAAzC;AACH;AACJ;AACD,oBAAI,MAAKH,eAAL,IAAwB,MAAKA,eAAL,CAAqBQ,OAA7C,IAAwDN,OAA5D,EAAqE;AACjE,0BAAKF,eAAL,CAAqBQ,OAArB,CAA6BN,OAA7B,EAAsCE,WAAtC;AACH;AACJ,aAViB,EAUf,IAVe,CAAlB;AAWH;;6BAEDG,uBAAO;AACHhP,mBAAOkP,aAAP,CAAqB,KAAKJ,UAA1B;AACH;;;;;sBAxBgBN;;;;;;;;ACArB,aAASW,sBAAT,GAAkC;AAC9B,eAAO;AACHC,+BAAmB,2BAAUnL,GAAV,EAAeoL,QAAf,EAAyB;AACxC,oBAAIA,YAAY,IAAhB,EAAsB;AAClBA,+BAAW,IAAX;AACH;AACDpL,sBAAMA,IAAIqL,OAAJ,CAAY,MAAZ,EAAoB,MAApB,EAA4BA,OAA5B,CAAoC,MAApC,EAA4C,MAA5C,CAAN;AACArL,sBAAMA,IAAIqL,OAAJ,CAAY,GAAZ,EAAiB,KAAjB,CAAN;AACA,oBAAIC,QAAQ,IAAInP,MAAJ,CAAW,WAAW6D,GAAX,GAAiB,WAA5B,CAAZ;AACA,oBAAIuL,KAAKD,MAAME,IAAN,CAAWzP,OAAOC,QAAP,CAAgByP,IAA3B,CAAT;AACA,oBAAIF,MAAM,IAAV,EAAgB;AACZ,2BAAOH,QAAP;AACH,iBAFD,MAEO;AACH,2BAAOM,mBAAmBH,GAAG,CAAH,CAAnB,CAAP;AACH;AACJ;AAdE,SAAP;AAgBH;;AAEM,QAAII,0CAAiB,IAAIT,sBAAJ,EAArB;;;;;;;;;;;;;;;;;;AChBA,MAAIzI,0BAAS,6BAAWmJ,SAAX,CAAqB,cAAUnJ,MAAV,CAAiBC,IAAtC,CAAb;;;;;;;;;;;;;;;;;;ACAP,aAASmJ,oBAAT,GAAgC;AAC5B,eAAO;AACHC,wBAAY,oBAASC,IAAT,EAAe;AACvB,oBAAIC,gBAAgB,EAApB;AACA,oBAAID,IAAJ,EAAU;AACN,wBAAI;AACA,4BAAIE,IAAI,IAAIC,IAAJ,CAASH,IAAT,CAAR;AACAC,wCAAgB,sBAAOC,CAAP,EAAU7M,MAAV,CAAiB,YAAjB,CAAhB;AACH,qBAHD,CAGE,OAAO+M,OAAP,EAAgB;AACd,6CAAOC,IAAP,CAAY,4BAA4B/M,KAAxC,EAA+C8M,OAA/C;AACH;AACJ;AACD,oBAAIH,kBAAkB,cAAtB,EAAsC;AAClCA,oCAAgB,IAAhB;AACH;AACD,uBAAOA,aAAP;AACH,aAfE;;AAiBHK,uBAAW,mBAASN,IAAT,EAAe;AACtB,oBAAIO,aAAa,EAAjB;AACA,oBAAIP,IAAJ,EAAU;AACN,wBAAIA,SAAS,cAAb,EAA6B;AACzB,+BAAO,IAAP;AACH;AACD,wBAAI;AACAO,qCAAa,sBAAO,IAAIJ,IAAJ,CAASH,IAAT,CAAP,EAAuB3M,MAAvB,CAA8B,sBAA9B,CAAb;AACH,qBAFD,CAEE,OAAO+M,OAAP,EAAgB;AACdG,qCAAa,IAAb;AACA,6CAAOF,IAAP,CAAY,8BAA8B/M,KAA1C,EAAiD8M,OAAjD;AACH;AACJ;AACD,uBAAOG,UAAP;AACH,aA/BE;;AAiCHC,+BAAmB,2BAAS7G,WAAT,EAAsB;AACrC,oBAAI8G,uBAAuB,EAA3B;AACA,oBAAI9G,WAAJ,EAAiB;AACb,wBAAI+G,iBAAiB/G,YAAY2F,OAAZ,CAAoB,KAApB,EAA0B,EAA1B,CAArB;AACA,wBAAIqB,OAAOD,eAAe7F,MAA1B;;AAEA,wBAAG8F,OAAO,EAAV,EACA;AACID,yCAAiBA,eAAeE,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAjB;AACH;;AAEDH,2CAAuBC,eAAeG,QAAf,EAAvB;AACA,wBAAIF,OAAO,CAAP,IAAYA,OAAO,CAAvB,EAA0B;AACtBF,+CAAuB,MAAMA,oBAA7B;AACH,qBAFD,MAEO,IAAIE,OAAO,CAAX,EAAc;AACjBF,+CAAuB,MAAMA,qBAAqBG,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAN,GAA6C,IAA7C,GAAoDH,qBAAqBG,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAA3E;AACH,qBAFM,MAEA;AACHH,+CAAuB,MAAMA,qBAAqBG,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAN,GAA6C,IAA7C,GAAoDH,qBAAqBG,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAApD,GAA2F,KAA3F,GAAmGH,qBAAqBG,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,CAA1H;AACH;AACJ;AACD,uBAAOH,oBAAP;AACH,aAtDE;;AAwDHK,8BAAkB,0BAASnH,WAAT,EAAsB;AACpC,oBAAIoH,oBAAoB,EAAxB;AACA,oBAAIpH,WAAJ,EAAiB;AACboH,wCAAoBpH,YAAY2F,OAAZ,CAAoB,KAApB,EAA0B,EAA1B,EAA8BsB,SAA9B,CAAwC,CAAxC,EAA0C,EAA1C,CAApB;AACH;AACD,uBAAOG,iBAAP;AACH;AA9DE,SAAP;AAgEH;;AAEM,QAAIC,sCAAe,IAAIlB,oBAAJ,EAAnB;;;;;;;;;;;;;;;QCtEMmB,uBAAAA;AAET,gCAAc;AAAA;AACb;;+BAEDC,6CAAiBC,MAAMC,UAAUC,SAAS;AACtC,gBAAIrR,UAAUA,OAAOkR,gBAArB,EAAuC;AACnClR,uBAAOkR,gBAAP,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC;AACH;AACJ;;+BACDC,mDAAoBH,MAAMC,UAAUC,SAASE,YAAY;AACrD,gBAAIvR,UAAUA,OAAOsR,mBAArB,EAA0C;AACtCtR,uBAAOsR,mBAAP,CAA2BH,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHQG,qBAAAA,qBADZ;AAKG,4BAAYvM,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA;;AAAA;;AAC9F,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;6BAED5L,mCAAY6L,OAAOjP,UAAU;AACzBC,yBAAaoD,OAAb,CAAqB,UAArB,EAAiCrD,SAAS4C,IAA1C;AACA,iCAAOgB,IAAP,CAAY,kBAAZ;AACAtG,mBAAOgG,GAAP,CAAW/F,QAAX,CAAoBgG,MAApB;AACH;;;;;;mBAjBkB;;;;;mBACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDb2L,iBAAAA,iBADZ;AAKG,wBAAY3M,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA;;AAAA;;AAC9F,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;yBAMDG,mCAAa;AAAA;;AACT,gBAAIC,qBAAqB,KAAK3O,IAAL,CAAUoD,EAAV,CAAa,eAAb,EAA8B,EAACwL,eAAe,IAAhB,EAA9B,CAAzB;;AAEA,iBAAKN,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAsDvP,gBAAgB,KAAtE,EAAxB,EACK4P,UADL,CACgB,4BAAoB;AAC5B,oBAAI,CAACC,iBAAiBC,YAAtB,EAAoC;AAChC,0BAAKpN,MAAL,CAAYqN,eAAZ,CAA4B,QAA5B;AACH;AACJ,aALL,EAMKvN,KANL,CAMW,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,sBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,cAAxB;AACH,aATL;AAUH;;;;gCAjBqB;AAClB,uBAAO,KAAK4E,WAAL,CAAiBW,eAAjB,EAAP;AACH;;;;;;;mBAfkB;;;;;mBACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCZZ2M,4BAAAA;;;;;;;;;mBACU;;;;;mBACG;;;;;;;;;;;;;;;;;QCJbC,yBAAAA,iBACT,wBAAYxP,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ2P,0BAAAA,kBACT,yBAAY3P,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ4P,4BAAAA,oBACT,2BAAY5P,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ6P,0BAAAA,kBACT,yBAAY7P,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ8P,2BAAAA,mBACT,0BAAY9P,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ+P,wBAAAA,gBACT,uBAAY/P,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQgQ,4BAAAA,oBACT,2BAAYhQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCrDQiQ,wCAAAA,gCACT,uCAAYjQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQkQ,0BAAAA,kBACT,yBAAYlQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQmQ,iDAAAA,yCACT,gDAAYnQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQoQ,mCAAAA,2BACT,kCAAYpQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQqQ,mCAAAA,2BACT,kCAAYrQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQsQ,oCAAAA,4BACT,mCAAYtQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQuQ,6BAAAA,qBACT,4BAAYvQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCrDQwQ,wCAAAA,gCACT,uCAAYxQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCLQyQ,oBAAAA,YACT,mBAAYzQ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ0Q,qBAAAA,aACT,oBAAY1Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ2Q,wBAAAA,gBACT,uBAAY3Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ4Q,mCAAAA,2BACT,kCAAY5Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ6Q,+BAAAA,uBACT,8BAAY7Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ8Q,kCAAAA,0BACT,iCAAY9Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQ+Q,6BAAAA,qBACT,4BAAY/Q,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCrDQgR,6BAAAA,qBACT,4BAAYhR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQiR,0BAAAA,kBACT,yBAAYjR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQkR,4BAAAA,oBACT,2BAAYlR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQmR,2CAAAA,mCACT,0CAAYnR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQoR,6BAAAA,qBACT,4BAAYpR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;QAGQqR,6BAAAA,qBACT,4BAAYrR,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZyP,mBAAOC,MAAP,CAAc,IAAd,EAAoB1P,UAApB;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;QCxCQsR,sCAAAA,sCADZ,sCAAe,eAAf;;;;;8CAGG1Q,yBAAOP,OAAO;AACV,mBAAO,uBAAayM,UAAb,CAAwBzM,KAAxB,CAAP;AACH;;8CAEDkR,6BAASlR,OAAO;AACZ,mBAAO,uBAAagN,SAAb,CAAuBhN,KAAvB,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCRQmR,0CAAAA,0CADZ,sCAAe,mBAAf;;;;;kDAGG5Q,yBAAOP,OAAO;AACV,mBAAO,2BAAaoR,cAAb,CAA4BpR,KAA5B,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCJQqR,uCAAAA,uCADZ,sCAAe,gBAAf;;;;;+CAGG9Q,yBAAOP,OAAO;AACV,mBAAO,2BAAakN,iBAAb,CAA+BlN,KAA/B,CAAP;AACH;;+CAEDkR,6BAASlR,OAAO;AACZ,mBAAO,2BAAawN,gBAAb,CAA8BxN,KAA9B,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXQsR,uCAAAA;;;;;+CACT/Q,yBAAOP,OAAO;AACV,gBAAIA,UAAU,GAAd,EAAmB;AACf,uBAAO,cAAP;AACH,aAFD,MAEO;AACH,oBAAIuR,iBAAiB,sBAAOvR,KAAP,EAAcD,MAAd,CAAqB,KAArB,CAArB;AACA,uBAAOwR,eAAejE,SAAf,CAAyBiE,eAAehK,MAAf,GAAwB,CAAjD,EAAoDgK,eAAehK,MAAnE,CAAP;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCUQiK,0CAAAA,0CADZ;AAIG,iDAAY7P,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;kDAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACArR;AACH,aAHM,CAAP;AAIH;;kDAEDwU,uDAAuB;AACnB,iBAAK,IAAItK,IAAI,CAAb,EAAgBA,IAAI,KAAKqK,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCQ,MAApD,EAA4DC,GAA5D,EAAiE;AAC7D,oBAAI6B,oBAAoB,KAAKwI,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCS,CAAhC,CAAxB;AACA,mDACKwK,MADL,CACY,gBADZ,EAC8BC,QAD9B,GAEKC,EAFL,CAEQ7I,iBAFR;AAGH;AACJ;;kDAED8I,+GAAkD9D,OAAO+D,gBAAgB1J,oCAAoC;AACzG,iBAAKmJ,EAAL,CAAQE,IAAR,CAAalJ,iCAAb,CAA+CuJ,eAAe/I,iBAA9D,EAAiFX,kCAAjF;AACH;;kDAED2J,yBAAOhE,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,mBAAW;AAC1B,uBAAKkO,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACArO;AACH,aAHM,CAAP;AAIH;;kDAEDgV,6CAAkB;AACd,gBAAI5L,cAAc,EAAlB;AACA,iCAA8B,KAAKmL,EAAL,CAAQE,IAAR,CAAahL,kBAA3C,kHAA+D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAAtDsC,iBAAsD;;AAC3D,oBAAIA,kBAAkB5D,cAAlB,KAAqC,IAArC,IAA6C4D,kBAAkB5D,cAAlB,CAAiC8B,MAAjC,IAA2C,CAA5F,EAA+F;AAC3Fb,kCAAcA,cAAc2C,kBAAkBX,kCAAlB,CAAqDnD,mBAAnE,GAAyF,GAAzF,GAA+F8D,kBAAkB5D,cAAjH,GAAkI,GAAhJ;AACH;AACJ;AACDiB,0BAAc,iBAAE6L,OAAF,CAAU7L,WAAV,EAAuB,GAAvB,CAAd;AACA,mBAAOA,WAAP;AACH;;kDAED8L,uBAAO;AAAA;;AACH,mBAAO,IAAIvV,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAIlM,cAAc,OAAK4L,eAAL,EAAlB;AACA,4BAAIO,UAAU;AACVC,4CAAgB,WADN;AAEVpM,yCAAaA;AAFH,yBAAd;AAIA,+BAAKyE,eAAL,CAAqBQ,OAArB,CAA6B,uCAAoBkH,OAApB,CAA7B;AACH;AACDvV;AACH,iBAXL,EAYKmE,KAZL,CAYW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACA,2BAAKjR,YAAL,CAAkB9E,KAAlB,CAAwB,iBAAxB;AACAyV,2BAAOM,cAAP;AACH,iBAhBL;AAiBH,aAlBM,CAAP;AAoBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1EQC,iCAAAA,iCADZ;AAIG,wCAAYrR,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;yCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,sBAAKZ,EAAL,GAAUlD,SAAV;AACA,oBAAI3E,UAAU;AACVvD,4BAAQ,MAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEV0M,2BAAO,MAAKtB,EAAL,CAAQE,IAAR,CAAaoB;AAFV,iBAAd;AAIA,sBAAK/E,WAAL,CAAiB3D,cAAjB,CAAgCT,OAAhC,EACKxJ,IADL,CACU,oBAAY;AACd,0BAAKqR,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACArI;AACH,iBAJL,EAKKmE,KALL,CAKW,kBAAU;AACb,yCAAOzE,KAAP,CAAaiS,MAAb;AACA,0BAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACAyV,2BAAOxD,MAAP;AACH,iBATL;AAUH,aAhBM,CAAP;AAiBH;;yCAEDoD,yBAAOQ,SAAS;AACZ,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACH;;yCAEDrB,uCAAc+D,OAAO;AAAA;;AACjB,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAI5I,UAAU;AACVvD,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,4CAAgB,OAFN;AAGVM,yCAAa,OAAKvB,EAAL,CAAQ/L,YAHX;AAIVC,mCAAO,OAAK8L,EAAL,CAAQ/L,YAJL;AAKVE,uCAAW;AALD,yBAAd;AAOA,+BAAKoI,WAAL,CAAiB9D,aAAjB,CAA+BN,OAA/B,EACKxJ,IADL,CACU,oBAAY;AACd,mCAAKqR,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyBZ,SAASY,SAAlC;AACA,mCAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6Bb,SAASa,aAAtC;AACA,gCAAIb,SAAS0N,eAAT,KAA6B,MAAjC,EAAyC;AACrC,uCAAKC,mBAAL,CAAyB3N,QAAzB;AACH,6BAFD,MAEO;AACH,uCAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,2BAAxB;AACH;AACDM;AACH,yBAVL,EAWKmE,KAXL,CAWW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACA,mCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACAyV,mCAAOxD,MAAP;AACH,yBAfL;AAgBH,qBAxBD,MAwBO;AACH3R;AACH;AACJ,iBA7BL,EA8BKmE,KA9BL,CA8BW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACAN,2BAAOM,cAAP;AACH,iBAjCL;AAkCH,aAnCM,CAAP;AAoCH;;yCAEDO,mDAAoBT,SAAS;AAAA;;AACzB,gBAAIU,uBAAuB;AACvBxB,sBAAM;AACFtL,4BAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADnB;AAEFF,+BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SAFtB;AAGFC,mCAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL;AAH1B,iBADiB;AAMvBgN,kCAAkB,EANK;AAOvBC,0CAA0B;AAPH,aAA3B;AASAF,iCAAqBG,aAArB,GAAqC;AACjC,gCAAgB,KAAK7B,EAAL,CAAQ/L;AADS,aAArC;AAGA,mBAAO,KAAKqI,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uDAAD,EAAmCC,OAAO2E,oBAA1C,EAAgEtU,gBAAgB,KAAhF,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,oBAAIC,iBAAiBC,YAArB,EAAmC;AAC/B,wBAAID,iBAAiB6E,MAAjB,IAA2B7E,iBAAiB6E,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAK9R,YAAL,CAAkBkB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKsH,aAAL;AACH,qBAHD,MAGO;AACH,+BAAKxI,YAAL,CAAkBkB,IAAlB,CAAuB,4BAAvB;AACH;AACJ,iBAPD,MAOO;AACH,2BAAK6Q,kBAAL,CAAwB/E,iBAAiB6E,MAAzC;AACH;AACJ,aAZE,EAaFlS,KAbE,CAaI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkBkB,IAAlB,CAAuB,yBAAvB;AACH,aAhBE,CAAP;AAiBH;;yCAED6Q,iDAAmBhB,SAAS;AACxB,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,wCAAqBkH,OAArB,CAA7B;AACH;;yCAEDiB,2CAAgBjB,SAAS;AACrB,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,qCAAkBkH,OAAlB,CAA7B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCjHQkB,iCAAAA,iCADZ;AAKG,wCAAYpS,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AAAA,iBAFrH4F,WAEqH,GAFvG,EAEuG;;AACjH,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;yCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQoC,eAAR,GAA0B,IAA1B;AACA,sBAAKnC,oBAAL;AACAxU;AACH,aALM,CAAP;AAMH;;yCAEDsF,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,uCAAkD;AAAA,uBAAW,OAAKC,mBAAL,CAAyBtB,OAAzB,CAAX;AAAA,aAAlD,CADJ;AAGH;;yCAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;yCAEDzC,uDAAuB;AACnB,+CACKE,MADL,CACY,iBADZ,EAC+BC,QAD/B,GAEKC,EAFL,CAEQ,KAAKL,EAFb;AAGH;;yCAEDQ,yBAAOhE,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,mBAAW;AAC1B,uBAAKkO,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACArO;AACH,aAHM,CAAP;AAIH;;yCAEDkV,qBAAKnE,OAAO;AAAA;;AACR,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAIC,UAAU;AACVC,4CAAgB,OADN;AAEV/M,mCAAO,OAAK8L,EAAL,CAAQoC,eAAR,CAAwBlO;AAFrB,yBAAd;AAIA,+BAAKoF,eAAL,CAAqBQ,OAArB,CAA6B,sCAAmBkH,OAAnB,CAA7B;AACH;AACDvV;AACH,iBAVL,EAWKmE,KAXL,CAWW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACA,2BAAKjR,YAAL,CAAkB9E,KAAlB,CAAwB,iBAAxB;AACAyV,2BAAOM,cAAP;AACH,iBAfL;AAgBH,aAjBM,CAAP;AAkBH;;yCAEDoB,mDAAoBtB,SAAS;AAAA;;AACzB,gBAAI2B,uBAAuB;AACvBzC,sBAAM;AACFtL,4BAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADnB;AAEFF,+BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SAFtB;AAGFC,mCAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAH1B;AAIFI,kCAAc,KAAKiL,EAAL,CAAQE,IAAR,CAAanL;AAJzB,iBADiB;AAOvB4M,kCAAkB,EAPK;AAQvBC,0CAA0B;AARH,aAA3B;AAUAe,iCAAqBd,aAArB,GAAqC;AACjC,+BAAe,KAAK7B,EAAL,CAAQoC,eAAR,CAAwB5N;AADN,aAArC;AAGA,mBAAO,KAAK8H,aAAL,CAAmBO,IAAnB,CAAwB;AAC3BC,uEAD2B;AAE3BC,uBAAO4F,oBAFoB;AAG3BvV,gCAAgB;AAHW,aAAxB,EAKF4P,UALE,CAKS,4BAAoB;AAC5B,oBAAIC,iBAAiBC,YAArB,EAAmC;AAC/B,wBAAID,iBAAiB6E,MAAjB,IAA2B7E,iBAAiB6E,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAK9R,YAAL,CAAkBkB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKwP,IAAL;AACH,qBAHD,MAGO;AACH,+BAAK1Q,YAAL,CAAkBkB,IAAlB,CAAuB,4BAAvB;AACH;AACJ;AACJ,aAdE,EAeFvB,KAfE,CAeI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkBkB,IAAlB,CAAuB,yBAAvB;AACH,aAlBE,CAAP;AAmBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC7GQyR,gCAAAA,gCADZ;AAIG,uCAAY9S,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;wCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,sBAAKZ,EAAL,GAAUlD,SAAV;AACA,oBAAI3E,UAAU;AACVvD,4BAAQ,MAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,oCAAgB,WAFN;AAGV4B,+BAAW,MAAK7C,EAAL,CAAQ6C;AAHT,iBAAd;AAKA,sBAAKtG,WAAL,CAAiB9D,aAAjB,CAA+BN,OAA/B,EACKxJ,IADL,CACU,oBAAY;AACd,wBAAImF,SAAS0N,eAAT,KAA6B,MAAjC,EAAyC;AACrC,8BAAKxB,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACA,8BAAKmM,oBAAL;AACH,qBAHD,MAGO;AACH,8BAAKhQ,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACH;AACDM;AACH,iBATL,EAUKmE,KAVL,CAUW,kBAAU;AACb,yCAAOzE,KAAP,CAAaiS,MAAb;AACA,0BAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACAyV,2BAAOxD,MAAP;AACH,iBAdL;AAeH,aAtBM,CAAP;AAuBH;;wCAED6C,uDAAuB;AACnB,iBAAK,IAAItK,IAAI,CAAb,EAAgBA,IAAI,KAAKqK,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCQ,MAApD,EAA4DC,GAA5D,EAAiE;AAC7D,oBAAI6B,oBAAoB,KAAKwI,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCS,CAAhC,CAAxB;AACA,mDACKwK,MADL,CACY,gBADZ,EAC8BC,QAD9B,GAEKC,EAFL,CAEQ7I,iBAFR;AAGH;AACJ;;wCAED8I,+GAAkD9D,OAAO+D,gBAAgB1J,oCAAoC;AACzG,iBAAKmJ,EAAL,CAAQE,IAAR,CAAalJ,iCAAb,CAA+CuJ,eAAe/I,iBAA9D,EAAiFX,kCAAjF;AACH;;wCAED2J,yBAAOhE,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,mBAAW;AAC1B,uBAAKkO,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACArO;AACH,aAHM,CAAP;AAIH;;wCAEDgV,6CAAkB;AACd,gBAAI5L,cAAc,EAAlB;AACA,iCAA8B,KAAKmL,EAAL,CAAQE,IAAR,CAAahL,kBAA3C,kHAA+D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAAtDsC,iBAAsD;;AAC3D,oBAAIA,kBAAkB5D,cAAlB,KAAqC,IAArC,IAA6C4D,kBAAkB5D,cAAlB,CAAiC8B,MAAjC,IAA2C,CAA5F,EAA+F;AAC3Fb,kCAAcA,cAAc2C,kBAAkBX,kCAAlB,CAAqDnD,mBAAnE,GAAyF,GAAzF,GAA+F8D,kBAAkB5D,cAAjH,GAAkI,GAAhJ;AACH;AACJ;AACDiB,0BAAc,iBAAE6L,OAAF,CAAU7L,WAAV,EAAuB,GAAvB,CAAd;AACA,mBAAOA,WAAP;AACH;;wCAED8L,uBAAO;AAAA;;AACH,mBAAO,IAAIvV,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,oCAA4B;AAC9B,wBAAImU,yBAAyB/B,KAA7B,EAAoC;AAChC,4BAAIlM,cAAc,OAAK4L,eAAL,EAAlB;AACA,4BAAItI,UAAU;AACVzD,uCAAW,OAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,2CAAe,OAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MAHX;AAIViO,uCAAW,OAAK7C,EAAL,CAAQE,IAAR,CAAa2C,SAJd;AAKV5B,4CAAgB,WALN;AAMVpM,yCAAaA,WANH;AAOVkO,wCAAY,OAAK/C,EAAL,CAAQ+C;AAPV,yBAAd;AASA,+BAAKxG,WAAL,CAAiB5D,gBAAjB,CAAkCR,OAAlC,EACKxJ,IADL,CACU,oBAAY;AACd,gCAAImF,SAASwB,cAAT,KAA4B,MAAhC,EAAwC;AACpC,uCAAK0M,kBAAL,CAAwBlO,QAAxB;AACH,6BAFD,MAEO;AACH,uCAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,iBAAxB;AACA,uCAAK8W,eAAL,CAAqBnO,QAArB;AACH;AACDrI;AACH,yBATL,EAUKmE,KAVL,CAUW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACA,mCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,iBAAxB;AACAyV,mCAAOxD,MAAP;AACH,yBAdL;AAeH,qBA1BD,MA0BO;AACH3R;AACH;AACJ,iBA/BL,EAgCKmE,KAhCL,CAgCW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACA,2BAAKjR,YAAL,CAAkB9E,KAAlB,CAAwB,iBAAxB;AACAyV,2BAAOM,cAAP;AACH,iBApCL;AAqCH,aAtCM,CAAP;AAwCH;;wCAEDc,iDAAmBhB,SAAS;AACxB,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,wCAAqBkH,OAArB,CAA7B;AACH;;wCAEDiB,2CAAgBjB,SAAS;AACrB,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,qCAAkBkH,OAAlB,CAA7B;AACH;;;;;;;;;;;;;;;;;;;;;QC9HQgC,yBAAAA,yBADZ;AAKG,gCAAYlT,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBAFlG4F,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,gBAAIjM,UAAUP,YAAYQ,eAAZ,EAAd;AACA,iBAAKyP,EAAL,CAAQE,IAAR,CAAatL,MAAb,GAAsBtE,UAAUA,QAAQE,QAAlB,GAA6B,IAAnD;AACH;;iCAEDuP,6BAASkD,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIhL,UAAU;AACVzD,2BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,+BAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL;AAHX,aAAd;AAKA,mBAAO,KAAK2H,WAAL,CAAiB1D,OAAjB,CAAyBV,OAAzB,EACFxJ,IADE,CACG,oBAAY;AACd,sBAAKqR,EAAL,CAAQE,IAAR,GAAe,gBAAf;AACA,sBAAKF,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACH,aAJE,EAKFlE,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,sBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;;;;;;;;;;;;;;;;;;;;QClCQiY,wBAAAA,wBADZ;AAWG,+BAAYC,gBAAZ,EAA8B/J,eAA9B,EAA+CrJ,YAA/C,EAA6DjC,IAA7D,EAAmE+B,WAAnE,EAAgFwM,WAAhF,EAA6F;AAAA;;AAAA,iBAT7FyD,EAS6F,GATxF;AACDsD,4BAAY,EADX;AAEDC,4BAAY,EAFX;AAGDvC,yBAAS,EAHR;AAIDa,+BAAe,EAJd;AAKD2B,kCAAkB,EALjB;AAMDC,mCAAmB;AANlB,aASwF;;AACzF,iBAAKJ,gBAAL,GAAwBA,gBAAxB;AACA,iBAAK/J,eAAL,GAAuBA,eAAvB;AACA,iBAAKrJ,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;gCAEDwD,6BAASjD,WAAW;AAChB,iBAAKkD,EAAL,GAAUlD,SAAV;AACH;;gCAED4G,2BAAQlH,OAAO;AACX,iBAAK6G,gBAAL,CAAsBM,EAAtB;AACH;;gCAEDnD,yBAAOhE,OAAO;AACV,iBAAK6G,gBAAL,CAAsB7C,MAAtB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrBQoD,0BAAAA,0BADZ;AAMG,iCAAY9T,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBAFlG4F,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;kCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQiB,cAAR,GAAyB,6BAAe4C,SAAxC;;AAEApY;AACH,aALM,CAAP;AAMH;;kCAEDsF,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,6DAAuE;AAAA,uBAAW,OAAKyB,wCAAL,CAA8C9C,OAA9C,CAAX;AAAA,aAAvE,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,+CAAyD;AAAA,uBAAW,OAAK0B,0BAAL,CAAgC/C,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,+CAAyD;AAAA,uBAAW,OAAK2B,0BAAL,CAAgChD,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGH;;kCAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;kCAEDuB,qFAAqCzH,OAAO;AACxC,iBAAK0H,wBAAL,GAAgC,sFAAhC;AACH;;kCAEDJ,6FAAyC9C,SAAS;AAC9C,iBAAKkD,wBAAL,GAAgC,IAAhC;AACH;;kCAEDC,yDAAuB3H,OAAO;AAC1B,iBAAK0H,wBAAL,GAAgC,wDAAhC;AACH;;kCAEDH,iEAA2B/C,SAAS;AAChC,iBAAKkD,wBAAL,GAAgC,IAAhC;AACH;;kCAEDE,yDAAuB5H,OAAO;AAC1B,iBAAK0H,wBAAL,GAAgC,wDAAhC;AACH;;kCAEDF,iEAA2BhD,SAAS;AAChC,iBAAKkD,wBAAL,GAAgC,IAAhC;AACH;;;;;;;;;;;;;;;;;;;;;QCrEQG,yCAAAA,yCADZ;AAIG,gDAAYvU,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;iDAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKmD,oBAAL;AACAxU;AACH,aAJM,CAAP;AAKH;;iDAEDwU,uDAAuB;AACnB,iBAAK,IAAItK,IAAI,CAAb,EAAgBA,IAAI,KAAKqK,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCQ,MAApD,EAA4DC,GAA5D,EAAiE;AAC7D,oBAAI6B,oBAAoB,KAAKwI,EAAL,CAAQE,IAAR,CAAahL,kBAAb,CAAgCS,CAAhC,CAAxB;AACA,mDACKwK,MADL,CACY,gBADZ,EAC8BC,QAD9B,GAEKC,EAFL,CAEQ7I,iBAFR;AAGH;AACJ;;iDAED8I,+GAAkD9D,OAAO+D,gBAAgB1J,oCAAoC;AACzG,iBAAKmJ,EAAL,CAAQE,IAAR,CAAalJ,iCAAb,CAA+CuJ,eAAe/I,iBAA9D,EAAiFX,kCAAjF;AACH;;iDAEDyN,qBAAK9H,OAAO;AAAA;;AACR,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,oCAA4B;AAC9B,wBAAImU,yBAAyB/B,KAA7B,EAAoC;AAChC,4BAAIhL,2BAA2B,OAAKiK,EAAL,CAAQE,IAAR,CAAa3I,2BAAb,EAA/B;AACA,4BAAIY,UAAU;AACVzD,uCAAW,OAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,2CAAe,OAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MAHX;AAIVmB,sDAA0BA;AAJhB,yBAAd;AAMA,+BAAKwG,WAAL,CAAiBzD,2BAAjB,CAA6CX,OAA7C,EACKxJ,IADL,CACU,oBAAY;AACd,mCAAKsB,YAAL,CAAkB+B,OAAlB,CAA0B,wCAA1B;AACA,mCAAKsH,eAAL,CAAqBQ,OAArB,CAA6B,gEAA7B;AACArO;AACH,yBALL,EAMKmE,KANL,CAMW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACA,mCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sCAAxB;AACAyV,mCAAOxD,MAAP;AACH,yBAVL;AAWH,qBAnBD,MAmBO;AACH,4BAAImH,gBAAgB,IAAIC,KAAJ,CAAU,gBAAV,CAApB;AACA,6CAAOrZ,KAAP,CAAaoZ,aAAb;AACA,+BAAKtU,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACAyV,+BAAO2D,aAAP;AACH;AACJ,iBA3BL,EA4BK3U,KA5BL,CA4BW,qBAAa;AAChB,yCAAOzE,KAAP,CAAasZ,SAAb;AACA7D,2BAAO6D,SAAP;AACH,iBA/BL;AAgCH,aAjCM,CAAP;AAkCH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QClEQC,2BAAAA,2BADZ;AAKG,kCAAY5U,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqHoI,YAArH,EAAmI;AAAA;;AAC/H,iBAAK7U,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKoI,YAAL,GAAoBA,YAApB;;AAEA,iBAAKC,uBAAL,GAA+B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA/B;AACH;;mCAED/E,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQ+E,0BAAR,GAAqC,IAArC;AACA,sBAAK/E,EAAL,CAAQ/L,YAAR,GAAuB,EAAvB;AACA,sBAAK+L,EAAL,CAAQgF,oBAAR,GAA+B,IAA/B;AACA,sBAAKhF,EAAL,CAAQiF,oBAAR,GAA+B,IAA/B;AACA,oBAAI,MAAKjF,EAAL,CAAQE,IAAR,CAAa9K,UAAb,CAAwBM,MAAxB,GAAiC,CAArC,EAAwC;AACpC,0BAAKsK,EAAL,CAAQiF,oBAAR,GAA+B,KAA/B;AACH,iBAFD,MAEO;AACH,0BAAKjF,EAAL,CAAQgF,oBAAR,GAA+B,IAA/B;AACH;AACD,sBAAK/E,oBAAL;AACA,sBAAK0E,YAAL,CAAkB5I,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK6I,uBAApD,EAA6E,KAA7E;AACAnZ;AACH,aAdM,CAAP;AAeH;;mCAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,cADZ,EAC4BC,QAD5B,GACuC8E,KADvC,GAC+CC,WAD/C,4CAEK9E,EAFL,CAEQ,KAAKL,EAFb;AAGH;;mCAEDoF,mCAAa;AACT,iBAAKT,YAAL,CAAkBxI,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKyI,uBAAvD;AACH;;mCAEDC,2CAAgBrI,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM6I,MAAN,CAAaC,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAI9I,MAAM6I,MAAN,CAAaC,EAAb,KAAoB,qBAAxB,EAA+C;AAC3C,4BAAI9I,MAAM1N,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAKyW,YAAL;AACH;AACJ;AACJ;AACJ;AACJ;;mCAEDC,2CAAgBhJ,OAAO+E,aAAa;AAAA;;AAChC,gBAAI5E,qBAAqB,KAAK3O,IAAL,CAAUoD,EAAV,CAAa,kCAAb,EAAiD,EAACwL,eAAe,IAAhB,EAAjD,CAAzB;AACAD,+BAAmBkF,aAAnB,GAAmC;AAC/B,gCAAgBN,YAAYtN;AADG,aAAnC;AAGA,mBAAO,KAAKqI,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAsDvP,gBAAgB,KAAtE,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,oBAAI,CAACC,iBAAiBC,YAAtB,EAAoC;AAChC,2BAAKuI,wBAAL,CAA8BlE,WAA9B;AACH;AACJ,aALE,EAMF3R,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,cAAxB;AACH,aATE,CAAP;AAUH;;mCAEDsa,6DAAyBlE,aAAa;AAAA;;AAClC,gBAAIpJ,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQpL,MADN;AAEV8Q,6BAAa,OAFH;AAGVnE,6BAAaA,YAAYtN,YAHf;AAIVC,uBAAOqN,YAAYrN,KAJT;AAKVE,0BAAUmN,YAAYnN,QALZ;AAMVC,gCAAgBkN,YAAYlN,cANlB;AAOVF,2BAAW;AAPD,aAAd;AASA,mBAAO,KAAKoI,WAAL,CAAiBvD,iBAAjB,CAAmCb,OAAnC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAKqR,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uBAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6Bb,SAASa,aAAtC;AACA,uBAAK1E,YAAL,CAAkBkB,IAAlB,CAAuB,6BAAvB;AACA,uBAAK6O,EAAL,CAAQE,IAAR,CAAa9K,UAAb,CAAwBkC,MAAxB,CAA+B,iBAAED,SAAF,CAAY,OAAK2I,EAAL,CAAQE,IAAR,CAAa9K,UAAzB,EAAqCmM,WAArC,CAA/B,EAAkF,CAAlF;AACA,uBAAKjI,eAAL,CAAqBQ,OAArB,CAA6B,kDAA7B;AACH,aAPE,EAQFlK,KARE,CAQI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,2BAAxB;AACH,aAXE,CAAP;AAYH;;mCAEDwa,qDAAqB1R,cAAc;AAC/B,gBAAI2R,MAAM,iBAAEvO,SAAF,CAAY,KAAK2I,EAAL,CAAQE,IAAR,CAAa9K,UAAzB,EAAqC,UAAUyQ,CAAV,EAAa;AACxD,uBAAOA,EAAE3R,KAAF,KAAYD,YAAnB;AACH,aAFS,CAAV;AAGA,mBAAO2R,MAAM,CAAb;AACH;;mCAEDL,qCAAa/I,OAAO;AAAA;;AAChB,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,oBAAI,OAAK+E,oBAAL,CAA0B,OAAK3F,EAAL,CAAQ/L,YAAlC,CAAJ,EAAqD;AACjD,2BAAK4L,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,4BAAImS,OAAOC,KAAX,EAAkB;AACd,gCAAI5I,UAAU;AACVvD,wCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,gDAAgB,OAFN;AAGVM,6CAAa,OAAKvB,EAAL,CAAQ/L,YAHX;AAIVC,uCAAO,OAAK8L,EAAL,CAAQ/L,YAJL;AAKVE,2CAAW;AALD,6BAAd;AAOA,mCAAKoI,WAAL,CAAiB9D,aAAjB,CAA+BN,OAA/B,EACKxJ,IADL,CACU,oBAAY;AACd,uCAAKqR,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uCAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oCAAIb,SAAS0N,eAAT,KAA6B,MAAjC,EAAyC;AACrC,2CAAKC,mBAAL,CAAyB3N,QAAzB;AACH,iCAFD,MAEO;AACH,2CAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,2BAAxB;AACH;AACDM;AACH,6BAVL,EAWKmE,KAXL,CAWW,kBAAU;AACb,qDAAOzE,KAAP,CAAaiS,MAAb;AACA,uCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACAyV,uCAAOxD,MAAP;AACH,6BAfL;AAgBH,yBAxBD,MAwBO;AACH3R;AACH;AACJ,qBA7BL,EA8BKmE,KA9BL,CA8BW,qBAAa;AAChB,6CAAOzE,KAAP,CAAasZ,SAAb;AACA7D,+BAAO6D,SAAP;AACH,qBAjCL;AAkCH,iBAnCD,MAmCO;AACH,wBAAIqB,sBAAsB,IAAItB,KAAJ,CAAU,uBAAV,CAA1B;AACA,2BAAKvU,YAAL,CAAkB9E,KAAlB,CAAwB2a,mBAAxB;AACAlF,2BAAOkF,mBAAP;AACH;AACJ,aAzCM,CAAP;AA0CH;;mCAEDrE,mDAAoBT,SAAS;AAAA;;AACzB,gBAAIU,uBAAuB;AACvBxB,sBAAM;AACFtL,4BAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADnB;AAEFF,+BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SAFtB;AAGFC,mCAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL;AAH1B,iBADiB;AAMvBgN,kCAAkB,EANK;AAOvBC,0CAA0B;AAPH,aAA3B;AASAF,iCAAqBG,aAArB,GAAqC;AACjC,gCAAgB,KAAK7B,EAAL,CAAQ/L;AADS,aAArC;AAGA,mBAAO,KAAKqI,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uDAAD,EAAmCC,OAAO2E,oBAA1C,EAAgEtU,gBAAgB,KAAhF,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,oBAAIC,iBAAiBC,YAArB,EAAmC;AAC/B,wBAAID,iBAAiB6E,MAAjB,IAA2B7E,iBAAiB6E,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAK9R,YAAL,CAAkBkB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKoU,YAAL;AACH,qBAHD,MAGO;AACH,+BAAKtV,YAAL,CAAkBkB,IAAlB,CAAuB,4BAAvB;AACH;AACJ,iBAPD,MAOO;AACH,2BAAK4U,wBAAL,CAA8B9I,iBAAiB6E,MAA/C;AACA,2BAAKxI,eAAL,CAAqBQ,OAArB,CAA6B,kDAA7B;AAEH;AACJ,aAdE,EAeFlK,KAfE,CAeI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkBkB,IAAlB,CAAuB,yBAAvB;AACH,aAlBE,CAAP;AAmBH;;mCAED4U,6DAAyB/E,SAAS;AAC9B,gBAAIA,OAAJ,EAAa;AACT,oBAAIgF,YAAY;AACZ/R,kCAAc+M,QAAQO,WADV;AAEZrN,2BAAO8M,QAAQO,WAFH;AAGZpN,+BAAW,KAHC;AAIZC,8BAAU,IAJE;AAKZC,oCAAgB;AALJ,iBAAhB;AAOA,qBAAK2L,EAAL,CAAQE,IAAR,CAAa9K,UAAb,CAAwBS,IAAxB,CAA6BmQ,SAA7B;;AAEA,qBAAKhG,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyB,IAAzB;AACA,qBAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6B,IAA7B;AACA,qBAAKqL,EAAL,CAAQ/L,YAAR,GAAuB,EAAvB;AACA,qBAAK+L,EAAL,CAAQgF,oBAAR,GAA+B,IAA/B;AACA,qBAAKhF,EAAL,CAAQiF,oBAAR,GAA+B,KAA/B;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC3MQgB,2BAAAA,2BADZ;AAKG,kCAAYnW,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqHoI,YAArH,EAAmI;AAAA;;AAC/H,iBAAK7U,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKoI,YAAL,GAAoBA,YAApB;;AAEA,iBAAKC,uBAAL,GAA+B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA/B;AACH;;mCAED/E,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQkG,0BAAR,GAAqC,IAArC;AACA,sBAAKlG,EAAL,CAAQxL,WAAR,GAAsB,EAAtB;AACA,sBAAKwL,EAAL,CAAQmG,mBAAR,GAA8B,IAA9B;AACA,sBAAKnG,EAAL,CAAQoG,oBAAR,GAA+B,IAA/B;AACA,oBAAI,MAAKpG,EAAL,CAAQE,IAAR,CAAa/K,QAAb,CAAsBO,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,0BAAKsK,EAAL,CAAQoG,oBAAR,GAA+B,KAA/B;AACH,iBAFD,MAEO;AACH,0BAAKpG,EAAL,CAAQmG,mBAAR,GAA8B,IAA9B;AACH;AACD,sBAAKlG,oBAAL;AACA,sBAAK0E,YAAL,CAAkB5I,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK6I,uBAApD,EAA6E,KAA7E;AACAnZ;AACH,aAdM,CAAP;AAeH;;mCAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,aADZ,EAEKC,QAFL,GAGKiG,SAHL,CAGe,EAHf,EAIKC,SAJL,CAIe,EAJf,EAKKC,OALL,CAKa,2CALb,EAMKpB,WANL,2CAOK9E,EAPL,CAOQ,KAAKL,EAPb;AAQH;;mCAEDoF,mCAAa;AACT,iBAAKT,YAAL,CAAkBxI,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKyI,uBAAvD;AACH;;mCAEDC,2CAAgBrI,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM6I,MAAN,CAAaC,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAI9I,MAAM6I,MAAN,CAAaC,EAAb,KAAoB,oBAAxB,EAA8C;AAC1C,4BAAI9I,MAAM1N,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK0X,YAAL;AACH;AACJ;AACJ;AACJ;AACJ;;mCAEDC,2CAAgBjK,OAAO+E,aAAa;AAAA;;AAChC,gBAAI5E,qBAAqB,KAAK3O,IAAL,CAAUoD,EAAV,CAAa,kCAAb,EAAiD,EAACwL,eAAe,IAAhB,EAAjD,CAAzB;AACAD,+BAAmBkF,aAAnB,GAAmC;AAC/B,+BAAeN,YAAY/M;AADI,aAAnC;AAGA,mBAAO,KAAK8H,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAsDvP,gBAAgB,KAAtE,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,oBAAI,CAACC,iBAAiBC,YAAtB,EAAoC;AAChC,2BAAKwJ,wBAAL,CAA8BnF,WAA9B;AACH;AACJ,aALE,EAMF3R,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,cAAxB;AACH,aATE,CAAP;AAUH;;mCAEDub,6DAAyBnF,aAAa;AAAA;;AAClC,gBAAIpJ,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQpL,MADN;AAEV8Q,6BAAa,OAFH;AAGVnE,6BAAaA,YAAY/M,WAHf;AAIVN,uBAAOqN,YAAYrN,KAJT;AAKVE,0BAAUmN,YAAYnN,QALZ;AAMVC,gCAAgBkN,YAAYlN,cANlB;AAOVF,2BAAW;AAPD,aAAd;AASA,mBAAO,KAAKoI,WAAL,CAAiBvD,iBAAjB,CAAmCb,OAAnC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAKqR,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uBAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6Bb,SAASa,aAAtC;AACA,uBAAK1E,YAAL,CAAkBkB,IAAlB,CAAuB,6BAAvB;AACA,uBAAK6O,EAAL,CAAQE,IAAR,CAAa/K,QAAb,CAAsBmC,MAAtB,CAA6B,iBAAED,SAAF,CAAY,OAAK2I,EAAL,CAAQE,IAAR,CAAa/K,QAAzB,EAAmCoM,WAAnC,CAA7B,EAA8E,CAA9E;AACA,uBAAKjI,eAAL,CAAqBQ,OAArB,CAA6B,kDAA7B;AACH,aAPE,EAQFlK,KARE,CAQI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,2BAAxB;AACH,aAXE,CAAP;AAYH;;mCAEDwb,mDAAoBnS,aAAa;AAC7B,gBAAIoR,MAAM,iBAAEvO,SAAF,CAAY,KAAK2I,EAAL,CAAQE,IAAR,CAAa/K,QAAzB,EAAmC,UAAU0Q,CAAV,EAAa;AACtD,uBAAOA,EAAE3R,KAAF,KAAYM,WAAnB;AACH,aAFS,CAAV;AAGA,mBAAOoR,MAAM,CAAb;AACH;;mCAEDY,qCAAahK,OAAO;AAAA;;AAChB,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,oBAAI,OAAK+F,mBAAL,CAAyB,OAAK3G,EAAL,CAAQxL,WAAjC,CAAJ,EAAmD;AAC/C,2BAAKqL,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,4BAAImS,OAAOC,KAAX,EAAkB;AACd,gCAAI5I,UAAU;AACVvD,wCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,gDAAgB,KAFN;AAGVM,6CAAa,OAAKvB,EAAL,CAAQxL,WAHX;AAIVN,uCAAO,OAAK8L,EAAL,CAAQxL,WAJL;AAKVL,2CAAW;AALD,6BAAd;AAOA,mCAAKoI,WAAL,CAAiB9D,aAAjB,CAA+BN,OAA/B,EACKxJ,IADL,CACU,oBAAY;AACd,uCAAKqR,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uCAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oCAAIb,SAAS0N,eAAT,KAA6B,MAAjC,EAAyC;AACrC,2CAAKoF,mBAAL,CAAyB9S,QAAzB;AACH,iCAFD,MAEO;AACH,2CAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,2BAAxB;AACH;AACDM;AACH,6BAVL,EAWKmE,KAXL,CAWW,kBAAU;AACb,qDAAOzE,KAAP,CAAaiS,MAAb;AACA,uCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACAyV,uCAAOxD,MAAP;AACH,6BAfL;AAgBH,yBAxBD,MAwBO;AACH3R;AACH;AACJ,qBA7BL,EA8BKmE,KA9BL,CA8BW,qBAAa;AAChB,6CAAOzE,KAAP,CAAasZ,SAAb;AACA7D,+BAAO6D,SAAP;AACH,qBAjCL;AAkCH,iBAnCD,MAmCO;AACH,wBAAIoC,sBAAsB,IAAIrC,KAAJ,CAAU,uBAAV,CAA1B;AACA,2BAAKvU,YAAL,CAAkB9E,KAAlB,CAAwB0b,mBAAxB;AACAjG,2BAAOiG,mBAAP;AACH;AACJ,aAzCM,CAAP;AA0CH;;mCAEDD,mDAAoB5F,SAAS;AAAA;;AACzB,gBAAI2B,uBAAuB;AACvBzC,sBAAM;AACFtL,4BAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADnB;AAEFF,+BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SAFtB;AAGFC,mCAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL;AAH1B,iBADiB;AAMvBgN,kCAAkB,EANK;AAOvBC,0CAA0B;AAPH,aAA3B;AASAe,iCAAqBd,aAArB,GAAqC;AACjC,+BAAe,KAAK7B,EAAL,CAAQxL;AADU,aAArC;AAGA,mBAAO,KAAK8H,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uDAAD,EAAmCC,OAAO4F,oBAA1C,EAAgEvV,gBAAgB,KAAhF,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,oBAAIC,iBAAiBC,YAArB,EAAmC;AAC/B,wBAAID,iBAAiB6E,MAAjB,IAA2B7E,iBAAiB6E,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAK9R,YAAL,CAAkBkB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKqV,YAAL;AACH,qBAHD,MAGO;AACH,+BAAKvW,YAAL,CAAkBkB,IAAlB,CAAuB,4BAAvB;AACH;AACJ,iBAPD,MAOO;AACH,2BAAK2V,wBAAL,CAA8B7J,iBAAiB6E,MAA/C;AACA,2BAAKxI,eAAL,CAAqBQ,OAArB,CAA6B,kDAA7B;AACH;AACJ,aAbE,EAcFlK,KAdE,CAcI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkBkB,IAAlB,CAAuB,yBAAvB;AACH,aAjBE,CAAP;AAkBH;;mCAED2V,6DAAyB9F,SAAS;AAC9B,gBAAIA,OAAJ,EAAa;AACT,oBAAI+F,YAAY;AACZvS,iCAAawM,QAAQO,WADT;AAEZrN,2BAAO8M,QAAQO,WAFH;AAGZpN,+BAAW,KAHC;AAIZC,8BAAU,IAJE;AAKZC,oCAAgB;AALJ,iBAAhB;AAOA,qBAAK2L,EAAL,CAAQE,IAAR,CAAa/K,QAAb,CAAsBU,IAAtB,CAA2BkR,SAA3B;;AAEA,qBAAK/G,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyB,IAAzB;AACA,qBAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6B,IAA7B;AACA,qBAAKqL,EAAL,CAAQxL,WAAR,GAAsB,EAAtB;AACA,qBAAKwL,EAAL,CAAQmG,mBAAR,GAA8B,IAA9B;AACA,qBAAKnG,EAAL,CAAQoG,oBAAR,GAA+B,KAA/B;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC9MQY,4BAAAA,4BADZ;AAMG,mCAAYlX,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBAFlG4F,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;oCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQiB,cAAR,GAAyB,6BAAe4C,SAAxC;AACA,sBAAKoD,0BAAL,GAAkC,sFAAlC;AACAxb;AACH,aALM,CAAP;AAMH;;oCAEDsF,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,6DAAuE;AAAA,uBAAW,OAAKyB,wCAAL,CAA8C9C,OAA9C,CAAX;AAAA,aAAvE,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,+CAAyD;AAAA,uBAAW,OAAK0B,0BAAL,CAAgC/C,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,+CAAyD;AAAA,uBAAW,OAAK2B,0BAAL,CAAgChD,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGH;;oCAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;oCAEDwE,qBAAK1K,OAAO;AAAA;;AACR,gBAAI,KAAKwD,EAAL,CAAQiB,cAAR,KAA2B,6BAAe4C,SAA9C,EAAyD;AACrD,qBAAKvK,eAAL,CAAqBQ,OAArB,CAA6B,kDAA8B,EAACmH,gBAAgB,6BAAe4C,SAAhC,EAA9B,CAA7B;AACH,aAFD,MAEO;AACH,oBAAIlH,2BAAJ;AACA,oBAAI,KAAKqD,EAAL,CAAQiB,cAAR,KAA2B,6BAAekG,KAA9C,EAAqD;AACjDxK,yCAAqB,KAAK3O,IAAL,CAAUoD,EAAV,CAAa,wCAAb,EAAuD,EAACwL,eAAe,IAAhB,EAAvD,CAArB;AACH,iBAFD,MAEO,IAAI,KAAKoD,EAAL,CAAQiB,cAAR,KAA2B,6BAAemG,KAA9C,EAAqD;AACxDzK,yCAAqB,KAAK3O,IAAL,CAAUoD,EAAV,CAAa,wCAAb,EAAuD,EAACwL,eAAe,IAAhB,EAAvD,CAArB;AACH;AACD,uBAAO,KAAKN,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAsDvP,gBAAgB,KAAtE,EAAxB,EACF4P,UADE,CACS,4BAAoB;AAC5B,wBAAI,CAACC,iBAAiBC,YAAtB,EAAoC;AAChC,+BAAKyD,IAAL,CAAUnE,KAAV;AACH;AACJ,iBALE,EAMF5M,KANE,CAMI,kBAAU;AACb,yCAAOzE,KAAP,CAAaiS,MAAb;AACA,2BAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,eAAxB;AACH,iBATE,CAAP;AAUH;AACJ;;oCAEDwV,qBAAKnE,OAAO;AACR,gBAAI,KAAKwD,EAAL,CAAQiB,cAAR,KAA2B,6BAAe4C,SAA9C,EAAyD;AACrD,qBAAK7D,EAAL,CAAQiB,cAAR,GAAyB,6BAAekG,KAAxC;AACA,qBAAKF,0BAAL,GAAkC,wDAAlC;AACH,aAHD,MAGO,IAAI,KAAKjH,EAAL,CAAQiB,cAAR,KAA2B,6BAAekG,KAA9C,EAAqD;AACxD,qBAAKnH,EAAL,CAAQiB,cAAR,GAAyB,6BAAemG,KAAxC;AACA,qBAAKH,0BAAL,GAAkC,wDAAlC;AACH,aAHM,MAGA,IAAI,KAAKjH,EAAL,CAAQiB,cAAR,KAA2B,6BAAemG,KAA9C,EAAqD;AACxD,qBAAKpH,EAAL,CAAQiB,cAAR,GAAyB,6BAAe4C,SAAxC;AACA,qBAAKoD,0BAAL,GAAkC,wDAAlC;AACA,qBAAK3N,eAAL,CAAqBQ,OAArB,CAA6B,mDAA7B;AACH;AACJ;;oCAcDgK,6FAAyC9C,SAAS,CACjD;;oCAED+C,iEAA2B/C,SAAS,CACnC;;oCAEDgD,iEAA2BhD,SAAS,CACnC;;;;gCAnB+B;AAC5B,oBAAIqG,sBAAsB,KAA1B;AACA,oBAAI,KAAKrH,EAAL,CAAQiB,cAAR,KAA2B,6BAAe4C,SAA9C,EAAyD;AACrDwD,0CAAsB,KAAKrH,EAAL,CAAQE,IAAR,CAAaoH,gCAAnC;AACH,iBAFD,MAEO,IAAI,KAAKtH,EAAL,CAAQiB,cAAR,KAA2B,6BAAekG,KAA9C,EAAqD;AACxDE,0CAAsB,KAAKrH,EAAL,CAAQE,IAAR,CAAaqH,gBAAnC;AACH,iBAFM,MAEA,IAAI,KAAKvH,EAAL,CAAQiB,cAAR,KAA2B,6BAAemG,KAA9C,EAAqD;AACxDC,0CAAsB,KAAKrH,EAAL,CAAQE,IAAR,CAAasH,kBAAnC;AACH;AACD,uBAAOH,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC7FQI,+BAAAA,+BADZ;AAQG,sCAAY3X,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AAAA,iBALrHmL,mBAKqH,GAL/F,cAAUzV,UAAV,CAAqBI,oCAArB,IAA6D,CAKkC;AAAA,iBAJrHsV,iBAIqH,GAJjG,4BAIiG;AAAA,iBAHrHC,oBAGqH,GAH9F,+BAG8F;AAAA,iBAFrHzF,WAEqH,GAFvG,EAEuG;;AACjH,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,iBAAKsL,KAAL,GAAa,yBAAe,KAAKvO,eAApB,CAAb;AACH;;uCAED2G,uDAAuB;AACnB,+CACKE,MADL,CACY,0BADZ,EACwC2H,MADxC,CAC+C,IAD/C,EAEKzH,EAFL,CAEQ,KAAKL,EAFb;AAGH;;uCAEDD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQ+H,wBAAR,GAAmC,KAAnC;AACA,sBAAK/H,EAAL,CAAQgI,iBAAR,GAA4B,KAA5B;AACA,sBAAKhI,EAAL,CAAQiI,aAAR,GAAwB,MAAKP,mBAA7B;AACA,sBAAKG,KAAL,CAAWnY,KAAX,CAAiB,MAAKgY,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;AACA,sBAAK3H,oBAAL;AACAxU;AACH,aARM,CAAP;AASH;;uCAEDsF,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKsF,iBAApC,EAAuD;AAAA,uBAAa,OAAKO,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKhG,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKuF,oBAApC,EAA0D;AAAA,uBAAa,OAAKQ,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;uCAED5F,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;uCAED0C,mCAAa;AACT,iBAAKyC,KAAL,CAAWhO,IAAX;AACH;;uCAEDqO,6CAAiBC,WAAW;AACxB,iBAAKnI,EAAL,CAAQiI,aAAR,GAAwBE,SAAxB;AACH;;uCAEDC,mDAAoBD,WAAW;AAC3B,iBAAKnI,EAAL,CAAQgI,iBAAR,GAA4B,IAA5B;AACH;;uCAEDrH,qBAAKnE,OAAO;AAAA;;AACR,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,oCAA4B;AAC9B,wBAAImU,yBAAyB/B,KAA7B,EAAoC;AAChC,+BAAKzH,eAAL,CAAqBQ,OAArB,CAA6B,uDAA7B;AACH;AACDrO;AACH,iBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,yCAAOzE,KAAP,CAAaiS,MAAb;AACAwD,2BAAOxD,MAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;;;;;QCpFQiL,0BAAAA,0BADZ;AAIG,iCAAYvY,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAC9F,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;kCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACArR;AACH,aAHM,CAAP;AAIH;;kCAEDiE,uBAAM8M,OAAO;AAAA;;AACT,mBAAO,IAAIpR,OAAJ,CAAY,mBAAW;AAC1B,uBAAKkO,eAAL,CAAqBQ,OAArB,CAA6B,yCAA7B;AACArO;AACH,aAHM,CAAP;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCvBQ6c,2BAAAA,2BADZ;AAIG,kCAAYxY,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKxD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;mCAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACArR;AACH,aAHM,CAAP;AAIH;;mCAED8c,qBAAK/L,OAAO;AAAA;;AACR,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,oBAAI,OAAKZ,EAAL,CAAQsH,gCAAR,IACG,OAAKtH,EAAL,CAAQE,IAAR,CAAaqH,gBADhB,IAEG,OAAKvH,EAAL,CAAQE,IAAR,CAAasH,kBAFpB,EAEwC;AACpC,2BAAKlO,eAAL,CAAqBQ,OAArB,CAA6B,IAAI0O,cAAJ,EAA7B;AACA/c;AACH,iBALD,MAKO;AACH,wBAAIkR,qBAAqB,OAAK3O,IAAL,CAAUoD,EAAV,CAAa,0CAAb,EAAyD,EAACwL,eAAe,IAAhB,EAAzD,CAAzB;AACA,2BAAKN,aAAL,CAAmBO,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAsDvP,gBAAgB,KAAtE,EAAxB,EACK4P,UADL,CACgB,4BAAoB;AAC5B,4BAAI,CAACC,iBAAiBC,YAAtB,EAAoC;AAChC,mCAAK5D,eAAL,CAAqBQ,OAArB,CAA6B,4CAA7B;AACH;AACDrO;AACH,qBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,6CAAOzE,KAAP,CAAaiS,MAAb;AACA,+BAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,eAAxB;AACAyV,+BAAOxD,MAAP;AACH,qBAXL;AAYH;AACJ,aArBM,CAAP;AAsBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1CQqL,qBAAAA,qBADZ;AAQG,4BAAY3Y,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBANlGyD,EAMkG,GAN7F;AACDE,sBAAM;AADL,aAM6F;AAAA,iBAFlGiC,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,gBAAIjM,UAAUP,YAAYQ,eAAZ,EAAd;AACA,iBAAKyP,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBvD,OAAtB;AACH;;6BAEDyP,6BAASkD,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIhL,UAAU;AACVzD,2BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,+BAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL;AAHX,aAAd;AAKA,mBAAO,KAAK2H,WAAL,CAAiB1D,OAAjB,CAAyBV,OAAzB,EACFxJ,IADE,CACG,oBAAY;AACd,sBAAKqR,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACA,sBAAK4U,mBAAL,GAA2B,yBAA3B;AACH,aAJE,EAKF9Y,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,sBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;6BAED4F,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,oDAA8D;AAAA,uBAAW,OAAKsG,+BAAL,CAAqC3H,OAArC,CAAX;AAAA,aAA9D,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,sCAAgD;AAAA,uBAAW,OAAKuG,iBAAL,CAAuB5H,OAAvB,CAAX;AAAA,aAAhD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,gDAA0D;AAAA,uBAAW,OAAKwG,2BAAL,CAAiC7H,OAAjC,CAAX;AAAA,aAA1D,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,yCAAmD;AAAA,uBAAW,OAAKyG,oBAAL,CAA0B9H,OAA1B,CAAX;AAAA,aAAnD,CADJ;AAGH;;6BAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;6BAEDiG,2EAAgC3H,SAAS;AACrC,iBAAK0H,mBAAL,GAA2B,oBAA3B;AACH;;6BAEDE,+CAAkB5H,SAAS;AACvB,iBAAK0H,mBAAL,GAA2B,sBAA3B;AACH;;6BAEDG,mEAA4B7H,SAAS;AACjC,iBAAK0H,mBAAL,GAA2B,qBAA3B;AACH;;6BAEDI,qDAAqB9H,SAAS;AAC1B,iBAAKlR,MAAL,CAAYqN,eAAZ,CAA4B,cAA5B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrEQuB,mCAAAA,mCADZ;AAMG,0CAAY5O,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBAFlG4F,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;2CAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,oBAAI,MAAKkD,EAAL,CAAQ+I,sBAAR,KAAmC,qBAAvC,EAA8D;AAC1D,0BAAKvQ,oBAAL,CAA0B,WAA1B,EACK7J,IADL,CACU,oBAAY;AACd,8BAAKqa,iCAAL,GAAyC,wFAAzC;AACAvd;AACH,qBAJL;AAKH,iBAND,MAMO,IAAI,MAAKuU,EAAL,CAAQ+I,sBAAR,KAAmC,YAAvC,EAAqD;AACxD,0BAAKnQ,cAAL,CAAoB,OAApB,EACKjK,IADL,CACU,oBAAY;AACd,8BAAKqa,iCAAL,GAAyC,sEAAzC;AACAvd;AACH,qBAJL;AAKH,iBANM,MAMA,IAAI,MAAKuU,EAAL,CAAQ+I,sBAAR,KAAmC,YAAvC,EAAqD;AACxD,0BAAKC,iCAAL,GAAyC,sEAAzC;AACH,iBAFM,MAEA,IAAI,MAAKhJ,EAAL,CAAQ+I,sBAAR,KAAmC,WAAvC,EAAoD;AACvD,0BAAKC,iCAAL,GAAyC,oEAAzC;AACH,iBAFM,MAEA;AACH,0BAAK1P,eAAL,CAAqBQ,OAArB,CAA6B,sCAA7B;AACH;AAEJ,aAtBM,CAAP;AAuBH;;2CAED/I,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,oCAA+C;AAAA,uBAAW,OAAK4G,gBAAL,CAAsBjI,OAAtB,CAAX;AAAA,aAA/C,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,qCAAgD;AAAA,uBAAW,OAAK6G,iBAAL,CAAuBlI,OAAvB,CAAX;AAAA,aAAhD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,sCAAiD;AAAA,uBAAW,OAAKL,kBAAL,CAAwBhB,OAAxB,CAAX;AAAA,aAAjD,CADJ;AAGH;;2CAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;2CAED9J,yCAAeqI,gBAAgB;AAAA;;AAC3B,gBAAI9I,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,gCAAgBA,cAFN;AAGVlM,8BAAc,KAAKiL,EAAL,CAAQE,IAAR,CAAanL;AAHjB,aAAd;AAKA,mBAAO,KAAKwH,WAAL,CAAiB3D,cAAjB,CAAgCT,OAAhC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAKqR,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACA,uBAAOA,QAAP;AACH,aAJE,EAKFlE,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;2CAED8d,6CAAiBjI,SAAS;AAAA;;AACtB,gBAAIA,OAAJ,EAAa;AACT,qBAAKxI,oBAAL,CAA0BwI,QAAQC,cAAlC,EAAkDD,QAAQ9M,KAA1D,EACKvF,IADL,CACU,oBAAY;AACd,2BAAK2K,eAAL,CAAqBQ,OAArB,CAA6B,IAAI4D,iBAAJ,CAAsB5J,QAAtB,CAA7B;AACH,iBAHL;AAIH;AACJ;;2CAED0E,qDAAqByI,gBAAgB/M,OAAO;AAAA;;AACxC,gBAAIiE,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,gCAAgBA,cAFN;AAGVlM,8BAAc,KAAKiL,EAAL,CAAQE,IAAR,CAAanL;AAHjB,aAAd;AAKA,gBAAIb,KAAJ,EAAW;AACPiE,wBAAQjE,KAAR,GAAgBA,KAAhB;AACH;AACD,mBAAO,KAAKqI,WAAL,CAAiB/D,oBAAjB,CAAsCL,OAAtC,EACFxJ,IADE,CACG,oBAAY;AACd,oBAAImF,SAAS0N,eAAT,KAA6B,MAAjC,EAAyC;AACrC,2BAAKxB,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACA,2BAAOA,QAAP;AACH,iBAHD,MAGO;AACH,2BAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACH;AACJ,aARE,EASFyE,KATE,CASI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,sBAAxB;AACH,aAZE,CAAP;AAaH;;2CAEDge,+CAAkBnI,SAAS;AAAA;;AACvB,gBAAIA,OAAJ,EAAa;AACT,qBAAKtI,uBAAL,CAA6BsI,QAAQC,cAArC,EAAqDD,QAAQnM,WAA7D,EACKlG,IADL,CACU,oBAAY;AACd,2BAAK2K,eAAL,CAAqBQ,OAArB,CAA6B,IAAI6D,eAAJ,CAAoB7J,QAApB,CAA7B;AACH,iBAHL;AAIH;AACJ;;2CAED4E,2DAAwBuI,gBAAgBpM,aAAa;AAAA;;AACjD,gBAAIsD,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL,MADX;AAEVqM,gCAAgBA,cAFN;AAGVpM,6BAAaA,WAHH;AAIVE,8BAAc,KAAKiL,EAAL,CAAQE,IAAR,CAAanL;AAJjB,aAAd;AAMA,mBAAO,KAAKwH,WAAL,CAAiB7D,uBAAjB,CAAyCP,OAAzC,EACFxJ,IADE,CACG,oBAAY;AACd,uBAAOmF,QAAP;AACH,aAHE,EAIFlE,KAJE,CAII,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,uBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,yBAAxB;AACAyV,uBAAOxD,MAAP;AACH,aARE,CAAP;AASH;;2CAED8L,iDAAoB;AAChB,iBAAK5P,eAAL,CAAqBQ,OAArB,CAA6B,+BAA7B;AACH;;2CAEDkI,iDAAmBhB,SAAS;AACxB,iBAAK1H,eAAL,CAAqBQ,OAArB,CAA6B,2CAA4BkH,OAA5B,CAA7B;AACH;;2CAEDiB,2CAAgBjB,SAAS;AACrB,iBAAKhB,EAAL,CAAQE,IAAR,CAAaxL,SAAb,GAAyB,EAAzB;AACA,iBAAKsL,EAAL,CAAQE,IAAR,CAAavL,aAAb,GAA6B,EAA7B;AACA,iBAAK2E,eAAL,CAAqBQ,OAArB,CAA6B,wCAAyBkH,OAAzB,CAA7B;AACH;;;;;;;;;;;;;;;;;;;;;QC9JQoI,oBAAAA,oBADZ;AAIG,2BAAYtZ,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;4BAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKkD,EAAL,CAAQqJ,iBAAR,GAA4B,CAAC,KAAD,EAAQ,IAAR,CAA5B;AACA,sBAAKpJ,oBAAL;AACAxU;AACH,aALM,CAAP;AAMH;;4BAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,wBADZ,EACsCC,QADtC,GAEKC,EAFL,CAEQ,KAAKL,EAFb;AAGH;;4BAEDQ,yBAAOhE,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,mBAAW;AAC1B,uBAAKkO,eAAL,CAAqBQ,OAArB,CAA6B,+BAA7B;AACArO;AACH,aAHM,CAAP;AAIH;;4BAEDkV,qBAAKnE,OAAO;AAAA;;AACR,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,+BAAKzH,eAAL,CAAqBQ,OAArB,CAA6B,6CAA7B;AACH;AACDrO;AACH,iBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,yCAAOzE,KAAP,CAAaiS,MAAb;AACAwD,2BAAOxD,MAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;;;;;QCvDQkM,eAAAA,eADZ;AAIG,sBAAYxZ,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqH;AAAA;;AACjH,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACH;;uBAEDwD,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACArR;AACH,aAHM,CAAP;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCZQ8d,gBAAAA,gBADZ;AAQG,uBAAYzZ,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBANlGyD,EAMkG,GAN7F;AACDE,sBAAM;AADL,aAM6F;AAAA,iBAFlGiC,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,iBAAKiN,cAAL,GAAsB,uBAAtB;AACH;;wBAEDzY,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,2BAA0C;AAAA,uBAAW,MAAKoH,WAAL,CAAiBzI,OAAjB,CAAX;AAAA,aAA1C,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,+BAA8C;AAAA,uBAAW,MAAKqH,eAAL,CAAqB1I,OAArB,CAAX;AAAA,aAA9C,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,yCAAwD;AAAA,uBAAW,MAAKsH,yBAAL,CAA+B3I,OAA/B,CAAX;AAAA,aAAxD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,0CAAyD;AAAA,uBAAW,MAAKuH,0BAAL,CAAgC5I,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGA,iBAAKmB,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,oCAAmD;AAAA,uBAAW,MAAKwH,oBAAL,CAA0B7I,OAA1B,CAAX;AAAA,aAAnD,CADJ;AAGH;;wBAEDuB,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wBAED+G,mCAAYzI,SAAS;AACjB,iBAAKlR,MAAL,CAAYqN,eAAZ,CAA4B,QAA5B;AACH;;wBAEDuM,2CAAgB1I,SAAS;AAAA;;AACrB,gBAAIA,WAAWA,QAAQ1L,cAAR,KAA2B,WAAtC,IAAqD0L,QAAQ8I,UAAR,KAAuB,UAAhF,EAA4F;AACxF,qBAAK9J,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBmN,OAAtB;AACA,qBAAKwI,cAAL,GAAsB,aAAtB;AACH,aAHD,MAGO,IAAIxI,QAAQ1L,cAAR,KAA2B,SAA3B,IAAwC0L,QAAQ8I,UAAR,KAAuB,UAAnE,EAA+E;AAClF,qBAAKH,yBAAL,CAA+B3I,OAA/B,EAAwCrS,IAAxC,CAA6C,oBAAY;AACrD,2BAAKmB,MAAL,CAAYqN,eAAZ,CAA4B,cAA5B;AACH,iBAFD;AAGH,aAJM,MAIA,IAAI6D,QAAQ1L,cAAR,KAA2B,SAA3B,IAAwC0L,QAAQ8I,UAAR,KAAuB,YAAnE,EAAiF;AACpF,qBAAKH,yBAAL,CAA+B3I,OAA/B,EAAwCrS,IAAxC,CAA6C,oBAAY;AACrD,2BAAKmB,MAAL,CAAYqN,eAAZ,CAA4B,YAA5B;AACH,iBAFD;AAGH,aAJM,MAIA;AACH,qBAAKqM,cAAL,GAAsB,QAAtB;AACH;AACJ;;wBAEDI,mEAA6B;AACzB,iBAAKJ,cAAL,GAAsB,8BAAtB;AACH;;wBAEDG,+DAA0B3I,SAAS;AAC/B,gBAAI7I,UAAU;AACV3H,0BAAU,KAAKwP,EAAL,CAAQE,IAAR,CAAatL,MADb;AAEVmV,0BAAU,KAAK/J,EAAL,CAAQE,IAAR,CAAarL;AAFb,aAAd;AAIA,mBAAO,KAAK9E,WAAL,CAAiBia,KAAjB,CAAuB7R,OAAvB,CAAP;AACH;;wBAED0R,qDAAqB7I,SAAS;AAC1B,iBAAKlR,MAAL,CAAYqN,eAAZ,CAA4B,iBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;QCnFQ8M,6BAAAA,6BADZ;AAKG,oCAAYna,MAAZ,EAAoBwJ,eAApB,EAAqCsG,iBAArC,EAAwDtD,aAAxD,EAAuErM,YAAvE,EAAqFjC,IAArF,EAA2F+B,WAA3F,EAAwGwM,WAAxG,EAAqHoI,YAArH,EAAmI;AAAA;;AAC/H,iBAAK7U,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAK/E,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKoI,YAAL,GAAoBA,YAApB;;AAEA,iBAAKC,uBAAL,GAA+B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA/B;AACH;;qCAED/E,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKmD,oBAAL;AACA,sBAAKD,EAAL,CAAQkK,cAAR,GAAyB,IAAzB;AACA,sBAAKvF,YAAL,CAAkB5I,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK6I,uBAApD,EAA6E,KAA7E;AACAnZ;AACH,aANM,CAAP;AAOH;;qCAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,QADZ,EACsBC,QADtB,GACiCiG,SADjC,CAC2C,CAD3C,EAC8CC,SAD9C,CACwD,GADxD,EAEKnG,MAFL,CAEY,aAFZ,EAE2BC,QAF3B,GAEsCiG,SAFtC,CAEgD,CAFhD,EAEmDC,SAFnD,CAE6D,GAF7D,EAGKjG,EAHL,CAGQ,KAAKL,EAAL,CAAQE,IAHhB;AAIH;;qCAEDkF,mCAAa;AACT,iBAAKT,YAAL,CAAkBxI,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKyI,uBAAvD;AACH;;qCAEDC,2CAAgBrI,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM6I,MAAN,CAAaC,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAI9I,MAAM6I,MAAN,CAAaC,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAI9I,MAAM1N,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAKoJ,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;qCAEDA,yBAAOsE,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAI5I,UAAU;AACVzD,uCAAW,OAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,2CAAe,OAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MAHX;AAIVC,yCAAa,OAAKmL,EAAL,CAAQE,IAAR,CAAarL;AAJhB,yBAAd;AAMA,+BAAK0H,WAAL,CAAiBrE,MAAjB,CAAwBC,OAAxB,EACKxJ,IADL,CACU,oBAAY;AACd,mCAAK2K,eAAL,CAAqBQ,OAArB,CAA6B,iCAAkBhG,QAAlB,CAA7B;AACArI;AACH,yBAJL,EAKKmE,KALL,CAKW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACAwD,mCAAOxD,MAAP;AACH,yBARL;AASH,qBAhBD,MAgBO;AACH3R;AACH;AACJ,iBArBL,EAsBCmE,KAtBD,CAsBO,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACAN,2BAAOM,cAAP;AACH,iBAzBD;AA0BH,aA3BM,CAAP;AA4BH;;qCAEDiJ,iDAAmB3N,OAAO;AACtB,iBAAKlD,eAAL,CAAqBQ,OAArB,CAA6B,uCAA7B;AACH;;;;;;;;;;;;;;;;;;;;;QC3FQsQ,iBAAAA,iBADZ;AAGG,wBAAYta,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAC9F,iBAAKzM,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKxM,WAAL,GAAmBA,WAAnB;AACH;;yBAEDgQ,+BAAW;AACP,mBAAO,KAAKhQ,WAAL,CAAiBsa,MAAjB,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCdQC,sBAAAA,sBADZ;AAOG,6BAAYxa,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBALlGyD,EAKkG,GAL7F;AACDE,sBAAM;AADL,aAK6F;AAAA,iBAFlGiC,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,gBAAIjM,UAAU,KAAKP,WAAL,CAAiBQ,eAAjB,EAAd;AACA,iBAAKyP,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBvD,OAAtB;AACH;;8BAEDyP,6BAASkD,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIhL,UAAU;AACVvD,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL;AADX,aAAd;AAGA,mBAAO,KAAK2H,WAAL,CAAiB1D,OAAjB,CAAyBV,OAAzB,EACFxJ,IADE,CACG,oBAAY;AACd,sBAAKqR,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACH,aAHE,EAIFlE,KAJE,CAII,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,sBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACH,aAPE,CAAP;AAQH;;8BAEDof,iDAAmB/N,OAAO;AACtB,iBAAK1M,MAAL,CAAYqN,eAAZ,CAA4B,iBAA5B;AACH;;8BAEDqN,2CAAgBhO,OAAO;AACnB,iBAAK1M,MAAL,CAAYqN,eAAZ,CAA4B,kBAA5B;AACH;;8BAEDsN,+CAAkBjO,OAAO;AACrB,iBAAK1M,MAAL,CAAYqN,eAAZ,CAA4B,gBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;QC3CQuN,wBAAAA,wBADZ;AAKG,+BAAY5a,MAAZ,EAAoBwJ,eAApB,EAAqCgD,aAArC,EAAoDrM,YAApD,EAAkEjC,IAAlE,EAAwE+B,WAAxE,EAAqFwM,WAArF,EAAkG;AAAA;;AAAA,iBAFlG4F,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAKrS,MAAL,GAAcA,MAAd;AACA,iBAAKwJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKgD,aAAL,GAAqBA,aAArB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;;AAEA,gBAAIjM,UAAUP,YAAYQ,eAAZ,EAAd;AACA,iBAAKyP,EAAL,CAAQE,IAAR,CAAatL,MAAb,GAAsBtE,UAAUA,QAAQE,QAAlB,GAA6B,IAAnD;AACH;;gCAEDuP,6BAASkD,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIhL,UAAU;AACVzD,2BAAW,KAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,+BAAe,KAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,wBAAQ,KAAKoL,EAAL,CAAQE,IAAR,CAAatL;AAHX,aAAd;AAKA,mBAAO,KAAK2H,WAAL,CAAiB1D,OAAjB,CAAyBV,OAAzB,EACFxJ,IADE,CACG,oBAAY;AACd,sBAAKqR,EAAL,CAAQE,IAAR,GAAe,gBAAf;AACA,sBAAKF,EAAL,CAAQE,IAAR,CAAarM,QAAb,CAAsBC,QAAtB;AACH,aAJE,EAKFlE,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaiS,MAAb;AACA,sBAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC7BQwf,gCAAAA,gCADZ;AASG,uCAAYtH,gBAAZ,EAA8B/J,eAA9B,EAA+CsG,iBAA/C,EAAkE3P,YAAlE,EAAgFjC,IAAhF,EAAsF+B,WAAtF,EAAmGwM,WAAnG,EAAgHoI,YAAhH,EAA8H;AAAA;;AAAA,iBAL9H+C,mBAK8H,GALxG,cAAUzV,UAAV,CAAqBM,6BAArB,IAAsD,GAKkD;AAAA,iBAJ9HoV,iBAI8H,GAJ1G,wBAI0G;AAAA,iBAH9HC,oBAG8H,GAHvG,2BAGuG;AAAA,iBAF9HzF,WAE8H,GAFhH,EAEgH;;AAC1H,iBAAKkB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAK/J,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAKpR,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKoI,YAAL,GAAoBA,YAApB;;AAEA,iBAAKC,uBAAL,GAA+B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA/B;AACA,iBAAK+C,KAAL,GAAa,yBAAe,KAAKvO,eAApB,CAAb;AACH;;wCAEDyG,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKmD,oBAAL;AACA,sBAAKD,EAAL,CAAQiI,aAAR,GAAwB,MAAKP,mBAA7B;AACA,sBAAKG,KAAL,CAAWnY,KAAX,CAAiB,MAAKgY,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;;AAEA,sBAAKjD,YAAL,CAAkB5I,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK6I,uBAApD,EAA6E,KAA7E;AACAnZ;AACH,aARM,CAAP;AASH;;wCAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,kBADZ,EACgCC,QADhC,GAC2CiG,SAD3C,CACqD,CADrD,EACwDC,SADxD,CACkE,CADlE,EAEKjG,EAFL,CAEQ,KAAKL,EAFb;AAGH;;wCAEDjP,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKsF,iBAApC,EAAuD;AAAA,uBAAa,OAAKO,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKhG,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKuF,oBAApC,EAA0D;AAAA,uBAAa,OAAKQ,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;wCAED5F,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wCAED0C,mCAAa;AACT,iBAAKyC,KAAL,CAAWhO,IAAX;AACA,iBAAK8K,YAAL,CAAkBxI,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKyI,uBAAvD;AACH;;wCAEDC,2CAAgBrI,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM6I,MAAN,CAAaC,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAI9I,MAAM6I,MAAN,CAAaC,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAI9I,MAAM1N,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK8b,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;wCAED1C,6CAAiBC,WAAW;AACxB,iBAAKnI,EAAL,CAAQiI,aAAR,GAAwBE,SAAxB;AACH;;wCAEDC,mDAAoBD,WAAW;AAC3B,iBAAKnI,EAAL,CAAQgI,iBAAR,GAA4B,IAA5B;AACH;;wCAEDxH,yBAAOhE,OAAO;AACV,iBAAK6G,gBAAL,CAAsB7C,MAAtB;AACH;;wCAEDuB,iCAAWvF,OAAO;AACd,gBAAI1I,WAAW;AACXiO,4BAAY;AADD,aAAf;AAGA,iBAAKsB,gBAAL,CAAsB7C,MAAtB,CAA6B1M,QAA7B;AACH;;wCAED8W,yBAAOpO,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAI5I,UAAU;AACVzD,uCAAW,OAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,2CAAe,OAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MAHX;AAIV8Q,yCAAa,OAJH;AAKVnE,yCAAa,OAAKvB,EAAL,CAAQ/L,YALX;AAMVC,mCAAO,OAAK8L,EAAL,CAAQ/L,YANL;AAOVqN,mCAAO,OAAKtB,EAAL,CAAQ2B;AAPL,yBAAd;AASA,+BAAKpF,WAAL,CAAiBxD,iBAAjB,CAAmCZ,OAAnC,EACKxJ,IADL,CACU,oBAAY;AACd,gCAAImF,SAASM,QAAb,EAAuB;AACnB,uCAAKiP,gBAAL,CAAsBM,EAAtB,CAAyB7P,QAAzB;AACH,6BAFD,MAEO;AACH,uCAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,8BAAxB;AACH;AACDM;AACH,yBARL,EASKmE,KATL,CASW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACA,mCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,yBAAxB;AACAyV,mCAAOxD,MAAP;AACH,yBAbL;AAcH,qBAxBD,MAwBO;AACH3R;AACH;AACJ,iBA7BL,EA8BKmE,KA9BL,CA8BW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACAN,2BAAOM,cAAP;AACH,iBAjCL;AAkCH,aAnCM,CAAP;AAoCH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCnIQ2J,gCAAAA,gCADZ;AASG,uCAAYxH,gBAAZ,EAA8B/J,eAA9B,EAA+CsG,iBAA/C,EAAkE3P,YAAlE,EAAgFjC,IAAhF,EAAsF+B,WAAtF,EAAmGwM,WAAnG,EAAgHoI,YAAhH,EAA8H;AAAA;;AAAA,iBAL9H+C,mBAK8H,GALxG,cAAUzV,UAAV,CAAqBK,6BAArB,IAAsD,GAKkD;AAAA,iBAJ9HqV,iBAI8H,GAJ1G,wBAI0G;AAAA,iBAH9HC,oBAG8H,GAHvG,2BAGuG;AAAA,iBAF9HzF,WAE8H,GAFhH,EAEgH;;AAC1H,iBAAKkB,gBAAL,GAAwBA,gBAAxB;AACA,iBAAK/J,eAAL,GAAuBA,eAAvB;AACA,iBAAKuG,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBuB,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAKpR,YAAL,GAAoBA,YAApB;AACA,iBAAKjC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKwM,WAAL,GAAmBA,WAAnB;AACA,iBAAKoI,YAAL,GAAoBA,YAApB;;AAEA,iBAAKC,uBAAL,GAA+B,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA/B;AACA,iBAAK+C,KAAL,GAAa,yBAAe,KAAKvO,eAApB,CAAb;AACH;;wCAEDyG,6BAASjD,WAAW;AAAA;;AAChB,mBAAO,IAAI1R,OAAJ,CAAY,mBAAW;AAC1B,sBAAK4U,EAAL,GAAUlD,SAAV;AACA,sBAAKmD,oBAAL;AACA,sBAAKD,EAAL,CAAQiI,aAAR,GAAwB,MAAKP,mBAA7B;AACA,sBAAKG,KAAL,CAAWnY,KAAX,CAAiB,MAAKgY,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;;AAEA,sBAAKjD,YAAL,CAAkB5I,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK6I,uBAApD,EAA6E,KAA7E;AACAnZ;AACH,aARM,CAAP;AASH;;wCAEDwU,uDAAuB;AACnB,+CACKE,MADL,CACY,kBADZ,EACgCC,QADhC,GAC2CiG,SAD3C,CACqD,CADrD,EACwDC,SADxD,CACkE,CADlE,EAEKjG,EAFL,CAEQ,KAAKL,EAFb;AAGH;;wCAEDjP,+BAAW;AAAA;;AACP,iBAAKoR,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKsF,iBAApC,EAAuD;AAAA,uBAAa,OAAKO,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKhG,WAAL,CAAiBtM,IAAjB,CACI,KAAKyD,eAAL,CAAqB+I,SAArB,CAA+B,KAAKuF,oBAApC,EAA0D;AAAA,uBAAa,OAAKQ,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;wCAED5F,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKL,WAAZ,EAAyB,UAAUM,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wCAED0C,mCAAa;AACT,iBAAKyC,KAAL,CAAWhO,IAAX;AACA,iBAAK8K,YAAL,CAAkBxI,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKyI,uBAAvD;AACH;;wCAEDC,2CAAgBrI,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM6I,MAAN,CAAaC,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAI9I,MAAM6I,MAAN,CAAaC,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAI9I,MAAM1N,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK8b,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;wCAED1C,6CAAiBC,WAAW;AACxB,iBAAKnI,EAAL,CAAQiI,aAAR,GAAwBE,SAAxB;AACH;;wCAEDC,mDAAoBD,WAAW;AAC3B,iBAAKnI,EAAL,CAAQgI,iBAAR,GAA4B,IAA5B;AACH;;wCAEDxH,yBAAOhE,OAAO;AACV,iBAAK6G,gBAAL,CAAsB7C,MAAtB;AACH;;wCAEDuB,iCAAWvF,OAAO;AACd,gBAAI1I,WAAW;AACXiO,4BAAY;AADD,aAAf;AAGA,iBAAKsB,gBAAL,CAAsB7C,MAAtB,CAA6B1M,QAA7B;AACH;;wCAED8W,yBAAOpO,OAAO;AAAA;;AACV,mBAAO,IAAIpR,OAAJ,CAAY,UAACK,OAAD,EAAUmV,MAAV,EAAqB;AACpC,uBAAKf,UAAL,CAAgBgB,QAAhB,GACKlS,IADL,CACU,kBAAU;AACZ,wBAAImS,OAAOC,KAAX,EAAkB;AACd,4BAAI5I,UAAU;AACVzD,uCAAW,OAAKsL,EAAL,CAAQE,IAAR,CAAaxL,SADd;AAEVC,2CAAe,OAAKqL,EAAL,CAAQE,IAAR,CAAavL,aAFlB;AAGVC,oCAAQ,OAAKoL,EAAL,CAAQE,IAAR,CAAatL,MAHX;AAIV8Q,yCAAa,KAJH;AAKVnE,yCAAa,OAAKvB,EAAL,CAAQxL,WALX;AAMVN,mCAAO,OAAK8L,EAAL,CAAQxL,WANL;AAOV8M,mCAAO,OAAKtB,EAAL,CAAQ2B;AAPL,yBAAd;AASA,+BAAKpF,WAAL,CAAiBxD,iBAAjB,CAAmCZ,OAAnC,EACKxJ,IADL,CACU,oBAAY;AACd,gCAAImF,SAASM,QAAb,EAAuB;AACnB,uCAAKiP,gBAAL,CAAsBM,EAAtB,CAAyB7P,QAAzB;AACH,6BAFD,MAEO;AACH,uCAAK7D,YAAL,CAAkB9E,KAAlB,CAAwB,8BAAxB;AACH;AACDM;AACH,yBARL,EASKmE,KATL,CASW,kBAAU;AACb,iDAAOzE,KAAP,CAAaiS,MAAb;AACA,mCAAKnN,YAAL,CAAkB9E,KAAlB,CAAwB,yBAAxB;AACAyV,mCAAOxD,MAAP;AACH,yBAbL;AAcH,qBAxBD,MAwBO;AACH3R;AACH;AACJ,iBA7BL,EA8BKmE,KA9BL,CA8BW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa+V,cAAb;AACAN,2BAAOM,cAAP;AACH,iBAjCL;AAkCH,aAnCM,CAAP;AAoCH","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import routerConfig from 'config/router';\r\nimport appConfig from 'config/app';\r\nimport authConfig from 'config/auth';\r\nimport localConfig from 'config/local';\r\nimport environment from './environment';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport {Config} from 'aurelia-config';\r\nimport {Router} from 'aurelia-router';\r\nimport {AuthenticateStep} from 'aurelia-authentication';\r\nimport {ValidationMessageProvider} from 'aurelia-validation';\r\nimport {LogManager} from 'aurelia-framework';\r\nimport {ConsoleAppender} from 'aurelia-logging-console';\r\n\r\nLogManager.addAppender(new ConsoleAppender());\r\nLogManager.setLevel(window.location.hostname.match(new RegExp('localhost'))\r\n    ? LogManager.logLevel.debug\r\n    : LogManager.logLevel.error);\r\n\r\nPromise.config({\r\n    warnings: {\r\n        wForgottenReturn: false\r\n    }\r\n});\r\n\r\nfunction getLanguage() {\r\n    return new Promise((resolve) => {\r\n        let lng = 'en';\r\n        resolve(lng);\r\n    });\r\n}\r\n\r\nfunction configureRouter(config) {\r\n    config.title = appConfig.app.title;\r\n    config.addPipelineStep('authorize', AuthenticateStep);\r\n    config.map(routerConfig.routes);\r\n    config.fallbackRoute(routerConfig.fallbackRoute);\r\n}\r\n\r\nfunction setRoot(aurelia) {\r\n    if (aurelia.setupAureliaDone && aurelia.setupI18NDone) {\r\n        aurelia.container.get(Router).configure(configureRouter);\r\n        aurelia.setRoot('app/app');\r\n    }\r\n}\r\n\r\nfunction initialize(aurelia, lng) {\r\n    aurelia.setupAureliaDone = false;\r\n    aurelia.setupI18NDone = false;\r\n    aurelia.use\r\n        .standardConfiguration()\r\n        .feature('resources')\r\n        .feature('components')\r\n        .plugin('aurelia-validation')\r\n        .plugin('aurelia-ux')\r\n        .plugin('aurelia-config', configure => {\r\n            return configure([\r\n                'aurelia-api',\r\n                'aurelia-authentication',\r\n                'aurelia-notification'\r\n            ], appConfig, authConfig, localConfig);\r\n        })\r\n        .plugin('aurelia-dialog', config => {\r\n            config.useDefaults();\r\n            config.useCSS('');\r\n            config.settings.lock = true;\r\n            config.settings.centerHorizontalOnly = false;\r\n            config.settings.startingZIndex = 5;\r\n            config.settings.enableEscClose = true;\r\n            config.settings.rejectOnCancel = true;\r\n        })\r\n        .plugin('aurelia-i18n', instance => {\r\n            instance.i18next.use(Backend);\r\n            let language = localStorage.getItem('language');\r\n            instance.setup({\r\n                backend: {\r\n                    loadPath: 'src/locales/{{lng}}/{{ns}}.json'\r\n                },\r\n                lng: language || appConfig.defaultLocale.language,\r\n                attributes: ['t', 'i18n'],\r\n                fallbackLng: language || appConfig.defaultLocale.language,\r\n                debug: appConfig.i18n.debug,\r\n                interpolation: {\r\n                    format: function (value, format, lng) {\r\n                        const parts = format.split(':');\r\n                        const vc = aurelia.resources.valueConverters[parts.shift()];\r\n                        return vc ? vc.toView(value, ...parts) : value;\r\n                    }\r\n                }\r\n            }).then(() => {\r\n                ValidationMessageProvider.prototype.getMessage = function (key) {\r\n                    const translation = instance.i18next.t(`validationMessages.${key}`);\r\n                    return this.parser.parseMessage(translation);\r\n                };\r\n                ValidationMessageProvider.prototype.getDisplayName = function (propertyName, displayName) {\r\n                    if (displayName !== null && displayName !== undefined) {\r\n                        return displayName;\r\n                    }\r\n                    return instance.i18next.t(`inputParameters.${propertyName}`);\r\n                };\r\n                aurelia.setupI18NDone = true;\r\n                setRoot(aurelia);\r\n            });\r\n        });\r\n\r\n    let mergedConfig = aurelia.container.get(Config);\r\n    if (mergedConfig.fetch('environment') === 'development') {\r\n        aurelia.use.developmentLogging();\r\n    }\r\n\r\n    if (mergedConfig.fetch('environment') === 'testing') {\r\n        aurelia.use.plugin('aurelia-testing');\r\n    }\r\n\r\n    aurelia.start().then(() => {\r\n        aurelia.setupAureliaDone = true;\r\n        setRoot(aurelia);\r\n    });\r\n}\r\n\r\nexport function configure(aurelia) {\r\n    getLanguage().then(lang => {\r\n        initialize(aurelia, lang);\r\n    }).catch(e => {\r\n        initialize(aurelia, 'en');\r\n    });\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {AureliaUX} from 'aurelia-ux';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {logger} from 'util/logger-helper';\r\nimport $ from 'jquery';\r\nimport foundation from 'foundation-sites';\r\n\r\n@inject(Router, AuthService, AureliaUX, Notification, I18N)\r\nexport class App {\r\n\r\n    languages = [\r\n        {code: 'en', locale: 'en-US', flag: 'us'}\r\n    ];\r\n\r\n    constructor(router, authService, ux, notification, i18n) {\r\n        this.router = router;\r\n        this.authService = authService;\r\n        this.ux = ux;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n\r\n        let payload = authService.getTokenPayload();\r\n        this.username = payload ? payload.username : null;\r\n        this.authenticated = this.authService.isAuthenticated();\r\n    }\r\n\r\n    setLanguage(language) {\r\n        localStorage.setItem('language', language.code);\r\n        window.top.location.reload();\r\n    }\r\n\r\n    attached() {\r\n        ux.design.primary = '#704794';\r\n        ux.design.accent = '#e62787';\r\n        logger.info(this.i18n.tr('welcome_notification'));\r\n        this.notification.info('welcome_notification');\r\n    }\r\n}\r\n","export function configure(config) {\r\n    config.globalResources([\r\n        \"./nav-bar/nav-bar\",\r\n        \"./site-footer/site-footer\",\r\n        \"./validation-summary/validation-summary\"\r\n    ]);\r\n}\r\n","export default {\r\n    app: {\r\n        title: 'Corporation Name - Application Name',\r\n        environment: 'development',\r\n    },\r\n    logger: {\r\n        name: 'au-cli-esnext'\r\n    },\r\n    i18n: {\r\n        debug: true\r\n    },\r\n    'aurelia-api': {\r\n        endpoints: [\r\n            {\r\n                name: 'user',\r\n                endpoint: 'http://127.0.0.1:1337/user/',\r\n                // config  : {},\r\n                default: true\r\n            },\r\n            {\r\n                name: 'auth',\r\n                endpoint: 'http://127.0.0.1:1337/',\r\n                // config  : {}\r\n            }\r\n        ],\r\n    },\r\n    defaultLocale: {\r\n        language: 'en',\r\n        locale: 'en-US'\r\n    },\r\n    'aurelia-notification': {\r\n        defaults: {\r\n            timeout: 5000,\r\n            clickToClose: true\r\n        },\r\n        notifications: {\r\n            success: 'humane-flatty-success',\r\n            error: 'humane-flatty-error',\r\n            info: 'humane-flatty-info'\r\n        }\r\n    },\r\n    enrollment: {\r\n        numberOfRequiredChallengeQuestionAnswers: 5,\r\n        numberOfRequiredSmsInfos: 1,\r\n        numberOfRequiredEmailInfos: 1,\r\n        confirmDisclaimerEventTimerStartTime: 1,\r\n        verifyPhoneInfoTimerStartTime: 10,\r\n        verifyEmailInfoTimerStartTime: 10\r\n    }\r\n};\r\n","export default {\r\n    /* @see http://aurelia-authentication.spoonx.org/configuration.html */\r\n    'aurelia-authentication': {\r\n        // Which endpoint (in `./app.js`) to use for auth requests.\r\n        endpoint: 'auth',\r\n\r\n        // Which endpoints to patch with the JWT (Authorization header).\r\n        configureEndpoints: ['auth', 'user'],\r\n\r\n        // The base url used for all authentication related requests, including provider.url below.\r\n        // This appends to the httpClient/endpoint base url (in `./app.js`), it does not override it.\r\n        baseUrl: 'auth',\r\n\r\n        // The API endpoint to which login requests are sent\r\n        loginUrl: '/login',\r\n\r\n        // The API endpoint to which signup requests are sent\r\n        signupUrl: '/signup',\r\n\r\n        // Redirect to this url after successfully logging in\r\n        loginRedirect: '/#/self-service',\r\n\r\n        // The API endpoint used in profile requests (inc. `find/get` and `update`)\r\n        profileUrl: '/me',\r\n\r\n        accessTokenProp: 'access_token',\r\n        refreshTokenProp: 'refresh_token',\r\n        idTokenProp: 'id_token',\r\n        refreshTokenSubmitProp: 'refresh_token',\r\n        refreshTokenUrl: '/refresh-token',\r\n        useRefreshToken: true\r\n    }\r\n};\r\n","/**\r\n * This file gets copied into place on bundle.\r\n * This will become local.js in production.\r\n *\r\n * NOTE: Make sure this file is altered as needed.\r\n */\r\nexport default {\r\n    app: {\r\n        // The environment we're running in.\r\n        environment: '{{environment}}', // Automatically set based on deploy context.\r\n    },\r\n    'aurelia-api': {\r\n        endpoints: [\r\n            {\r\n                name: 'user',        // The name by which you reference this endpoint\r\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\r\n                default: true          // Set this to the default endpoint (defaults to false)\r\n            },\r\n            {\r\n                name: 'auth',       // The name by which you reference this endpoint\r\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\r\n            }\r\n        ]\r\n    }\r\n};\r\n","export default {};\r\n","export default {\r\n    routes: [\r\n        {\r\n            route: ['', '/login'],\r\n            name: 'login',\r\n            moduleId: 'components/views/login/login',\r\n            nav: false,\r\n            auth: false,\r\n            title: 'Login',\r\n            settings: {\r\n                t: 'login_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/logout',\r\n            name: 'logout',\r\n            moduleId: 'components/views/logout/logout',\r\n            title: 'Logout',\r\n            settings: {\r\n                t: 'logout_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/enrollment',\r\n            name: 'enrollment',\r\n            moduleId: 'components/views/enrollment/enrollment',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Enrollment',\r\n            settings: {\r\n                t: 'enrollment_route',\r\n                roles: ['notenrolled']\r\n            }\r\n        }, {\r\n            route: '/challenge',\r\n            name: 'challenge',\r\n            moduleId: 'components/views/challenge/challenge',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Challenge',\r\n            settings: {\r\n                t: 'challenge_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/self-service',\r\n            name: 'self-service',\r\n            moduleId: 'components/views/self-service/self-service',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Self Service',\r\n            settings: {\r\n                t: 'self-service_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/self-service/change-password',\r\n            name: 'change-password',\r\n            moduleId: 'components/views/change-password/change-password',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Change Password',\r\n            settings: {\r\n                t: 'change-password_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/self-service/unlock-profile',\r\n            name: 'unlock-profile',\r\n            moduleId: 'components/views/unlock-profile/unlock-profile',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Unlock Profile',\r\n            settings: {\r\n                t: 'unlock-profile_route',\r\n                roles: []\r\n            }\r\n        }, {\r\n            route: '/self-service/edit-credentials',\r\n            name: 'edit-profile',\r\n            moduleId: 'components/views/edit-credentials/edit-credentials',\r\n            nav: false,\r\n            auth: true,\r\n            title: 'Edit Credentials',\r\n            settings: {\r\n                t: 'edit-credentials_route',\r\n                roles: []\r\n            }\r\n        }],\r\n    fallbackRoute: 'login'\r\n};\r\n","export class ChallengeQuestion {\r\n    challengeQuestionId = '';\r\n    challengeQuestionText = '';\r\n    userAnswerText = '';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    fromJson(response) {\r\n        if (response) {\r\n            if (response.challengeQuestionId) {\r\n                this.challengeQuestionId = response.challengeQuestionId;\r\n            }\r\n            if (response.challengeQuestionText) {\r\n                this.challengeQuestionText = response.challengeQuestionText;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export class ChallengeQuestionAnswer {\r\n    challengeQuestionId = '';\r\n    challengeQuestionText = '';\r\n    userAnswerText = '';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    fromJson(response) {\r\n        if (response) {\r\n            if (response.challengeQuestionId) {\r\n                this.challengeQuestionId = response.challengeQuestionId;\r\n            }\r\n            if (response.challengeQuestionText) {\r\n                this.challengeQuestionText = response.challengeQuestionText;\r\n            }\r\n            if (response.userAnswerText) {\r\n                this.userAnswerText = response.userAnswerText;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export class EmailInfo {\r\n    emailAddress ='';\r\n    label = '';\r\n    isDefault = false;\r\n    verified = false;\r\n    hasActiveToken = false;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    fromJson(response) {\r\n        if (response) {\r\n            if (response.emailAddress) {\r\n                this.emailAddress = response.emailAddress;\r\n            }\r\n            if (response.label) {\r\n                this.label = response.label;\r\n            }\r\n            this.isDefault = Boolean(response.isDefault);\r\n            this.verified = Boolean(response.verified);\r\n            this.hasActiveToken = Boolean(response.hasActiveToken);\r\n        }\r\n    }\r\n}\r\n","export class SmsInfo {\r\n    phoneNumber ='';\r\n    label = '';\r\n    isDefault = false;\r\n    verified = false;\r\n    hasActiveToken = false;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    fromJson(response) {\r\n        if (response) {\r\n            if (response.phoneNumber) {\r\n                this.phoneNumber = response.phoneNumber;\r\n            }\r\n            if (response.label) {\r\n                this.label = response.label;\r\n            }\r\n            this.isDefault = Boolean(response.isDefault);\r\n            this.verified = Boolean(response.verified);\r\n            this.hasActiveToken = Boolean(response.hasActiveToken);\r\n        }\r\n    }\r\n}\r\n","import {ChallengeQuestion} from 'models/challengeQuestion';\r\nimport {ChallengeQuestionAnswer} from 'models/challengeQuestionAnswer';\r\nimport {SmsInfo} from 'models/smsInfo';\r\nimport {EmailInfo} from 'models/emailInfo';\r\nimport {AuthStatusCode} from 'util/common-models';\r\nimport appConfig from 'config/app';\r\nimport _ from 'lodash';\r\n\r\nexport class User {\r\n    sessionId = '';\r\n    transactionId = '';\r\n    userId = '';\r\n    credentials = '';\r\n    fullName = '';\r\n    access_token = '';\r\n    _availableChallengeQuestions = [];\r\n    _challengeQuestionAnswers = [];\r\n    challengeQuestions = [];\r\n    smsInfos = [];\r\n    emailInfos = [];\r\n    availableChallengeCredentialTypes = [];\r\n    numberOfRequiredChallengeQuestionAnswers = appConfig.enrollment.numberOfRequiredChallengeQuestionAnswers || 5;\r\n    numberOfRequiredSmsInfos = appConfig.enrollment.numberOfRequiredSmsInfos || 1;\r\n    numberOfRequiredEmailInfos = appConfig.enrollment.numberOfRequiredEmailInfos || 1;\r\n\r\n    constructor(attributes) {\r\n        this.fromJson(attributes);\r\n    }\r\n\r\n    fromJson(response) {\r\n        if (response) {\r\n            if (response.authStatusCode) {\r\n                this.authStatusCode = AuthStatusCode[response.authStatusCode];\r\n            }\r\n            if (response.sessionId) {\r\n                this.sessionId = response.sessionId;\r\n            }\r\n            if (response.transactionId) {\r\n                this.transactionId = response.transactionId;\r\n            }\r\n            if (response.userId) {\r\n                this.userId = response.userId;\r\n            }\r\n            if (response.userInfo && response.userInfo.fullName) {\r\n                this.fullName = response.userInfo.fullName;\r\n            }\r\n            if (response.access_token) {\r\n                this.access_token = response.access_token;\r\n            }\r\n            let buildChallengeQuestions = false;\r\n            if (response.availableChallengeQuestionAnswers && response.availableChallengeQuestionAnswers.length && response.availableChallengeQuestionAnswers.length > 0) {\r\n                buildChallengeQuestions = true;\r\n                for (let i = 0; i < response.availableChallengeQuestionAnswers.length; i++) {\r\n                    let newChallengeQuestion = new ChallengeQuestion();\r\n                    newChallengeQuestion.fromJson(response.availableChallengeQuestionAnswers[i]);\r\n                    this._availableChallengeQuestions.push(newChallengeQuestion);\r\n                }\r\n            }\r\n            let mapChallengeQuestionAnswers = false;\r\n            if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\r\n                mapChallengeQuestionAnswers = true;\r\n                for (let j = 0; j < response.challengeQuestionAnswers.length; j++) {\r\n                    let newChallengeQuestionAnswer = new ChallengeQuestionAnswer();\r\n                    newChallengeQuestionAnswer.fromJson(response.challengeQuestionAnswers[j]);\r\n                    this._challengeQuestionAnswers.push(newChallengeQuestionAnswer);\r\n                }\r\n            }\r\n            if (response.smsInfos && response.smsInfos.length && response.smsInfos.length > 0) {\r\n                for (let k = 0; k < response.smsInfos.length; k++) {\r\n                    let newSmsInfo = new SmsInfo();\r\n                    newSmsInfo.fromJson(response.smsInfos[k]);\r\n                    this.smsInfos.push(newSmsInfo);\r\n                }\r\n            }\r\n            if (response.emailInfos && response.emailInfos.length && response.emailInfos.length > 0) {\r\n                for (let l = 0; l < response.emailInfos.length; l++) {\r\n                    let newEmailInfo = new EmailInfo();\r\n                    newEmailInfo.fromJson(response.emailInfos[l]);\r\n                    this.emailInfos.push(newEmailInfo);\r\n                }\r\n            }\r\n            if (response.credentialTypes && response.credentialTypes.length && response.credentialTypes.length > 0) {\r\n                for (let m = 0; m < response.credentialTypes.length; m++) {\r\n                    this.availableChallengeCredentialTypes.push(response.credentialTypes[m]);\r\n                }\r\n            }\r\n\r\n            if (buildChallengeQuestions) {\r\n                this.buildChallengeQuestions(this.numberOfRequiredChallengeQuestionAnswers);\r\n            }\r\n            if (mapChallengeQuestionAnswers) {\r\n                if (!buildChallengeQuestions) {\r\n                    if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\r\n                        for (let n = 0; n < response.challengeQuestionAnswers.length; n++) {\r\n                            let newChallengeQuestion = new ChallengeQuestion();\r\n                            newChallengeQuestion.fromJson(response.challengeQuestionAnswers[n]);\r\n                            this._availableChallengeQuestions.push(newChallengeQuestion);\r\n                        }\r\n                        this.buildChallengeQuestions(response.challengeQuestionAnswers.length);\r\n                    }\r\n                }\r\n                this.mapChallengeQuestionAnswers();\r\n            }\r\n        }\r\n    }\r\n\r\n    buildChallengeQuestions(numberOfChallengeQuestions) {\r\n        this.challengeQuestions = [];\r\n        for (let i = 0; i < numberOfChallengeQuestions; i++) {\r\n            this.challengeQuestions.push({\r\n                availableChallengeQuestions: _.orderBy(_.cloneDeep(this._availableChallengeQuestions, ['challengeQuestionId'], ['asc'])),\r\n                selectedAvailableChallengeQuestion: null,\r\n                previouslySelectedAvailableChallengeQuestion: null,\r\n                userAnswerText: '',\r\n                showActualAnswer: false\r\n            });\r\n        }\r\n    }\r\n\r\n    updateAvailableChallengeQuestions(selectedChallengeQuestion, selectedAvailableChallengeQuestion) {\r\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\r\n            let currentChallengeQuestion = this.challengeQuestions[i];\r\n            if (currentChallengeQuestion !== selectedChallengeQuestion) {\r\n                let removedAvailableChallengeQuestion;\r\n                if (selectedAvailableChallengeQuestion !== null) {\r\n                    let index = _.findIndex(currentChallengeQuestion.availableChallengeQuestions, selectedAvailableChallengeQuestion);\r\n                    if (index > -1) {\r\n                        removedAvailableChallengeQuestion = currentChallengeQuestion.availableChallengeQuestions.splice(index, 1);\r\n                    }\r\n                }\r\n                if (selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion !== null) {\r\n                    currentChallengeQuestion.availableChallengeQuestions.splice(0, 0, selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion);\r\n                }\r\n            }\r\n        }\r\n\r\n        selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion = selectedAvailableChallengeQuestion;\r\n    }\r\n\r\n    getChallengeQuestionAnswers() {\r\n        let challengeQuestionAnswers = [];\r\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\r\n            let challengeQuestion = this.challengeQuestions[i];\r\n            if (challengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText && challengeQuestion.userAnswerText) {\r\n                challengeQuestionAnswers.push({\r\n                    challengeQuestionId: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId,\r\n                    challengeQuestionText: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText,\r\n                    userAnswerText: challengeQuestion.userAnswerText\r\n                });\r\n            }\r\n        }\r\n        return challengeQuestionAnswers;\r\n    }\r\n\r\n    mapChallengeQuestionAnswers() {\r\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\r\n            let challengeQuestion = this.challengeQuestions[i];\r\n            let challengeQuestionAnswer = this._challengeQuestionAnswers[i];\r\n            if (challengeQuestion && challengeQuestionAnswer) {\r\n                challengeQuestion.selectedAvailableChallengeQuestion = _.find(challengeQuestion.availableChallengeQuestions, function (a) {\r\n                    return a.challengeQuestionId === challengeQuestionAnswer.challengeQuestionId;\r\n                });\r\n                this.updateAvailableChallengeQuestions(challengeQuestion, challengeQuestion.selectedAvailableChallengeQuestion)\r\n            }\r\n        }\r\n    }\r\n\r\n    get challengeQuestionAnswersComplete() {\r\n        return this._challengeQuestionAnswers && this._challengeQuestionAnswers.length && this._challengeQuestionAnswers.length >= this.numberOfRequiredChallengeQuestionAnswers;\r\n    }\r\n\r\n    get smsInfosComplete() {\r\n        return this.smsInfos && this.smsInfos.length && this.smsInfos.length >= this.numberOfRequiredSmsInfos;\r\n    }\r\n\r\n    get emailInfosComplete() {\r\n        let isValid = false;\r\n        if (this.emailInfos && this.emailInfos.length && this.emailInfos.length >= this.numberOfRequiredEmailInfos) {\r\n            if (this.emailInfos.length > 1) {\r\n                isValid = true;\r\n            } else {\r\n                if (!this.emailInfos[0].emailAddress.match('companyname.com')) {\r\n                    isValid = true;\r\n                }\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n}\r\n","export function configure(config) {\r\n    config.globalResources([\r\n        \"./value-converters/date-formatter\",\r\n        \"./value-converters/phone-formatter\",\r\n        \"./value-converters/timer-formatter\"\r\n    ]);\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {Router} from 'aurelia-router';\r\nimport {Config} from 'aurelia-api';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {logger} from 'util/logger-helper';\r\nimport {DeviceHelper} from 'util/device-helper';\r\n\r\n@inject(Config, DeviceHelper, Router, Notification, AuthService)\r\nexport class UserService {\r\n    isRequesting = false;\r\n\r\n    constructor(config, deviceHelper) {\r\n        this.userEndpoint = config.getEndpoint(\"user\");\r\n        this.deviceHelper = deviceHelper;\r\n    }\r\n\r\n    signin(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('signin', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    analyzePreAuthUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('analyzepreauthuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    challengePreAuthUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('challengepreauthuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    challengeUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('challengeuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n            });\r\n    }\r\n\r\n    authenticatePreAuthUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('authenticatepreauthuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    authenticateUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('authenticateuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    getPreAuthUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('getpreauthuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    getUser(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('getuser', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    addChallengeQuestionAnswers(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('addchallengequestionanswers', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    verifyContactInfo(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('verifycontactinfo', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    removeContactInfo(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('removecontactinfo', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    resetPassword(request) {\r\n        this._pre(request);\r\n        return this.userEndpoint.post('resetcredentials', request)\r\n            .then(response => {\r\n                this._post(response);\r\n                return response;\r\n            });\r\n    }\r\n\r\n    _pre(request) {\r\n        this.isRequesting = true;\r\n        if (request) {\r\n            request.deviceRequest = this.deviceHelper.deviceRequest;\r\n        }\r\n    }\r\n\r\n    _post(response) {\r\n        if (response && response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\r\n            this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\r\n        }\r\n        this.isRequesting = false;\r\n    }\r\n}\r\n","export default class EventTimer {\r\n\r\n    constructor(eventAggregator) {\r\n        this.eventAggregator = eventAggregator;\r\n    }\r\n\r\n    start(interval, tickKey, timeoutKey) {\r\n        let currentTime = interval;\r\n\r\n        this.intervalId = window.setInterval(() => {\r\n            if (--currentTime < 0) {\r\n                this.stop();\r\n                if (this.eventAggregator && this.eventAggregator.publish && timeoutKey) {\r\n                    this.eventAggregator.publish(timeoutKey, 0);\r\n                }\r\n            }\r\n            if (this.eventAggregator && this.eventAggregator.publish && tickKey) {\r\n                this.eventAggregator.publish(tickKey, currentTime);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stop() {\r\n        window.clearInterval(this.intervalId);\r\n    }\r\n}\r\n","function LocationHelperFunction() {\r\n    return {\r\n        getQueryParameter: function (key, default_) {\r\n            if (default_ == null) {\r\n                default_ = null;\r\n            }\r\n            key = key.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\r\n            key = key.replace(\"$\", \"\\\\$\");\r\n            let regex = new RegExp(\"[\\\\?&]\" + key + \"=([^&#]*)\");\r\n            let qs = regex.exec(window.location.href);\r\n            if (qs == null) {\r\n                return default_;\r\n            } else {\r\n                return decodeURIComponent(qs[1]);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport let LocationHelper = new LocationHelperFunction();\r\n","import {LogManager} from 'aurelia-framework';\r\nimport appConfig from 'config/app';\r\n\r\nexport let logger = LogManager.getLogger(appConfig.logger.name);\r\n","import moment from 'moment';\r\nimport {logger} from 'util/logger-helper';\r\n\r\nfunction StringHelperFunction() {\r\n    return {\r\n        formatDate: function(date) {\r\n            let formattedDate = '';\r\n            if (date) {\r\n                try {\r\n                    let d = new Date(date);\r\n                    formattedDate = moment(d).format('MM/DD/YYYY');\r\n                } catch (dateErr) {\r\n                    logger.warn(\"Invalid value for view:\" + value, dateErr);\r\n                }\r\n            }\r\n            if (formattedDate === 'Invalid date') { // this will force the text to be \"\" for invalid dates\r\n                formattedDate = null;\r\n            }\r\n            return formattedDate;\r\n        },\r\n\r\n        parseDate: function(date) {\r\n            let parsedDate = '';\r\n            if (date) {\r\n                if (date === 'Invalid date') { // this will force the text to be \"\" for invalid dates\r\n                    return null;\r\n                }\r\n                try {\r\n                    parsedDate = moment(new Date(date)).format('YYYY-MM-DDTHH:mm:ssZ');\r\n                } catch (dateErr) {\r\n                    parsedDate = null;\r\n                    logger.warn(\"invalid value from view: \" + value, dateErr);\r\n                }\r\n            }\r\n            return parsedDate;\r\n        },\r\n\r\n        formatPhoneNumber: function(phoneNumber) {\r\n            let formattedPhoneNumber = '';\r\n            if (phoneNumber) {\r\n                let rawPhoneNumber = phoneNumber.replace(/\\D/g,'');\r\n                let size = rawPhoneNumber.length;\r\n    \r\n                if(size > 10)\r\n                {\r\n                    rawPhoneNumber = rawPhoneNumber.substring(1, 11);\r\n                }\r\n\r\n                formattedPhoneNumber = rawPhoneNumber.toString();\r\n                if (size > 0 && size < 4) {\r\n                    formattedPhoneNumber = '(' + formattedPhoneNumber;\r\n                } else if (size < 7) {\r\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6);\r\n                } else {\r\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6) + ' - ' + formattedPhoneNumber.substring(6, 10);\r\n                }\r\n            }\r\n            return formattedPhoneNumber;\r\n        },\r\n\r\n        parsePhoneNumber: function(phoneNumber) {\r\n            let parsedPhoneNumber = '';\r\n            if (phoneNumber) {\r\n                parsedPhoneNumber = phoneNumber.replace(/\\D/g,'').substring(0,10);\r\n            }\r\n            return parsedPhoneNumber;\r\n        }\r\n    };\r\n}\r\n\r\nexport let StringHelper = new StringHelperFunction();\r\n","export class WindowHelper {\r\n    \r\n    constructor() {\r\n    }\r\n\r\n    addEventListener(type, listener, options) {\r\n        if (window && window.addEventListener) {\r\n            window.addEventListener(type, listener, options);\r\n        }\r\n    }\r\n    removeEventListener(type, listener, options, useCapture) {\r\n        if (window && window.removeEventListener) {\r\n            window.removeEventListener(type, listener, options);\r\n        }\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class SiteFooter {\r\n    @bindable router = null;\r\n    @bindable languages = null;\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    setLanguage(event, language) {\r\n        localStorage.setItem('language', language.code);\r\n        logger.info('language_changed');\r\n        window.top.location.reload();\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class NavBar {\r\n    @bindable router = null;\r\n    @bindable username = null;\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    get isAuthenticated() {\r\n        return this.authService.isAuthenticated();\r\n    }\r\n\r\n    goToLogout() {\r\n        let confirmDialogModel = this.i18n.tr('logout-dialog', {returnObjects: true});\r\n\r\n        this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (!openDialogResult.wasCancelled) {\r\n                    this.router.navigateToRoute('logout');\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('logout_error');\r\n            });\r\n    }\r\n\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\n\r\nexport class ValidationSummary {\r\n    @bindable errors = null;\r\n    @bindable autofocus = null;\r\n}\r\n","export class ChallengeStart {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeCancel {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeReceived {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeVerify {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeSuccess {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeFail {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\n","export class EnrollmentDisclaimerConfirmed {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollmentStart {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollChallengeQuestionAnswersComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollPhoneInfosComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollEmailInfosComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollCredentialsComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EnrollmentComplete {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n","export class RequiredCredentialTypeChanged {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n","export class GoToLogin {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToLogout {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class SigninSuccess {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChallengeWithCredentials {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AuthenticateUserFail {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AuthenticateUserSuccess {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToForgotPassword {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n","export class GoToChangePassword {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToEditProfile {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToUnlockProfile {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToEditChallengeQuestionAnswers {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToEditPhoneInfos {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GoToEditEmailInfos {\r\n    constructor(attributes) {\r\n        if (attributes) {\r\n            Object.assign(this, attributes);\r\n        }\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\r\nimport {logger} from 'util/logger-helper';\r\nimport StringHelper from 'util/string-helper';\r\n\r\n@valueConverter(\"dateFormatter\")\r\nexport class dateFormatterValueConverter {\r\n\r\n    toView(value) {\r\n        return StringHelper.formatDate(value);\r\n    }\r\n\r\n    fromView(value) {\r\n        return StringHelper.parseDate(value);\r\n    }\r\n\r\n}\r\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\r\nimport {logger} from 'util/logger-helper';\r\nimport {StringHelper} from 'util/string-helper';\r\n\r\n@valueConverter(\"intervalFormatter\")\r\nexport class intervalFormatterValueConverter {\r\n\r\n    toView(value) {\r\n        return StringHelper.formatInterval(value);\r\n    }\r\n\r\n}\r\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\r\nimport {logger} from 'util/logger-helper';\r\nimport {StringHelper} from 'util/string-helper';\r\n\r\n@valueConverter(\"phoneFormatter\")\r\nexport class phoneFormatterValueConverter {\r\n\r\n    toView(value) {\r\n        return StringHelper.formatPhoneNumber(value);\r\n    }\r\n\r\n    fromView(value) {\r\n        return StringHelper.parsePhoneNumber(value)\r\n    }\r\n}\r\n","import numbro from 'numbro';\r\n\r\nexport class TimerFormatterValueConverter {\r\n    toView(value) {\r\n        if (value === '0') {\r\n            return 'Invalid time';\r\n        } else {\r\n            let formattedValue = numbro(value).format('0:0');\r\n            return formattedValue.substring(formattedValue.length - 5, formattedValue.length);\r\n        }\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    ChallengeCancel,\r\n    ChallengeVerify,\r\n    ChallengeSuccess,\r\n    ChallengeFail,\r\n    ChallengeComplete\r\n} from 'resources/messages/challenge-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChallengeWithChallengeQuestions {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\r\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\r\n            ValidationRules\r\n                .ensure('userAnswerText').required()\r\n                .on(challengeQuestion);\r\n        }\r\n    }\r\n\r\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\r\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\r\n    }\r\n\r\n    cancel(event) {\r\n        return new Promise(resolve => {\r\n            this.eventAggregator.publish(new ChallengeCancel());\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    _getCredentials() {\r\n        let credentials = '';\r\n        for (let challengeQuestion of this.vm.user.challengeQuestions) {\r\n            if (challengeQuestion.userAnswerText !== null || challengeQuestion.userAnswerText.length >= 0) {\r\n                credentials = credentials + challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId + '|' + challengeQuestion.userAnswerText + ',';\r\n            }\r\n        }\r\n        credentials = _.trimEnd(credentials, ',');\r\n        return credentials;\r\n    }\r\n\r\n    next() {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let credentials = this._getCredentials();\r\n                        let message = {\r\n                            credentialType: 'Questions',\r\n                            credentials: credentials\r\n                        };\r\n                        this.eventAggregator.publish(new ChallengeVerify(message));\r\n                    }\r\n                    resolve();\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    this.notification.error('challenge_error');\r\n                    reject(validateReason);\r\n                });\r\n        });\r\n\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {VerifyEmailInfoDialog} from 'components/views/verify-email-info-dialog/verify-email-info-dialog';\r\nimport {\r\n    ChallengeCancel,\r\n    ChallengeSuccess,\r\n    ChallengeFail\r\n} from 'resources/messages/challenge-messages';\r\nimport {logger} from 'util/logger-helper';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChallengeWithEmailInfo {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise((resolve, reject) => {\r\n            this.vm = viewModel;\r\n            let request = {\r\n                userId: this.vm.user.userId,\r\n                token: this.vm.user.token\r\n            };\r\n            this.userService.getPreAuthUser(request)\r\n                .then(response => {\r\n                    this.vm.user.fromJson(response);\r\n                    resolve();\r\n                })\r\n                .catch(reason => {\r\n                    logger.error(reason);\r\n                    this.notification.error('get-user_error');\r\n                    reject(reason);\r\n                });\r\n        });\r\n    }\r\n\r\n    cancel(message) {\r\n        this.eventAggregator.publish(new ChallengeCancel());\r\n    }\r\n\r\n    challengeUser(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let request = {\r\n                            userId: this.vm.user.userId,\r\n                            credentialType: 'Email',\r\n                            contactInfo: this.vm.emailAddress,\r\n                            label: this.vm.emailAddress,\r\n                            isDefault: true\r\n                        };\r\n                        this.userService.challengeUser(request)\r\n                            .then(response => {\r\n                                this.vm.user.sessionId = response.sessionId;\r\n                                this.vm.user.transactionId = response.transactionId;\r\n                                if (response.challengeStatus !== 'Deny') {\r\n                                    this.goToVerifyEmailInfo(response);\r\n                                } else {\r\n                                    this.notification.error('challenge-user-deny_error');\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => {\r\n                                logger.error(reason);\r\n                                this.notification.error('challenge-user_error');\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    reject(validateReason);\r\n                })\r\n        });\r\n    }\r\n\r\n    goToVerifyEmailInfo(message) {\r\n        let verifyEmailInfoModel = {\r\n            user: {\r\n                userId: this.vm.user.userId,\r\n                sessionId: this.vm.user.sessionId,\r\n                transactionId: this.vm.user.transactionId\r\n            },\r\n            verificationCode: '',\r\n            verificationCodeHasFocus: true\r\n        };\r\n        verifyEmailInfoModel.messageParams = {\r\n            'emailAddress': this.vm.emailAddress\r\n        };\r\n        return this.dialogService.open({viewModel: VerifyEmailInfoDialog, model: verifyEmailInfoModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (openDialogResult.wasCancelled) {\r\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\r\n                        this.notification.info('verify-email-info_resend');\r\n                        this.challengeUser();\r\n                    } else {\r\n                        this.notification.info('verify-email-info_canceled');\r\n                    }\r\n                } else {\r\n                    this.onChallengeSuccess(openDialogResult.output)\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.info('verify-email-info_error');\r\n            });\r\n    }\r\n\r\n    onChallengeSuccess(message) {\r\n        this.eventAggregator.publish(new ChallengeSuccess(message));\r\n    }\r\n\r\n    onChallengeFail(message) {\r\n        this.eventAggregator.publish(new ChallengeFail(message));\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {VerifyPhoneInfoDialog} from 'components/views/verify-phone-info-dialog/verify-phone-info-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    ChallengeStart,\r\n    ChallengeReceived,\r\n    ChallengeCancel,\r\n    ChallengeSuccess,\r\n    ChallengeFail,\r\n    ChallengeComplete\r\n} from 'resources/messages/challenge-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChallengeWithPhoneInfo {\r\n    vm;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.selectedSmsInfo = null;\r\n            this.applyValidationRules();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(ChallengeReceived, message => this.onChallengeReceived(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('selectedSmsInfo').required()\r\n            .on(this.vm);\r\n    }\r\n\r\n    cancel(event) {\r\n        return new Promise(resolve => {\r\n            this.eventAggregator.publish(new ChallengeCancel());\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    next(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let message = {\r\n                            credentialType: 'Phone',\r\n                            label: this.vm.selectedSmsInfo.label\r\n                        };\r\n                        this.eventAggregator.publish(new ChallengeStart(message));\r\n                    }\r\n                    resolve();\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    this.notification.error('challenge_error');\r\n                    reject(validateReason);\r\n                })\r\n        });\r\n    }\r\n\r\n    onChallengeReceived(message) {\r\n        let verifyPhoneInfoModel = {\r\n            user: {\r\n                userId: this.vm.user.userId,\r\n                sessionId: this.vm.user.sessionId,\r\n                transactionId: this.vm.user.transactionId,\r\n                access_token: this.vm.user.access_token\r\n            },\r\n            verificationCode: '',\r\n            verificationCodeHasFocus: true\r\n        };\r\n        verifyPhoneInfoModel.messageParams = {\r\n            'phoneNumber': this.vm.selectedSmsInfo.phoneNumber\r\n        };\r\n        return this.dialogService.open({\r\n            viewModel: VerifyPhoneInfoDialog,\r\n            model: verifyPhoneInfoModel,\r\n            rejectOnCancel: false\r\n        })\r\n            .whenClosed(openDialogResult => {\r\n                if (openDialogResult.wasCancelled) {\r\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\r\n                        this.notification.info('verify-phone-info_resend');\r\n                        this.next();\r\n                    } else {\r\n                        this.notification.info('verify-phone-info_canceled');\r\n                    }\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.info('verify-phone-info_error');\r\n            });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    ChallengeCancel,\r\n    ChallengeSuccess,\r\n    ChallengeFail\r\n} from 'resources/messages/challenge-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChallengeWithRSAToken {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise((resolve, reject) => {\r\n            this.vm = viewModel;\r\n            let request = {\r\n                userId: this.vm.user.userId,\r\n                credentialType: 'Questions',\r\n                authToken: this.vm.authToken\r\n            };\r\n            this.userService.challengeUser(request)\r\n                .then(response => {\r\n                    if (response.challengeStatus !== 'Deny') {\r\n                        this.vm.user.fromJson(response);\r\n                        this.applyValidationRules();\r\n                    } else {\r\n                        this.notification.error('challenge-user_error');\r\n                    }\r\n                    resolve();\r\n                })\r\n                .catch(reason => {\r\n                    logger.error(reason);\r\n                    this.notification.error('challenge-user_error');\r\n                    reject(reason);\r\n                });\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\r\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\r\n            ValidationRules\r\n                .ensure('userAnswerText').required()\r\n                .on(challengeQuestion);\r\n        }\r\n    }\r\n\r\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\r\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\r\n    }\r\n\r\n    cancel(event) {\r\n        return new Promise(resolve => {\r\n            this.eventAggregator.publish(new ChallengeCancel());\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    _getCredentials() {\r\n        let credentials = '';\r\n        for (let challengeQuestion of this.vm.user.challengeQuestions) {\r\n            if (challengeQuestion.userAnswerText !== null || challengeQuestion.userAnswerText.length >= 0) {\r\n                credentials = credentials + challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId + '|' + challengeQuestion.userAnswerText + ',';\r\n            }\r\n        }\r\n        credentials = _.trimEnd(credentials, ',');\r\n        return credentials;\r\n    }\r\n\r\n    next() {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(controllerValidateResult => {\r\n                    if (controllerValidateResult.valid) {\r\n                        let credentials = this._getCredentials();\r\n                        let request = {\r\n                            sessionId: this.vm.user.sessionId,\r\n                            transactionId: this.vm.user.transactionId,\r\n                            userId: this.vm.user.userId,\r\n                            authToken: this.vm.user.authToken,\r\n                            credentialType: 'Questions',\r\n                            credentials: credentials,\r\n                            bindDevice: this.vm.bindDevice\r\n                        };\r\n                        this.userService.authenticateUser(request)\r\n                            .then(response => {\r\n                                if (response.authStatusCode !== 'Deny') {\r\n                                    this.onChallengeSuccess(response);\r\n                                } else {\r\n                                    this.notification.error('challenge_error');\r\n                                    this.onChallengeFail(response);\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => {\r\n                                logger.error(reason);\r\n                                this.notification.error('challenge_error');\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    this.notification.error('challenge_error');\r\n                    reject(validateReason);\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    onChallengeSuccess(message) {\r\n        this.eventAggregator.publish(new ChallengeSuccess(message));\r\n    }\r\n\r\n    onChallengeFail(message) {\r\n        this.eventAggregator.publish(new ChallengeFail(message));\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {User} from 'models/user';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChangePassword {\r\n    vm;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        let payload = authService.getTokenPayload();\r\n        this.vm.user.userId = payload ? payload.username : null;\r\n    }\r\n\r\n    activate(params, routeConfig, navigationInstruction) {\r\n        let request = {\r\n            sessionId: this.vm.user.sessionId,\r\n            transactionId: this.vm.user.transactionId,\r\n            userId: this.vm.user.userId\r\n        };\r\n        return this.userService.getUser(request)\r\n            .then(response => {\r\n                this.vm.user = new User();\r\n                this.vm.user.fromJson(response);\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('get-user_error');\r\n            });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogController} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(DialogController, EventAggregator, Notification, I18N, AuthService, UserService)\r\nexport class ConfirmDialog {\r\n    vm = {\r\n        headerIcon: '',\r\n        headerText: '',\r\n        message: '',\r\n        messageParams: {},\r\n        cancelButtonText: '',\r\n        confirmButtonText: '',\r\n    };\r\n\r\n    constructor(dialogController, eventAggregator, notification, i18n, authService, userService) {\r\n        this.dialogController = dialogController;\r\n        this.eventAggregator = eventAggregator;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        this.vm = viewModel;\r\n    }\r\n\r\n    confirm(event) {\r\n        this.dialogController.ok();\r\n    }\r\n\r\n    cancel(event) {\r\n        this.dialogController.cancel();\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {CredentialType} from 'util/common-models';\r\nimport {\r\n    EnrollChallengeQuestionAnswersComplete,\r\n    EnrollPhoneInfosComplete,\r\n    EnrollEmailInfosComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EditCredentials {\r\n    vm;\r\n    editCredentialsViewModel;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.credentialType = CredentialType.QUESTIONS;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollChallengeQuestionAnswersComplete, message => this.onEnrollChallengeQuestionAnswersComplete(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollPhoneInfosComplete, message => this.onEnrollPhoneInfosComplete(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollEmailInfosComplete, message => this.onEnrollEmailInfosComplete(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    onGoToEnrollChallengeQuestionAnswers(event) {\r\n        this.editCredentialsViewModel = 'components/views/enroll-challenge-question-answers/enroll-challenge-question-answers';\r\n    }\r\n\r\n    onEnrollChallengeQuestionAnswersComplete(message) {\r\n        this.editCredentialsViewModel = null;\r\n    }\r\n\r\n    onGoToEnrollPhoneInfos(event) {\r\n        this.editCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\r\n    }\r\n\r\n    onEnrollPhoneInfosComplete(message) {\r\n        this.editCredentialsViewModel = null;\r\n    }\r\n\r\n    onGoToEnrollEmailInfos(event) {\r\n        this.editCredentialsViewModel = 'components/views/enroll-email-infos/enroll-email-infos';\r\n    }\r\n\r\n    onEnrollEmailInfosComplete(message) {\r\n        this.editCredentialsViewModel = null;\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    EnrollChallengeQuestionAnswersComplete\r\n} from 'resources/messages/enrollment-messages';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EnrollChallengeQuestionAnswers {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.applyValidationRules();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\r\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\r\n            ValidationRules\r\n                .ensure('userAnswerText').required()\r\n                .on(challengeQuestion);\r\n        }\r\n    }\r\n\r\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\r\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\r\n    }\r\n\r\n    save(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(controllerValidateResult => {\r\n                    if (controllerValidateResult.valid) {\r\n                        let challengeQuestionAnswers = this.vm.user.getChallengeQuestionAnswers();\r\n                        let request = {\r\n                            sessionId: this.vm.user.sessionId,\r\n                            transactionId: this.vm.user.transactionId,\r\n                            userId: this.vm.user.userId,\r\n                            challengeQuestionAnswers: challengeQuestionAnswers\r\n                        };\r\n                        this.userService.addChallengeQuestionAnswers(request)\r\n                            .then(response => {\r\n                                this.notification.success('add-challenge-question-answers_success');\r\n                                this.eventAggregator.publish(new EnrollChallengeQuestionAnswersComplete());\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => {\r\n                                logger.error(reason);\r\n                                this.notification.error('add-challenge-question-answers_error');\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        let validateError = new Error('validate_error');\r\n                        logger.error(validateError);\r\n                        this.notification.error('validate_error');\r\n                        reject(validateError);\r\n                    }\r\n                })\r\n                .catch(exception => {\r\n                    logger.error(exception);\r\n                    reject(exception);\r\n                });\r\n        });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {WindowHelper} from 'util/window-helper';\r\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\r\nimport {VerifyEmailInfoDialog} from 'components/views/verify-email-info-dialog/verify-email-info-dialog';\r\nimport {\r\n    EnrollEmailInfosComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport {logger} from 'util/logger-helper';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\r\nexport class EnrollEmailInfos {\r\n    vm;\r\n    onKeypressInputCallback;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.windowHelper = windowHelper;\r\n\r\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.showEnrollEmailInfoWarning = true;\r\n            this.vm.emailAddress = '';\r\n            this.vm.emailAddressHasFocus = true;\r\n            this.vm.showAddEmailInfoForm = true;\r\n            if (this.vm.user.emailInfos.length > 0) {\r\n                this.vm.showAddEmailInfoForm = false;\r\n            } else {\r\n                this.vm.emailAddressHasFocus = true;\r\n            }\r\n            this.applyValidationRules();\r\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('emailAddress').required().email().withMessage(`\\${$value} is not a valid email address.`)\r\n            .on(this.vm);\r\n    }\r\n\r\n    deactivate() {\r\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\r\n    }\r\n\r\n    onKeypressInput(event) {\r\n        if (typeof event !== 'undefined') {\r\n            if (typeof event.target.id !== 'undefined') {\r\n                if (event.target.id === 'email-address-input') {\r\n                    if (event.key === 'Enter') {\r\n                        this.addEmailInfo();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeEmailInfo(event, contactInfo) {\r\n        let confirmDialogModel = this.i18n.tr('confirm-remove-email-info-dialog', {returnObjects: true});\r\n        confirmDialogModel.messageParams = {\r\n            'emailAddress': contactInfo.emailAddress\r\n        };\r\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (!openDialogResult.wasCancelled) {\r\n                    this.onConfirmRemoveEmailInfo(contactInfo);\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('logout_error');\r\n            });\r\n    }\r\n\r\n    onConfirmRemoveEmailInfo(contactInfo) {\r\n        let request = {\r\n            userId: this.vm.userId,\r\n            contactType: 'Email',\r\n            contactInfo: contactInfo.emailAddress,\r\n            label: contactInfo.label,\r\n            verified: contactInfo.verified,\r\n            hasActiveToken: contactInfo.hasActiveToken,\r\n            isDefault: true\r\n        };\r\n        return this.userService.removeContactInfo(request)\r\n            .then(response => {\r\n                this.vm.user.sessionId = response.sessionId;\r\n                this.vm.user.transactionId = response.transactionId;\r\n                this.notification.info('remove-contact-info_success');\r\n                this.vm.user.emailInfos.splice(_.findIndex(this.vm.user.emailInfos, contactInfo), 1);\r\n                this.eventAggregator.publish(new EnrollEmailInfosComplete());\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('remove-contact-info_error');\r\n            });\r\n    }\r\n\r\n    isEmailAddressUnique(emailAddress) {\r\n        let idx = _.findIndex(this.vm.user.emailInfos, function (s) {\r\n            return s.label === emailAddress;\r\n        });\r\n        return idx < 0;\r\n    }\r\n\r\n    addEmailInfo(event) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isEmailAddressUnique(this.vm.emailAddress)) {\r\n                this.controller.validate()\r\n                    .then(result => {\r\n                        if (result.valid) {\r\n                            let request = {\r\n                                userId: this.vm.user.userId,\r\n                                credentialType: 'Email',\r\n                                contactInfo: this.vm.emailAddress,\r\n                                label: this.vm.emailAddress,\r\n                                isDefault: true\r\n                            };\r\n                            this.userService.challengeUser(request)\r\n                                .then(response => {\r\n                                    this.vm.user.sessionId = response.sessionId;\r\n                                    this.vm.user.transactionId = response.transactionId;\r\n                                    if (response.challengeStatus !== 'Deny') {\r\n                                        this.goToVerifyEmailInfo(response);\r\n                                    } else {\r\n                                        this.notification.error('challenge-user-deny_error');\r\n                                    }\r\n                                    resolve();\r\n                                })\r\n                                .catch(reason => {\r\n                                    logger.error(reason);\r\n                                    this.notification.error('challenge-user_error');\r\n                                    reject(reason);\r\n                                });\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    })\r\n                    .catch(exception => {\r\n                        logger.error(exception);\r\n                        reject(exception);\r\n                    });\r\n            } else {\r\n                let duplicateEmailError = new Error('duplicate-email_error');\r\n                this.notification.error(duplicateEmailError);\r\n                reject(duplicateEmailError);\r\n            }\r\n        });\r\n    }\r\n\r\n    goToVerifyEmailInfo(message) {\r\n        let verifyEmailInfoModel = {\r\n            user: {\r\n                userId: this.vm.user.userId,\r\n                sessionId: this.vm.user.sessionId,\r\n                transactionId: this.vm.user.transactionId\r\n            },\r\n            verificationCode: '',\r\n            verificationCodeHasFocus: true\r\n        };\r\n        verifyEmailInfoModel.messageParams = {\r\n            'emailAddress': this.vm.emailAddress\r\n        };\r\n        return this.dialogService.open({viewModel: VerifyEmailInfoDialog, model: verifyEmailInfoModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (openDialogResult.wasCancelled) {\r\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\r\n                        this.notification.info('verify-email-info_resend');\r\n                        this.addEmailInfo();\r\n                    } else {\r\n                        this.notification.info('verify-email-info_canceled');\r\n                    }\r\n                } else {\r\n                    this.onVerifyEmailInfoSuccess(openDialogResult.output);\r\n                    this.eventAggregator.publish(new EnrollEmailInfosComplete());\r\n\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.info('verify-email-info_error');\r\n            });\r\n    }\r\n\r\n    onVerifyEmailInfoSuccess(message) {\r\n        if (message) {\r\n            let emailInfo = {\r\n                emailAddress: message.contactInfo,\r\n                label: message.contactInfo,\r\n                isDefault: false,\r\n                verified: true,\r\n                hasActiveToken: false\r\n            };\r\n            this.vm.user.emailInfos.push(emailInfo);\r\n\r\n            this.vm.user.sessionId = null;\r\n            this.vm.user.transactionId = null;\r\n            this.vm.emailAddress = '';\r\n            this.vm.emailAddressHasFocus = true;\r\n            this.vm.showAddEmailInfoForm = false;\r\n        }\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {WindowHelper} from 'util/window-helper';\r\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\r\nimport {VerifyPhoneInfoDialog} from 'components/views/verify-phone-info-dialog/verify-phone-info-dialog';\r\nimport {\r\n    EnrollPhoneInfosComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\r\nexport class EnrollPhoneInfos {\r\n    vm;\r\n    onKeypressInputCallback;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.windowHelper = windowHelper;\r\n\r\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.showEnrollPhoneInfoWarning = true;\r\n            this.vm.phoneNumber = '';\r\n            this.vm.phoneNumberHasFocus = true;\r\n            this.vm.showAddPhoneInfoForm = true;\r\n            if (this.vm.user.smsInfos.length > 0) {\r\n                this.vm.showAddPhoneInfoForm = false;\r\n            } else {\r\n                this.vm.phoneNumberHasFocus = true;\r\n            }\r\n            this.applyValidationRules();\r\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('phoneNumber')\r\n            .required()\r\n            .minLength(10)\r\n            .maxLength(11)\r\n            .matches(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?\\D?\\D?(\\d{4})$/)\r\n            .withMessage(`\\${$value} is not a valid phone number.`)\r\n            .on(this.vm);\r\n    }\r\n\r\n    deactivate() {\r\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\r\n    }\r\n\r\n    onKeypressInput(event) {\r\n        if (typeof event !== 'undefined') {\r\n            if (typeof event.target.id !== 'undefined') {\r\n                if (event.target.id === 'phone-number-input') {\r\n                    if (event.key === 'Enter') {\r\n                        this.addPhoneInfo();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removePhoneInfo(event, contactInfo) {\r\n        let confirmDialogModel = this.i18n.tr('confirm-remove-phone-info-dialog', {returnObjects: true});\r\n        confirmDialogModel.messageParams = {\r\n            'phoneNumber': contactInfo.phoneNumber\r\n        };\r\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (!openDialogResult.wasCancelled) {\r\n                    this.onConfirmRemovePhoneInfo(contactInfo);\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('logout_error');\r\n            });\r\n    }\r\n\r\n    onConfirmRemovePhoneInfo(contactInfo) {\r\n        let request = {\r\n            userId: this.vm.userId,\r\n            contactType: 'Phone',\r\n            contactInfo: contactInfo.phoneNumber,\r\n            label: contactInfo.label,\r\n            verified: contactInfo.verified,\r\n            hasActiveToken: contactInfo.hasActiveToken,\r\n            isDefault: true\r\n        };\r\n        return this.userService.removeContactInfo(request)\r\n            .then(response => {\r\n                this.vm.user.sessionId = response.sessionId;\r\n                this.vm.user.transactionId = response.transactionId;\r\n                this.notification.info('remove-contact-info_success');\r\n                this.vm.user.smsInfos.splice(_.findIndex(this.vm.user.smsInfos, contactInfo), 1);\r\n                this.eventAggregator.publish(new EnrollPhoneInfosComplete());\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('remove-contact-info_error');\r\n            });\r\n    }\r\n\r\n    isPhoneNumberUnique(phoneNumber) {\r\n        let idx = _.findIndex(this.vm.user.smsInfos, function (s) {\r\n            return s.label === phoneNumber;\r\n        });\r\n        return idx < 0;\r\n    }\r\n\r\n    addPhoneInfo(event) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isPhoneNumberUnique(this.vm.phoneNumber)) {\r\n                this.controller.validate()\r\n                    .then(result => {\r\n                        if (result.valid) {\r\n                            let request = {\r\n                                userId: this.vm.user.userId,\r\n                                credentialType: 'SMS',\r\n                                contactInfo: this.vm.phoneNumber,\r\n                                label: this.vm.phoneNumber,\r\n                                isDefault: true\r\n                            };\r\n                            this.userService.challengeUser(request)\r\n                                .then(response => {\r\n                                    this.vm.user.sessionId = response.sessionId;\r\n                                    this.vm.user.transactionId = response.transactionId;\r\n                                    if (response.challengeStatus !== 'Deny') {\r\n                                        this.goToVerifyPhoneInfo(response);\r\n                                    } else {\r\n                                        this.notification.error('challenge-user-deny_error');\r\n                                    }\r\n                                    resolve();\r\n                                })\r\n                                .catch(reason => {\r\n                                    logger.error(reason);\r\n                                    this.notification.error('challenge-user_error');\r\n                                    reject(reason);\r\n                                });\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    })\r\n                    .catch(exception => {\r\n                        logger.error(exception);\r\n                        reject(exception);\r\n                    });\r\n            } else {\r\n                let duplicatePhoneError = new Error('duplicate-phone_error');\r\n                this.notification.error(duplicatePhoneError);\r\n                reject(duplicatePhoneError);\r\n            }\r\n        });\r\n    }\r\n\r\n    goToVerifyPhoneInfo(message) {\r\n        let verifyPhoneInfoModel = {\r\n            user: {\r\n                userId: this.vm.user.userId,\r\n                sessionId: this.vm.user.sessionId,\r\n                transactionId: this.vm.user.transactionId\r\n            },\r\n            verificationCode: '',\r\n            verificationCodeHasFocus: true\r\n        };\r\n        verifyPhoneInfoModel.messageParams = {\r\n            'phoneNumber': this.vm.phoneNumber\r\n        };\r\n        return this.dialogService.open({viewModel: VerifyPhoneInfoDialog, model: verifyPhoneInfoModel, rejectOnCancel: false})\r\n            .whenClosed(openDialogResult => {\r\n                if (openDialogResult.wasCancelled) {\r\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\r\n                        this.notification.info('verify-phone-info_resend');\r\n                        this.addPhoneInfo();\r\n                    } else {\r\n                        this.notification.info('verify-phone-info_canceled');\r\n                    }\r\n                } else {\r\n                    this.onVerifyPhoneInfoSuccess(openDialogResult.output);\r\n                    this.eventAggregator.publish(new EnrollPhoneInfosComplete());\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.info('verify-phone-info_error');\r\n            });\r\n    }\r\n\r\n    onVerifyPhoneInfoSuccess(message) {\r\n        if (message) {\r\n            let phoneInfo = {\r\n                phoneNumber: message.contactInfo,\r\n                label: message.contactInfo,\r\n                isDefault: false,\r\n                verified: true,\r\n                hasActiveToken: false\r\n            };\r\n            this.vm.user.smsInfos.push(phoneInfo);\r\n\r\n            this.vm.user.sessionId = null;\r\n            this.vm.user.transactionId = null;\r\n            this.vm.phoneNumber = '';\r\n            this.vm.phoneNumberHasFocus = true;\r\n            this.vm.showAddPhoneInfoForm = false;\r\n        }\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\r\nimport {logger} from 'util/logger-helper';\r\nimport {CredentialType} from 'util/common-models';\r\nimport {\r\n    EnrollChallengeQuestionAnswersComplete,\r\n    EnrollPhoneInfosComplete,\r\n    EnrollEmailInfosComplete,\r\n    EnrollCredentialsComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EnrollCredentials {\r\n    vm;\r\n    enrollCredentialsViewModel;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.credentialType = CredentialType.QUESTIONS;\r\n            this.enrollCredentialsViewModel = 'components/views/enroll-challenge-question-answers/enroll-challenge-question-answers';\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollChallengeQuestionAnswersComplete, message => this.onEnrollChallengeQuestionAnswersComplete(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollPhoneInfosComplete, message => this.onEnrollPhoneInfosComplete(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollEmailInfosComplete, message => this.onEnrollEmailInfosComplete(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    skip(event) {\r\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\r\n            this.eventAggregator.publish(new EnrollCredentialsComplete({credentialType: CredentialType.QUESTIONS}));\r\n        } else {\r\n            let confirmDialogModel;\r\n            if (this.vm.credentialType === CredentialType.PHONE) {\r\n                confirmDialogModel = this.i18n.tr('confirm-skip-enroll-phone-infos-dialog', {returnObjects: true});\r\n            } else if (this.vm.credentialType === CredentialType.EMAIL) {\r\n                confirmDialogModel = this.i18n.tr('confirm-skip-enroll-email-infos-dialog', {returnObjects: true});\r\n            }\r\n            return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\r\n                .whenClosed(openDialogResult => {\r\n                    if (!openDialogResult.wasCancelled) {\r\n                        this.next(event);\r\n                    }\r\n                })\r\n                .catch(reason => {\r\n                    logger.error(reason);\r\n                    this.notification.error('confirm_error');\r\n                });\r\n        }\r\n    }\r\n\r\n    next(event) {\r\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\r\n            this.vm.credentialType = CredentialType.PHONE;\r\n            this.enrollCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\r\n        } else if (this.vm.credentialType === CredentialType.PHONE) {\r\n            this.vm.credentialType = CredentialType.EMAIL;\r\n            this.enrollCredentialsViewModel = 'components/views/enroll-email-infos/enroll-email-infos';\r\n        } else if (this.vm.credentialType === CredentialType.EMAIL) {\r\n            this.vm.credentialType = CredentialType.QUESTIONS;\r\n            this.enrollCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\r\n            this.eventAggregator.publish(new EnrollCredentialsComplete());\r\n        }\r\n    }\r\n\r\n    get enrollCredentialsComplete() {\r\n        let credentialsComplete = false;\r\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\r\n            credentialsComplete = this.vm.user.challengeQuestionAnswersComplete;\r\n        } else if (this.vm.credentialType === CredentialType.PHONE) {\r\n            credentialsComplete = this.vm.user.smsInfosComplete;\r\n        } else if (this.vm.credentialType === CredentialType.EMAIL) {\r\n            credentialsComplete = this.vm.user.emailInfosComplete;\r\n        }\r\n        return credentialsComplete;\r\n    }\r\n\r\n    onEnrollChallengeQuestionAnswersComplete(message) {\r\n    }\r\n\r\n    onEnrollPhoneInfosComplete(message) {\r\n    }\r\n\r\n    onEnrollEmailInfosComplete(message) {\r\n    }\r\n}\r\n","import { inject, bindable, computedFrom } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { ValidationControllerFactory, ValidationController, ValidationRules } from 'aurelia-validation';\r\nimport { DialogService } from 'aurelia-dialog';\r\nimport { Notification } from 'aurelia-notification';\r\nimport { I18N } from 'aurelia-i18n';\r\nimport { AuthService } from 'aurelia-authentication';\r\nimport { UserService } from 'services/user-service';\r\nimport { logger } from 'util/logger-helper';\r\nimport EventTimer from 'util/event-timer';\r\nimport appConfig from 'config/app';\r\nimport {\r\n    EnrollmentDisclaimerConfirmed\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EnrollmentDisclaimer {\r\n    vm;\r\n    eventTimerStartTime = appConfig.enrollment.confirmDisclaimerEventTimerStartTime || 5;\r\n    eventTimerTickKey = 'enrollment-disclaimer-tick';\r\n    eventTimerTimeoutKey = 'enrollment-disclaimer-timeout';\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        this.timer = new EventTimer(this.eventAggregator);\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('confirmDisclaimerChecked').equals(true)\r\n            .on(this.vm);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.confirmDisclaimerChecked = false;\r\n            this.vm.eventTimerExpired = false;\r\n            this.vm.remainingTime = this.eventTimerStartTime;\r\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\r\n            this.applyValidationRules();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    deactivate() {\r\n        this.timer.stop();\r\n    }\r\n\r\n    onEventTimerTick(startTime) {\r\n        this.vm.remainingTime = startTime;\r\n    }\r\n\r\n    onEventTimerTimeout(startTime) {\r\n        this.vm.eventTimerExpired = true;\r\n    }\r\n\r\n    next(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(controllerValidateResult => {\r\n                    if (controllerValidateResult.valid) {\r\n                        this.eventAggregator.publish(new EnrollmentDisclaimerConfirmed());\r\n                    }\r\n                    resolve();\r\n                })\r\n                .catch(reason => {\r\n                    logger.error(reason);\r\n                    reject(reason);\r\n                });\r\n        });\r\n    }\r\n\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {\r\n    EnrollmentStart\r\n} from 'resources/messages/enrollment-messages';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EnrollmentIntro {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    start(event) {\r\n        return new Promise(resolve => {\r\n            this.eventAggregator.publish(new EnrollmentStart());\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\r\nimport {\r\n    EnrollmentComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class EnrollmentReview {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    done(event) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.vm.challengeQuestionAnswersComplete\r\n                && this.vm.user.smsInfosComplete\r\n                && this.vm.user.emailInfosComplete) {\r\n                this.eventAggregator.publish(new EnrollmentDone());\r\n                resolve();\r\n            } else {\r\n                let confirmDialogModel = this.i18n.tr('confirm-enrollment-review-warning-dialog', {returnObjects: true});\r\n                this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\r\n                    .whenClosed(openDialogResult => {\r\n                        if (!openDialogResult.wasCancelled) {\r\n                            this.eventAggregator.publish(new EnrollmentComplete());\r\n                        }\r\n                        resolve();\r\n                    })\r\n                    .catch(reason => {\r\n                        logger.error(reason);\r\n                        this.notification.error('confirm_error');\r\n                        reject(reason);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {User} from 'models/user';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    EnrollmentDisclaimerConfirmed,\r\n    EnrollmentStart,\r\n    EnrollCredentialsComplete,\r\n    EnrollmentComplete\r\n} from 'resources/messages/enrollment-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class Enrollment {\r\n    vm = {\r\n        user: new User()\r\n    };\r\n    enrollmentViewModel;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        let payload = authService.getTokenPayload();\r\n        this.vm.user.fromJson(payload);\r\n    }\r\n\r\n    activate(params, routeConfig, navigationInstruction) {\r\n        let request = {\r\n            sessionId: this.vm.user.sessionId,\r\n            transactionId: this.vm.user.transactionId,\r\n            userId: this.vm.user.userId\r\n        };\r\n        return this.userService.getUser(request)\r\n            .then(response => {\r\n                this.vm.user.fromJson(response);\r\n                this.enrollmentViewModel = './enrollment-disclaimer';\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('get-user_error');\r\n            });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollmentDisclaimerConfirmed, message => this.onEnrollmentDisclaimerConfirmed(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollmentStart, message => this.onEnrollmentStart(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollCredentialsComplete, message => this.onEnrollCredentialsComplete(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(EnrollmentComplete, message => this.onEnrollmentComplete(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnrollmentDisclaimerConfirmed(message) {\r\n        this.enrollmentViewModel = './enrollment-intro';\r\n    }\r\n\r\n    onEnrollmentStart(message) {\r\n        this.enrollmentViewModel = './enroll-credentials';\r\n    }\r\n\r\n    onEnrollCredentialsComplete(message) {\r\n        this.enrollmentViewModel = './enrollment-review';\r\n    }\r\n\r\n    onEnrollmentComplete(message) {\r\n        this.router.navigateToRoute('self-service');\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    GoToLogout,\r\n    AuthenticateUserSuccess,\r\n    AuthenticateUserFail\r\n} from 'resources/messages/login-messages';\r\nimport {\r\n    ChallengeStart,\r\n    ChallengeCancel,\r\n    ChallengeSuccess,\r\n    ChallengeFail,\r\n    ChallengeComplete\r\n} from 'resources/messages/challenge-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class ChallengeWithCredentials {\r\n    vm;\r\n    challengeWithCredentialsViewModel;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            if (this.vm.selectedCredentialType === 'challenge-questions') {\r\n                this.challengePreAuthUser('Questions')\r\n                    .then(response => {\r\n                        this.challengeWithCredentialsViewModel = 'components/views/challenge-with-challenge-questions/challenge-with-challenge-questions';\r\n                        resolve();\r\n                    });\r\n            } else if (this.vm.selectedCredentialType === 'phone-info') {\r\n                this.getPreAuthUser('Phone')\r\n                    .then(response => {\r\n                        this.challengeWithCredentialsViewModel = 'components/views/challenge-with-phone-info/challenge-with-phone-info';\r\n                        resolve();\r\n                    });\r\n            } else if (this.vm.selectedCredentialType === 'email-info') {\r\n                this.challengeWithCredentialsViewModel = 'components/views/challenge-with-email-info/challenge-with-email-info';\r\n            } else if (this.vm.selectedCredentialType === 'rsa-token') {\r\n                this.challengeWithCredentialsViewModel = 'components/views/challenge-with-rsa-token/challenge-with-rsa-token';\r\n            } else {\r\n                this.eventAggregator.publish(new ChallengeFail());\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(ChallengeStart, message => this.onChallengeStart(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(ChallengeCancel, message => this.onChallengeCancel(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(ChallengeSuccess, message => this.onChallengeSuccess(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    getPreAuthUser(credentialType) {\r\n        let request = {\r\n            userId: this.vm.user.userId,\r\n            credentialType: credentialType,\r\n            access_token: this.vm.user.access_token\r\n        };\r\n        return this.userService.getPreAuthUser(request)\r\n            .then(response => {\r\n                this.vm.user.fromJson(response);\r\n                return response;\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('get-user_error');\r\n            });\r\n    }\r\n\r\n    onChallengeStart(message) {\r\n        if (message) {\r\n            this.challengePreAuthUser(message.credentialType, message.label)\r\n                .then(response => {\r\n                    this.eventAggregator.publish(new ChallengeReceived(response));\r\n                });\r\n        }\r\n    }\r\n\r\n    challengePreAuthUser(credentialType, label) {\r\n        let request = {\r\n            userId: this.vm.user.userId,\r\n            credentialType: credentialType,\r\n            access_token: this.vm.user.access_token\r\n        };\r\n        if (label) {\r\n            request.label = label;\r\n        }\r\n        return this.userService.challengePreAuthUser(request)\r\n            .then(response => {\r\n                if (response.challengeStatus !== 'Deny') {\r\n                    this.vm.user.fromJson(response);\r\n                    return response;\r\n                } else {\r\n                    this.notification.error('challenge-user_error');\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('challenge-user_error');\r\n            });\r\n    }\r\n\r\n    onChallengeVerify(message) {\r\n        if (message) {\r\n            this.authenticatePreAuthUser(message.credentialType, message.credentials)\r\n                .then(response => {\r\n                    this.eventAggregator.publish(new ChallengeVerify(response));\r\n                });\r\n        }\r\n    }\r\n\r\n    authenticatePreAuthUser(credentialType, credentials) {\r\n        let request = {\r\n            userId: this.vm.user.userId,\r\n            credentialType: credentialType,\r\n            credentials: credentials,\r\n            access_token: this.vm.user.access_token\r\n        };\r\n        return this.userService.authenticatePreAuthUser(request)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('verify-phone-info_error');\r\n                reject(reason);\r\n            });\r\n    }\r\n\r\n    onChallengeCancel() {\r\n        this.eventAggregator.publish(new GoToLogout());\r\n    }\r\n\r\n    onChallengeSuccess(message) {\r\n        this.eventAggregator.publish(new AuthenticateUserSuccess(message));\r\n    }\r\n\r\n    onChallengeFail(message) {\r\n        this.vm.user.sessionId = '';\r\n        this.vm.user.transactionId = '';\r\n        this.eventAggregator.publish(new AuthenticateUserFail(message));\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {\r\n    GoToLogout,\r\n    ChallengeWithCredentials\r\n} from 'resources/messages/login-messages';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class Challenge {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.vm.bindDeviceOptions = ['yes', 'no'];\r\n            this.applyValidationRules();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('selectedCredentialType').required()\r\n            .on(this.vm);\r\n    }\r\n\r\n    cancel(event) {\r\n        return new Promise(resolve => {\r\n            this.eventAggregator.publish(new GoToLogout());\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    next(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        this.eventAggregator.publish(new ChallengeWithCredentials());\r\n                    }\r\n                    resolve();\r\n                })\r\n                .catch(reason => {\r\n                    logger.error(reason);\r\n                    reject(reason);\r\n                })\r\n        });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class Deny {\r\n    vm;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {User} from 'models/user';\r\nimport {logger} from 'util/logger-helper';\r\nimport {\r\n    GoToLogin,\r\n    SigninSuccess,\r\n    ChallengeWithCredentials,\r\n    AuthenticateUserSuccess,\r\n    GoToForgotPassword\r\n} from 'resources/messages/login-messages';\r\nimport _ from 'lodash';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class Login {\r\n    vm = {\r\n        user: new User()\r\n    };\r\n    loginViewModel;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        this.loginViewModel = './network-credentials';\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(GoToLogin, message => this.onGoToLogin(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(SigninSuccess, message => this.onSigninSuccess(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(AuthenticateUserSuccess, message => this.onAuthenticateUserSuccess(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(ChallengeWithCredentials, message => this.onChallengeWithCredentials(message))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(GoToForgotPassword, message => this.onGoToForgotPassword(message))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    onGoToLogin(message) {\r\n        this.router.navigateToRoute('logout');\r\n    }\r\n\r\n    onSigninSuccess(message) {\r\n        if (message && message.authStatusCode === 'Challenge' && message.userStatus === 'Verified') {\r\n            this.vm.user.fromJson(message);\r\n            this.loginViewModel = './challenge';\r\n        } else if (message.authStatusCode === 'Success' && message.userStatus === 'Verified') {\r\n            this.onAuthenticateUserSuccess(message).then(response => {\r\n                this.router.navigateToRoute('self-service');\r\n            });\r\n        } else if (message.authStatusCode === 'Success' && message.userStatus === 'Unverified') {\r\n            this.onAuthenticateUserSuccess(message).then(response => {\r\n                this.router.navigateToRoute('enrollment');\r\n            });\r\n        } else {\r\n            this.loginViewModel = './deny';\r\n        }\r\n    }\r\n\r\n    onChallengeWithCredentials() {\r\n        this.loginViewModel = './challenge-with-credentials';\r\n    }\r\n\r\n    onAuthenticateUserSuccess(message) {\r\n        let request = {\r\n            username: this.vm.user.userId,\r\n            password: this.vm.user.credentials\r\n        };\r\n        return this.authService.login(request);\r\n    }\r\n\r\n    onGoToForgotPassword(message) {\r\n        this.router.navigateToRoute('forgot-password');\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {WindowHelper} from 'util/window-helper';\r\nimport {\r\n    SigninSuccess,\r\n    GoToForgotPassword\r\n} from 'resources/messages/login-messages';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\r\nexport class NetworkCredentials {\r\n    vm;\r\n    onKeypressInputCallback;\r\n\r\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.windowHelper = windowHelper;\r\n\r\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.applyValidationRules();\r\n            this.vm.userIdHasFocus = true;\r\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('userId').required().minLength(1).maxLength(256)\r\n            .ensure('credentials').required().minLength(1).maxLength(256)\r\n            .on(this.vm.user);\r\n    }\r\n\r\n    deactivate() {\r\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\r\n    }\r\n\r\n    onKeypressInput(event) {\r\n        if (typeof event !== 'undefined') {\r\n            if (typeof event.target.id !== 'undefined') {\r\n                if (event.target.id === 'credentials-input') {\r\n                    if (event.key === 'Enter') {\r\n                        this.signin();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    signin(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let request = {\r\n                            sessionId: this.vm.user.sessionId,\r\n                            transactionId: this.vm.user.transactionId,\r\n                            userId: this.vm.user.userId,\r\n                            credentials: this.vm.user.credentials\r\n                        };\r\n                        this.userService.signin(request)\r\n                            .then(response => {\r\n                                this.eventAggregator.publish(new SigninSuccess(response));\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => { \r\n                                logger.error(reason);\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                })\r\n            .catch(validateReason => {\r\n                logger.error(validateReason);\r\n                reject(validateReason);\r\n            })\r\n        });\r\n    }\r\n\r\n    goToForgotPassword(event) {\r\n        this.eventAggregator.publish(new GoToForgotPassword());\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class Logout {\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.authService = authService;\r\n    }\r\n\r\n    activate() {\r\n        return this.authService.logout();\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {User} from 'models/user';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class SelfService {\r\n    vm = {\r\n        user: new User()\r\n    };\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        let payload = this.authService.getTokenPayload();\r\n        this.vm.user.fromJson(payload);\r\n    }\r\n\r\n    activate(params, routeConfig, navigationInstruction) {\r\n        let request = {\r\n            userId: this.vm.user.userId\r\n        };\r\n        return this.userService.getUser(request)\r\n            .then(response => {\r\n                this.vm.user.fromJson(response);\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('get-user_error');\r\n            });\r\n    }\r\n\r\n    goToChangePassword(event) {\r\n        this.router.navigateToRoute('change-password');\r\n    }\r\n\r\n    goToEditProfile(event) {\r\n        this.router.navigateToRoute('edit-credentials');\r\n    }\r\n\r\n    goToUnlockAccount(event) {\r\n        this.router.navigateToRoute('unlock-account');\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DialogService} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {User} from 'models/user';\r\nimport {logger} from 'util/logger-helper';\r\n\r\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\r\nexport class UnlockAccount {\r\n    vm;\r\n    subscribers = [];\r\n\r\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n        this.dialogService = dialogService;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n\r\n        let payload = authService.getTokenPayload();\r\n        this.vm.user.userId = payload ? payload.username : null;\r\n    }\r\n\r\n    activate(params, routeConfig, navigationInstruction) {\r\n        let request = {\r\n            sessionId: this.vm.user.sessionId,\r\n            transactionId: this.vm.user.transactionId,\r\n            userId: this.vm.user.userId\r\n        };\r\n        return this.userService.getUser(request)\r\n            .then(response => {\r\n                this.vm.user = new User();\r\n                this.vm.user.fromJson(response);\r\n            })\r\n            .catch(reason => {\r\n                logger.error(reason);\r\n                this.notification.error('get-user_error');\r\n            });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogController} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {WindowHelper} from 'util/window-helper';\r\nimport {logger} from 'util/logger-helper';\r\nimport EventTimer from 'util/event-timer';\r\nimport appConfig from 'config/app';\r\nimport _ from 'lodash';\r\n\r\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\r\nexport class VerifyEmailInfoDialog {\r\n    vm;\r\n    onKeypressInputCallback;\r\n    eventTimerStartTime = appConfig.enrollment.verifyEmailInfoTimerStartTime || 120;\r\n    eventTimerTickKey = 'verify-email-info_tick';\r\n    eventTimerTimeoutKey = 'verify-email-info_timeout';\r\n    subscribers = [];\r\n\r\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\r\n        this.dialogController = dialogController;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.windowHelper = windowHelper;\r\n\r\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\r\n        this.timer = new EventTimer(this.eventAggregator);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.applyValidationRules();\r\n            this.vm.remainingTime = this.eventTimerStartTime;\r\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\r\n\r\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\r\n            .on(this.vm);\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    deactivate() {\r\n        this.timer.stop();\r\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\r\n    }\r\n\r\n    onKeypressInput(event) {\r\n        if (typeof event !== 'undefined') {\r\n            if (typeof event.target.id !== 'undefined') {\r\n                if (event.target.id === 'verification-code') {\r\n                    if (event.key === 'Enter') {\r\n                        this.verify();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEventTimerTick(startTime) {\r\n        this.vm.remainingTime = startTime;\r\n    }\r\n\r\n    onEventTimerTimeout(startTime) {\r\n        this.vm.eventTimerExpired = true;\r\n    }\r\n\r\n    cancel(event) {\r\n        this.dialogController.cancel();\r\n    }\r\n\r\n    resendCode(event) {\r\n        let response = {\r\n            resendCode: true\r\n        };\r\n        this.dialogController.cancel(response);\r\n    }\r\n\r\n    verify(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let request = {\r\n                            sessionId: this.vm.user.sessionId,\r\n                            transactionId: this.vm.user.transactionId,\r\n                            userId: this.vm.user.userId,\r\n                            contactType: 'Email',\r\n                            contactInfo: this.vm.emailAddress,\r\n                            label: this.vm.emailAddress,\r\n                            token: this.vm.verificationCode\r\n                        };\r\n                        this.userService.verifyContactInfo(request)\r\n                            .then(response => {\r\n                                if (response.verified) {\r\n                                    this.dialogController.ok(response);\r\n                                } else {\r\n                                    this.notification.error('verify-email-info-fail_error');\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => {\r\n                                logger.error(reason);\r\n                                this.notification.error('verify-email-info_error');\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    reject(validateReason);\r\n                });\r\n        });\r\n    }\r\n}\r\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\r\nimport {DialogController} from 'aurelia-dialog';\r\nimport {Notification} from 'aurelia-notification';\r\nimport {I18N} from 'aurelia-i18n';\r\nimport {AuthService} from 'aurelia-authentication';\r\nimport {UserService} from 'services/user-service';\r\nimport {WindowHelper} from 'util/window-helper';\r\nimport {logger} from 'util/logger-helper';\r\nimport EventTimer from 'util/event-timer';\r\nimport appConfig from 'config/app';\r\nimport _ from 'lodash';\r\n\r\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\r\nexport class VerifyPhoneInfoDialog {\r\n    vm;\r\n    onKeypressInputCallback;\r\n    eventTimerStartTime = appConfig.enrollment.verifyPhoneInfoTimerStartTime || 120;\r\n    eventTimerTickKey = 'verify-phone-info_tick';\r\n    eventTimerTimeoutKey = 'verify-phone-info_timeout';\r\n    subscribers = [];\r\n\r\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\r\n        this.dialogController = dialogController;\r\n        this.eventAggregator = eventAggregator;\r\n        this.controller = controllerFactory.createForCurrentScope();\r\n        this.controller.validateTrigger = validateTrigger.manual;\r\n        this.notification = notification;\r\n        this.i18n = i18n;\r\n        this.authService = authService;\r\n        this.userService = userService;\r\n        this.windowHelper = windowHelper;\r\n\r\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\r\n        this.timer = new EventTimer(this.eventAggregator);\r\n    }\r\n\r\n    activate(viewModel) {\r\n        return new Promise(resolve => {\r\n            this.vm = viewModel;\r\n            this.applyValidationRules();\r\n            this.vm.remainingTime = this.eventTimerStartTime;\r\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\r\n\r\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    applyValidationRules() {\r\n        ValidationRules\r\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\r\n            .on(this.vm);\r\n    }\r\n\r\n    attached() {\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\r\n        );\r\n        this.subscribers.push(\r\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\r\n        );\r\n    }\r\n\r\n    detached() {\r\n        _.each(this.subscribers, function (subscriber) {\r\n            if (subscriber && subscriber.dispose) {\r\n                subscriber.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    deactivate() {\r\n        this.timer.stop();\r\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\r\n    }\r\n\r\n    onKeypressInput(event) {\r\n        if (typeof event !== 'undefined') {\r\n            if (typeof event.target.id !== 'undefined') {\r\n                if (event.target.id === 'verification-code') {\r\n                    if (event.key === 'Enter') {\r\n                        this.verify();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEventTimerTick(startTime) {\r\n        this.vm.remainingTime = startTime;\r\n    }\r\n\r\n    onEventTimerTimeout(startTime) {\r\n        this.vm.eventTimerExpired = true;\r\n    }\r\n\r\n    cancel(event) {\r\n        this.dialogController.cancel();\r\n    }\r\n\r\n    resendCode(event) {\r\n        let response = {\r\n            resendCode: true\r\n        };\r\n        this.dialogController.cancel(response);\r\n    }\r\n\r\n    verify(event) {\r\n        return new Promise((resolve, reject) => {\r\n            this.controller.validate()\r\n                .then(result => {\r\n                    if (result.valid) {\r\n                        let request = {\r\n                            sessionId: this.vm.user.sessionId,\r\n                            transactionId: this.vm.user.transactionId,\r\n                            userId: this.vm.user.userId,\r\n                            contactType: 'SMS',\r\n                            contactInfo: this.vm.phoneNumber,\r\n                            label: this.vm.phoneNumber,\r\n                            token: this.vm.verificationCode\r\n                        };\r\n                        this.userService.verifyContactInfo(request)\r\n                            .then(response => {\r\n                                if (response.verified) {\r\n                                    this.dialogController.ok(response);\r\n                                } else {\r\n                                    this.notification.error('verify-phone-info-fail_error');\r\n                                }\r\n                                resolve();\r\n                            })\r\n                            .catch(reason => {\r\n                                logger.error(reason);\r\n                                this.notification.error('verify-phone-info_error');\r\n                                reject(reason);\r\n                            });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                })\r\n                .catch(validateReason => {\r\n                    logger.error(validateReason);\r\n                    reject(validateReason);\r\n                });\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":".."}