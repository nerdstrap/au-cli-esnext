{"version":3,"sources":["environment.js","main.js","app/app.js","components/index.js","config/app.js","config/auth.js","config/deployed.js","config/local.js","config/router.js","foundation-validation/foundation-validation-renderer.js","foundation-validation/index.js","models/challengeQuestion.js","models/challengeQuestionAnswer.js","models/emailInfo.js","models/smsInfo.js","models/user.js","resources/index.js","services/user-service.js","util/common-models.js","util/device-helper.js","util/event-timer.js","util/location-helper.js","util/logger-helper.js","util/object-utilities.js","util/string-helper.js","util/window-helper.js","components/nav-bar/nav-bar.js","components/site-footer/site-footer.js","components/validation-summary/validation-summary.js","resources/messages/challenge-messages.js","resources/messages/enrollment-messages.js","resources/messages/event-messages.js","resources/messages/login-messages.js","resources/messages/self-service-messages.js","resources/value-converters/date-formatter.js","resources/value-converters/interval-formatter.js","resources/value-converters/phone-formatter.js","resources/value-converters/timer-formatter.js","components/views/challenge-with-challenge-questions/challenge-with-challenge-questions.js","components/views/challenge-with-email-info/challenge-with-email-info.js","components/views/challenge-with-phone-info/challenge-with-phone-info.js","components/views/challenge-with-rsa-token/challenge-with-rsa-token.js","components/views/change-password/change-password.js","components/views/confirm-dialog/confirm-dialog.js","components/views/edit-credentials/edit-credentials.js","components/views/enroll-challenge-question-answers/enroll-challenge-question-answers.js","components/views/enroll-email-infos/enroll-email-infos.js","components/views/enroll-phone-infos/enroll-phone-infos.js","components/views/enrollment/enroll-credentials.js","components/views/enrollment/enrollment-disclaimer.js","components/views/enrollment/enrollment-intro.js","components/views/enrollment/enrollment-review.js","components/views/enrollment/enrollment.js","components/views/login/challenge-with-credentials.js","components/views/login/challenge.js","components/views/login/deny.js","components/views/login/login.js","components/views/login/network-credentials.js","components/views/logout/logout.js","components/views/self-service/self-service.js","components/views/unlock-account/unlock-account.js","components/views/verify-email-info-dialog/verify-email-info-dialog.js","components/views/verify-phone-info-dialog/verify-phone-info-dialog.js"],"names":["debug","testing","configure","addAppender","setLevel","window","location","hostname","match","RegExp","logLevel","error","Promise","config","warnings","wForgottenReturn","getLanguage","resolve","lng","configureRouter","title","app","addPipelineStep","map","routes","fallbackRoute","setRoot","aurelia","setupAureliaDone","setupI18NDone","container","get","initialize","use","standardConfiguration","feature","plugin","useDefaults","useCSS","settings","lock","centerHorizontalOnly","startingZIndex","enableEscClose","rejectOnCancel","instance","i18next","language","localStorage","getItem","setup","backend","loadPath","defaultLocale","attributes","fallbackLng","i18n","interpolation","format","value","parts","split","vc","resources","valueConverters","shift","toView","then","prototype","getMessage","key","translation","t","parser","parseMessage","getDisplayName","propertyName","displayName","undefined","mergedConfig","fetch","developmentLogging","start","lang","catch","App","router","authService","notification","languages","code","locale","flag","payload","getTokenPayload","username","authenticated","isAuthenticated","setLanguage","setItem","top","reload","attached","document","foundation","info","tr","globalResources","environment","logger","name","endpoints","endpoint","default","defaults","timeout","clickToClose","notifications","success","enrollment","numberOfRequiredChallengeQuestionAnswers","numberOfRequiredSmsInfos","numberOfRequiredEmailInfos","confirmDisclaimerEventTimerStartTime","verifyPhoneInfoTimerStartTime","verifyEmailInfoTimerStartTime","configureEndpoints","baseUrl","loginUrl","signupUrl","loginRedirect","profileUrl","accessTokenProp","refreshTokenProp","idTokenProp","refreshTokenSubmitProp","refreshTokenUrl","useRefreshToken","route","moduleId","nav","auth","roles","Element","closest","s","matches","ownerDocument","querySelectorAll","i","el","length","item","parentElement","abideLabels","FoundationValidationRenderer","render","instruction","unrender","result","elements","element","remove","valid","add","formRow","formLabel","getElementsByTagName","formInput","classList","contains","setAttribute","message","createElement","className","textContent","id","appendChild","querySelector","removeChild","registerHandler","ChallengeQuestion","challengeQuestionId","challengeQuestionText","userAnswerText","fromJson","response","ChallengeQuestionAnswer","EmailInfo","emailAddress","label","isDefault","verified","hasActiveToken","Boolean","SmsInfo","phoneNumber","User","sessionId","transactionId","userId","credentials","fullName","access_token","_availableChallengeQuestions","_challengeQuestionAnswers","challengeQuestions","smsInfos","emailInfos","availableChallengeCredentialTypes","authStatusCode","userInfo","buildChallengeQuestions","availableChallengeQuestionAnswers","newChallengeQuestion","push","mapChallengeQuestionAnswers","challengeQuestionAnswers","j","newChallengeQuestionAnswer","k","newSmsInfo","l","newEmailInfo","credentialTypes","m","n","numberOfChallengeQuestions","availableChallengeQuestions","orderBy","cloneDeep","selectedAvailableChallengeQuestion","previouslySelectedAvailableChallengeQuestion","showActualAnswer","updateAvailableChallengeQuestions","selectedChallengeQuestion","currentChallengeQuestion","removedAvailableChallengeQuestion","index","findIndex","splice","getChallengeQuestionAnswers","challengeQuestion","challengeQuestionAnswer","find","a","isValid","nprogress","UserService","deviceHelper","isRequesting","userEndpoint","getEndpoint","signin","request","_pre","post","_post","analyzePreAuthUser","challengePreAuthUser","challengeUser","authenticatePreAuthUser","authenticateUser","getPreAuthUser","getUser","addChallengeQuestionAnswers","verifyContactInfo","removeContactInfo","resetPassword","deviceRequest","deviceTokenCookie","setDeviceTokenCookie","done","EnumSymbol","ordinal","description","Object","is","x","y","keyName","freeze","toString","sym","valueOf","Symbol","keyFor","for","Enum","enumLiterals","hasOwnProperty","TypeError","symbols","syms","self","keys","forEach","symbol","AuthStatusCode","Success","Deny","Pending","Challenge","ActionCode","ALLOW","DENY","CHALLENGE","ENROLL","CredentialType","PASSWORD","QUESTIONS","PHONE","EMAIL","RSATOKEN","ContactType","UserStatus","NOTENROLLED","UNVERIFIED","VERIFIED","DELETE","LOCKOUT","UNLOCKOUT","UserType","PERSISTENT","NONPERSISTENT","BAIT","determineShiftedValues","total","highestValue","values","runningTotal","binValue","Math","pow","EnumeratedTypeHelper","asArray","type","v","enums","DeviceHelper","cDeviceToken","cname","cmaxage","d","Date","setTime","getTime","expires","toUTCString","cookie","devicePrint","encode_deviceprint","ca","c","charAt","substring","indexOf","EventTimer","eventAggregator","interval","tickKey","timeoutKey","currentTime","intervalId","setInterval","stop","publish","clearInterval","LocationHelperFunction","getQueryParameter","default_","replace","regex","qs","exec","href","decodeURIComponent","LocationHelper","getLogger","Operators","ObjectUtilities","isEqual","objA","objB","aKeys","bKeys","len","deepExtend","destination","source","property","constructor","PredicateUtilities","removeMatches","subject","predicates","predicateList","clone","isLogical","operator","logicals","filter","flattened","logical","flatten","processed","indx","StringUtil","pluralize","str","count","endsWith","StringHelperFunction","formatDate","date","formattedDate","dateErr","warn","parseDate","parsedDate","formatPhoneNumber","formattedPhoneNumber","rawPhoneNumber","size","parsePhoneNumber","parsedPhoneNumber","StringHelper","WindowHelper","addEventListener","listener","options","removeEventListener","useCapture","NavBar","dialogService","userService","goToLogout","confirmDialogModel","returnObjects","open","viewModel","model","whenClosed","openDialogResult","wasCancelled","navigateToRoute","reason","SiteFooter","event","ValidationSummary","ChallengeStart","assign","ChallengeCancel","ChallengeReceived","ChallengeVerify","ChallengeSuccess","ChallengeFail","ChallengeComplete","EnrollmentDisclaimerConfirmed","EnrollmentStart","EnrollChallengeQuestionAnswersComplete","EnrollPhoneInfosComplete","EnrollEmailInfosComplete","EnrollCredentialsComplete","EnrollmentComplete","RequiredCredentialTypeChanged","GoToLogin","GoToLogout","SigninSuccess","ChallengeWithCredentials","AuthenticateUserFail","AuthenticateUserSuccess","GoToForgotPassword","GoToChangePassword","GoToEditProfile","GoToUnlockProfile","GoToEditChallengeQuestionAnswers","GoToEditPhoneInfos","GoToEditEmailInfos","dateFormatterValueConverter","fromView","intervalFormatterValueConverter","formatInterval","phoneFormatterValueConverter","TimerFormatterValueConverter","formattedValue","ChallengeWithChallengeQuestions","controllerFactory","controller","createForCurrentScope","activate","vm","applyValidationRules","user","ensure","required","on","onSelectedAvailableChallengeQuestionAnswerChanged","bindingContext","cancel","_getCredentials","trimEnd","next","reject","validate","credentialType","validateReason","ChallengeWithEmailInfo","validateTrigger","manual","token","contactInfo","challengeStatus","goToVerifyEmailInfo","verifyEmailInfoModel","verificationCode","verificationCodeHasFocus","messageParams","output","resendCode","onChallengeSuccess","onChallengeFail","ChallengeWithPhoneInfo","subscribers","selectedSmsInfo","subscribe","onChallengeReceived","detached","each","subscriber","dispose","verifyPhoneInfoModel","ChallengeWithRSAToken","authToken","controllerValidateResult","bindDevice","ChangePassword","params","routeConfig","navigationInstruction","ConfirmDialog","dialogController","headerIcon","headerText","cancelButtonText","confirmButtonText","confirm","ok","EditCredentials","onEnrollChallengeQuestionAnswersComplete","onEnrollPhoneInfosComplete","onEnrollEmailInfosComplete","onGoToEnrollChallengeQuestionAnswers","editCredentialsViewModel","onGoToEnrollPhoneInfos","onGoToEnrollEmailInfos","EnrollChallengeQuestionAnswers","save","validateError","Error","exception","EnrollEmailInfos","windowHelper","onKeypressInputCallback","onKeypressInput","bind","showEnrollEmailInfoWarning","emailAddressHasFocus","showAddEmailInfoForm","email","withMessage","deactivate","target","addEmailInfo","removeEmailInfo","onConfirmRemoveEmailInfo","contactType","isEmailAddressUnique","idx","duplicateEmailError","onVerifyEmailInfoSuccess","emailInfo","EnrollPhoneInfos","showEnrollPhoneInfoWarning","phoneNumberHasFocus","showAddPhoneInfoForm","minLength","maxLength","addPhoneInfo","removePhoneInfo","onConfirmRemovePhoneInfo","isPhoneNumberUnique","goToVerifyPhoneInfo","duplicatePhoneError","onVerifyPhoneInfoSuccess","phoneInfo","EnrollCredentials","enrollCredentialsViewModel","skip","credentialsComplete","challengeQuestionAnswersComplete","smsInfosComplete","emailInfosComplete","EnrollmentDisclaimer","eventTimerStartTime","eventTimerTickKey","eventTimerTimeoutKey","timer","equals","confirmDisclaimerChecked","eventTimerExpired","remainingTime","onEventTimerTick","startTime","onEventTimerTimeout","EnrollmentIntro","EnrollmentReview","EnrollmentDone","Enrollment","enrollmentViewModel","onEnrollmentDisclaimerConfirmed","onEnrollmentStart","onEnrollCredentialsComplete","onEnrollmentComplete","selectedCredentialType","challengeWithCredentialsViewModel","onChallengeStart","onChallengeCancel","onChallengeVerify","bindDeviceOptions","Login","loginViewModel","onGoToLogin","onSigninSuccess","onAuthenticateUserSuccess","onChallengeWithCredentials","onGoToForgotPassword","userStatus","password","login","NetworkCredentials","userIdHasFocus","goToForgotPassword","Logout","logout","SelfService","goToChangePassword","goToEditProfile","goToUnlockAccount","UnlockAccount","VerifyEmailInfoDialog","verify","VerifyPhoneInfoDialog"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import routerConfig from 'config/router';\nimport appConfig from 'config/app';\nimport authConfig from 'config/auth';\nimport localConfig from 'config/local';\nimport Backend from 'i18next-xhr-backend';\nimport {Config} from 'aurelia-config';\nimport {Router} from 'aurelia-router';\nimport {AuthenticateStep} from 'aurelia-authentication';\nimport {ValidationMessageProvider} from 'aurelia-validation';\nimport {LogManager} from 'aurelia-framework';\nimport {ConsoleAppender} from 'aurelia-logging-console';\n\nLogManager.addAppender(new ConsoleAppender());\nLogManager.setLevel(window.location.hostname.match(new RegExp('localhost'))\n    ? LogManager.logLevel.debug\n    : LogManager.logLevel.error);\n\nPromise.config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nfunction getLanguage() {\n    return new Promise((resolve) => {\n        let lng = 'en';\n        resolve(lng);\n    });\n}\n\nfunction configureRouter(config) {\n    config.title = appConfig.app.title;\n    config.addPipelineStep('authorize', AuthenticateStep);\n    config.map(routerConfig.routes);\n    config.fallbackRoute(routerConfig.fallbackRoute);\n}\n\nfunction setRoot(aurelia) {\n    if (aurelia.setupAureliaDone && aurelia.setupI18NDone) {\n        aurelia.container.get(Router).configure(configureRouter);\n        aurelia.setRoot('app/app');\n    }\n}\n\nfunction initialize(aurelia, lng) {\n    aurelia.setupAureliaDone = false;\n    aurelia.setupI18NDone = false;\n    aurelia.use\n        .standardConfiguration()\n        .feature('foundation-validation')\n        .feature('resources')\n        .feature('components')\n        .plugin('aurelia-validation')\n        .plugin('aurelia-config', configure => {\n            return configure([\n                'aurelia-api',\n                'aurelia-authentication',\n                'aurelia-notification'\n            ], appConfig, authConfig, localConfig);\n        })\n        .plugin('aurelia-dialog', config => {\n            config.useDefaults();\n            config.useCSS('');\n            config.settings.lock = true;\n            config.settings.centerHorizontalOnly = false;\n            config.settings.startingZIndex = 5;\n            config.settings.enableEscClose = true;\n            config.settings.rejectOnCancel = true;\n        })\n        .plugin('aurelia-i18n', instance => {\n            instance.i18next.use(Backend);\n            let language = localStorage.getItem('language');\n            instance.setup({\n                backend: {\n                    loadPath: 'src/locales/{{lng}}/{{ns}}.json'\n                },\n                lng: language || appConfig.defaultLocale.language,\n                attributes: ['t'],\n                fallbackLng: language || appConfig.defaultLocale.language,\n                debug: appConfig.i18n.debug,\n                interpolation: {\n                    format: function (value, format, lng) {\n                        const parts = format.split(':');\n                        const vc = aurelia.resources.valueConverters[parts.shift()];\n                        return vc ? vc.toView(value, ...parts) : value;\n                    }\n                }\n            }).then(() => {\n                ValidationMessageProvider.prototype.getMessage = function (key) {\n                    const translation = instance.i18next.t(`validationMessages.${key}`);\n                    return this.parser.parseMessage(translation);\n                };\n                ValidationMessageProvider.prototype.getDisplayName = function (propertyName, displayName) {\n                    if (displayName !== null && displayName !== undefined) {\n                        return displayName;\n                    }\n                    return instance.i18next.t(`inputParameters.${propertyName}`);\n                };\n                aurelia.setupI18NDone = true;\n                setRoot(aurelia);\n            });\n        });\n\n    let mergedConfig = aurelia.container.get(Config);\n    if (mergedConfig.fetch('environment') === 'development') {\n        aurelia.use.developmentLogging();\n    }\n\n    if (mergedConfig.fetch('environment') === 'testing') {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => {\n        aurelia.setupAureliaDone = true;\n        setRoot(aurelia);\n    });\n}\n\nexport function configure(aurelia) {\n    getLanguage().then(lang => {\n        initialize(aurelia, lang);\n    }).catch(e => {\n        initialize(aurelia, 'en');\n    });\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-authentication';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {logger} from 'util/logger-helper';\nimport $ from 'jquery';\nimport foundation from 'foundation-sites';\n\n@inject(Router, AuthService, Notification, I18N)\nexport class App {\n\n    languages = [\n        {code: 'en', locale: 'en-US', flag: 'us'}\n    ];\n\n    constructor(router, authService, notification, i18n) {\n        this.router = router;\n        this.authService = authService;\n        this.notification = notification;\n        this.i18n = i18n;\n\n        let payload = authService.getTokenPayload();\n        this.username = payload ? payload.username : null;\n        this.authenticated = this.authService.isAuthenticated();\n    }\n\n    setLanguage(language) {\n        localStorage.setItem('language', language.code);\n        window.top.location.reload();\n    }\n\n    attached() {\n        $(document).foundation();\n        logger.info(this.i18n.tr('welcome_notification'));\n        this.notification.info('welcome_notification');\n    }\n}\n","export function configure(config) {\n    config.globalResources([\n        \"./nav-bar/nav-bar\",\n        \"./site-footer/site-footer\",\n        \"./validation-summary/validation-summary\"\n    ]);\n}\n","export default {\n    app: {\n        title: 'Corporation Name\\'s Self Service Password Reset',\n        environment: 'development',\n    },\n    logger: {\n        name: 'au-cli-esnext'\n    },\n    i18n: {\n        debug: true\n    },\n    'aurelia-api': {\n        endpoints: [\n            {\n                name: 'user',\n                endpoint: 'http://127.0.0.1:1337/user/',\n                // config  : {},\n                default: true\n            },\n            {\n                name: 'auth',\n                endpoint: 'http://127.0.0.1:1337/',\n                // config  : {}\n            }\n        ],\n    },\n    defaultLocale: {\n        language: 'en',\n        locale: 'en-US'\n    },\n    'aurelia-notification': {\n        defaults: {\n            timeout: 5000,\n            clickToClose: true\n        },\n        notifications: {\n            success: 'humane-flatty-success',\n            error: 'humane-flatty-error',\n            info: 'humane-flatty-info'\n        }\n    },\n    enrollment: {\n        numberOfRequiredChallengeQuestionAnswers: 5,\n        numberOfRequiredSmsInfos: 1,\n        numberOfRequiredEmailInfos: 1,\n        confirmDisclaimerEventTimerStartTime: 1,\n        verifyPhoneInfoTimerStartTime: 10,\n        verifyEmailInfoTimerStartTime: 10\n    }\n};\n","export default {\n    /* @see http://aurelia-authentication.spoonx.org/configuration.html */\n    'aurelia-authentication': {\n        // Which endpoint (in `./app.js`) to use for auth requests.\n        endpoint: 'auth',\n\n        // Which endpoints to patch with the JWT (Authorization header).\n        configureEndpoints: ['auth', 'user'],\n\n        // The base url used for all authentication related requests, including provider.url below.\n        // This appends to the httpClient/endpoint base url (in `./app.js`), it does not override it.\n        baseUrl: 'auth',\n\n        // The API endpoint to which login requests are sent\n        loginUrl: '/login',\n\n        // The API endpoint to which signup requests are sent\n        signupUrl: '/signup',\n\n        // Redirect to this url after successfully logging in\n        loginRedirect: '/#/self-service',\n\n        // The API endpoint used in profile requests (inc. `find/get` and `update`)\n        profileUrl: '/me',\n\n        accessTokenProp: 'access_token',\n        refreshTokenProp: 'refresh_token',\n        idTokenProp: 'id_token',\n        refreshTokenSubmitProp: 'refresh_token',\n        refreshTokenUrl: '/refresh-token',\n        useRefreshToken: true\n    }\n};\n","/**\n * This file gets copied into place on bundle.\n * This will become local.js in production.\n *\n * NOTE: Make sure this file is altered as needed.\n */\nexport default {\n    app: {\n        // The environment we're running in.\n        environment: '{{environment}}', // Automatically set based on deploy context.\n    },\n    'aurelia-api': {\n        endpoints: [\n            {\n                name: 'user',        // The name by which you reference this endpoint\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\n                default: true          // Set this to the default endpoint (defaults to false)\n            },\n            {\n                name: 'auth',       // The name by which you reference this endpoint\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\n            }\n        ]\n    }\n};\n","export default {};\n","export default {\n    routes: [\n        {\n            route: ['', '/login'],\n            name: 'login',\n            moduleId: 'components/views/login/login',\n            nav: false,\n            auth: false,\n            title: 'Login',\n            settings: {\n                t: 'login_route',\n                roles: []\n            }\n        }, {\n            route: '/logout',\n            name: 'logout',\n            moduleId: 'components/views/logout/logout',\n            title: 'Logout',\n            settings: {\n                t: 'logout_route',\n                roles: []\n            }\n        }, {\n            route: '/enrollment',\n            name: 'enrollment',\n            moduleId: 'components/views/enrollment/enrollment',\n            nav: false,\n            auth: true,\n            title: 'Enrollment',\n            settings: {\n                t: 'enrollment_route',\n                roles: ['notenrolled']\n            }\n        }, {\n            route: '/challenge',\n            name: 'challenge',\n            moduleId: 'components/views/challenge/challenge',\n            nav: false,\n            auth: true,\n            title: 'Challenge',\n            settings: {\n                t: 'challenge_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service',\n            name: 'self-service',\n            moduleId: 'components/views/self-service/self-service',\n            nav: false,\n            auth: true,\n            title: 'Self Service',\n            settings: {\n                t: 'self-service_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/change-password',\n            name: 'change-password',\n            moduleId: 'components/views/change-password/change-password',\n            nav: false,\n            auth: true,\n            title: 'Change Password',\n            settings: {\n                t: 'change-password_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/unlock-profile',\n            name: 'unlock-profile',\n            moduleId: 'components/views/unlock-profile/unlock-profile',\n            nav: false,\n            auth: true,\n            title: 'Unlock Profile',\n            settings: {\n                t: 'unlock-profile_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/edit-credentials',\n            name: 'edit-profile',\n            moduleId: 'components/views/edit-credentials/edit-credentials',\n            nav: false,\n            auth: true,\n            title: 'Edit Credentials',\n            settings: {\n                t: 'edit-credentials_route',\n                roles: []\n            }\n        }],\n    fallbackRoute: 'login'\n};\n","import {ValidationRenderer, RenderInstruction, ValidationError} from 'aurelia-validation';\n\nif (window.Element && !Element.prototype.closest) {\n    Element.prototype.closest =\n        function (s) {\n            let matches = (this.document || this.ownerDocument).querySelectorAll(s);\n            let i;\n            let el = this;\n            do {\n                i = matches.length;\n                while (--i >= 0 && matches.item(i) !== el) {\n                }\n            } while ((i < 0) && (el = el.parentElement));\n            return el;\n        };\n}\n\nconst abideLabels = false;\n\nexport class FoundationValidationRenderer {\n    render(instruction) {\n        for (let {result, elements} of instruction.unrender) {\n            for (let element of elements) {\n                FoundationValidationRenderer.remove(element, result);\n            }\n        }\n\n        for (let {result, elements} of instruction.render) {\n            if (!result.valid) {\n                for (let element of elements) {\n                    FoundationValidationRenderer.add(element, result);\n                }\n            }\n        }\n    }\n\n    static add(element, result) {\n        if (element) {\n            const formRow = element.closest('.form-row');\n            if (!formRow) {\n                return;\n            }\n\n            const formLabel = formRow.getElementsByTagName('label')[0];\n            const formInput = formRow.getElementsByTagName('input')[0];\n            if (result.valid) {\n                if (abideLabels && formLabel && !formLabel.classList.contains('is-invalid-label')) {\n                    formLabel.classList.add('is-valid-label');\n                }\n\n                if (formInput && !formInput.classList.contains('is-invalid-input')) {\n                    formInput.classList.add('is-valid-input');\n                }\n            } else {\n                if (abideLabels && formLabel) {\n                    formLabel.classList.remove('is-valid-label');\n                    formLabel.classList.add('is-invalid-label');\n                }\n\n                if (formInput) {\n                    formInput.classList.remove('is-valid-input');\n                    formInput.classList.add('is-invalid-input');\n                    formInput.setAttribute('aria-invalid', 'true');\n                }\n\n                const message = document.createElement('span');\n                message.className = 'form-error is-visible';\n                message.textContent = result.message;\n                message.id = `validation-message-${result.id}`;\n                formRow.appendChild(message);\n            }\n        }\n    }\n\n    static remove(element, result) {\n        if (element) {\n            const formRow = element.closest('.form-row');\n            if (!formRow) {\n                return;\n            }\n\n            const formLabel = formRow.getElementsByTagName('label')[0];\n            const formInput = formRow.getElementsByTagName('input')[0];\n\n            if (result.valid) {\n                if (abideLabels && formLabel) {\n                    formLabel.classList.remove('is-valid-label');\n                }\n\n                if (formInput) {\n                    formInput.classList.remove('is-valid-input');\n                }\n            } else {\n                if (abideLabels && formLabel) {\n                    formLabel.classList.remove('is-invalid-label');\n                }\n\n                if (formInput) {\n                    formInput.classList.remove('is-invalid-input');\n                    formInput.setAttribute('aria-invalid', 'false');\n                }\n\n                const message = formRow.querySelector(`#validation-message-${result.id}`);\n                if (message) {\n                    formRow.removeChild(message);\n                }\n            }\n        }\n    }\n}\n","import {FoundationValidationRenderer} from 'foundation-validation/foundation-validation-renderer';\n\nexport function configure(config) {\n    config.container.registerHandler(\n        'foundation-form',\n        container => container.get(FoundationValidationRenderer));\n}\n","export class ChallengeQuestion {\n    challengeQuestionId = '';\n    challengeQuestionText = '';\n    userAnswerText = '';\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.challengeQuestionId) {\n                this.challengeQuestionId = response.challengeQuestionId;\n            }\n            if (response.challengeQuestionText) {\n                this.challengeQuestionText = response.challengeQuestionText;\n            }\n        }\n    }\n}\n","export class ChallengeQuestionAnswer {\n    challengeQuestionId = '';\n    challengeQuestionText = '';\n    userAnswerText = '';\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.challengeQuestionId) {\n                this.challengeQuestionId = response.challengeQuestionId;\n            }\n            if (response.challengeQuestionText) {\n                this.challengeQuestionText = response.challengeQuestionText;\n            }\n            if (response.userAnswerText) {\n                this.userAnswerText = response.userAnswerText;\n            }\n        }\n    }\n}\n","export class EmailInfo {\n    emailAddress ='';\n    label = '';\n    isDefault = false;\n    verified = false;\n    hasActiveToken = false;\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.emailAddress) {\n                this.emailAddress = response.emailAddress;\n            }\n            if (response.label) {\n                this.label = response.label;\n            }\n            this.isDefault = Boolean(response.isDefault);\n            this.verified = Boolean(response.verified);\n            this.hasActiveToken = Boolean(response.hasActiveToken);\n        }\n    }\n}\n","export class SmsInfo {\n    phoneNumber ='';\n    label = '';\n    isDefault = false;\n    verified = false;\n    hasActiveToken = false;\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.phoneNumber) {\n                this.phoneNumber = response.phoneNumber;\n            }\n            if (response.label) {\n                this.label = response.label;\n            }\n            this.isDefault = Boolean(response.isDefault);\n            this.verified = Boolean(response.verified);\n            this.hasActiveToken = Boolean(response.hasActiveToken);\n        }\n    }\n}\n","import {ChallengeQuestion} from 'models/challengeQuestion';\nimport {ChallengeQuestionAnswer} from 'models/challengeQuestionAnswer';\nimport {SmsInfo} from 'models/smsInfo';\nimport {EmailInfo} from 'models/emailInfo';\nimport {AuthStatusCode} from 'util/common-models';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\nexport class User {\n    sessionId = '';\n    transactionId = '';\n    userId = '';\n    credentials = '';\n    fullName = '';\n    access_token = '';\n    _availableChallengeQuestions = [];\n    _challengeQuestionAnswers = [];\n    challengeQuestions = [];\n    smsInfos = [];\n    emailInfos = [];\n    availableChallengeCredentialTypes = [];\n    numberOfRequiredChallengeQuestionAnswers = appConfig.enrollment.numberOfRequiredChallengeQuestionAnswers || 5;\n    numberOfRequiredSmsInfos = appConfig.enrollment.numberOfRequiredSmsInfos || 1;\n    numberOfRequiredEmailInfos = appConfig.enrollment.numberOfRequiredEmailInfos || 1;\n\n    constructor(attributes) {\n        this.fromJson(attributes);\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.authStatusCode) {\n                this.authStatusCode = AuthStatusCode[response.authStatusCode];\n            }\n            if (response.sessionId) {\n                this.sessionId = response.sessionId;\n            }\n            if (response.transactionId) {\n                this.transactionId = response.transactionId;\n            }\n            if (response.userId) {\n                this.userId = response.userId;\n            }\n            if (response.userInfo && response.userInfo.fullName) {\n                this.fullName = response.userInfo.fullName;\n            }\n            if (response.access_token) {\n                this.access_token = response.access_token;\n            }\n            let buildChallengeQuestions = false;\n            if (response.availableChallengeQuestionAnswers && response.availableChallengeQuestionAnswers.length && response.availableChallengeQuestionAnswers.length > 0) {\n                buildChallengeQuestions = true;\n                for (let i = 0; i < response.availableChallengeQuestionAnswers.length; i++) {\n                    let newChallengeQuestion = new ChallengeQuestion();\n                    newChallengeQuestion.fromJson(response.availableChallengeQuestionAnswers[i]);\n                    this._availableChallengeQuestions.push(newChallengeQuestion);\n                }\n            }\n            let mapChallengeQuestionAnswers = false;\n            if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\n                mapChallengeQuestionAnswers = true;\n                for (let j = 0; j < response.challengeQuestionAnswers.length; j++) {\n                    let newChallengeQuestionAnswer = new ChallengeQuestionAnswer();\n                    newChallengeQuestionAnswer.fromJson(response.challengeQuestionAnswers[j]);\n                    this._challengeQuestionAnswers.push(newChallengeQuestionAnswer);\n                }\n            }\n            if (response.smsInfos && response.smsInfos.length && response.smsInfos.length > 0) {\n                for (let k = 0; k < response.smsInfos.length; k++) {\n                    let newSmsInfo = new SmsInfo();\n                    newSmsInfo.fromJson(response.smsInfos[k]);\n                    this.smsInfos.push(newSmsInfo);\n                }\n            }\n            if (response.emailInfos && response.emailInfos.length && response.emailInfos.length > 0) {\n                for (let l = 0; l < response.emailInfos.length; l++) {\n                    let newEmailInfo = new EmailInfo();\n                    newEmailInfo.fromJson(response.emailInfos[l]);\n                    this.emailInfos.push(newEmailInfo);\n                }\n            }\n            if (response.credentialTypes && response.credentialTypes.length && response.credentialTypes.length > 0) {\n                for (let m = 0; m < response.credentialTypes.length; m++) {\n                    this.availableChallengeCredentialTypes.push(response.credentialTypes[m]);\n                }\n            }\n\n            if (buildChallengeQuestions) {\n                this.buildChallengeQuestions(this.numberOfRequiredChallengeQuestionAnswers);\n            }\n            if (mapChallengeQuestionAnswers) {\n                if (!buildChallengeQuestions) {\n                    if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\n                        for (let n = 0; n < response.challengeQuestionAnswers.length; n++) {\n                            let newChallengeQuestion = new ChallengeQuestion();\n                            newChallengeQuestion.fromJson(response.challengeQuestionAnswers[n]);\n                            this._availableChallengeQuestions.push(newChallengeQuestion);\n                        }\n                        this.buildChallengeQuestions(response.challengeQuestionAnswers.length);\n                    }\n                }\n                this.mapChallengeQuestionAnswers();\n            }\n        }\n    }\n\n    buildChallengeQuestions(numberOfChallengeQuestions) {\n        this.challengeQuestions = [];\n        for (let i = 0; i < numberOfChallengeQuestions; i++) {\n            this.challengeQuestions.push({\n                availableChallengeQuestions: _.orderBy(_.cloneDeep(this._availableChallengeQuestions, ['challengeQuestionId'], ['asc'])),\n                selectedAvailableChallengeQuestion: null,\n                previouslySelectedAvailableChallengeQuestion: null,\n                userAnswerText: '',\n                showActualAnswer: false\n            });\n        }\n    }\n\n    updateAvailableChallengeQuestions(selectedChallengeQuestion, selectedAvailableChallengeQuestion) {\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let currentChallengeQuestion = this.challengeQuestions[i];\n            if (currentChallengeQuestion !== selectedChallengeQuestion) {\n                let removedAvailableChallengeQuestion;\n                if (selectedAvailableChallengeQuestion !== null) {\n                    let index = _.findIndex(currentChallengeQuestion.availableChallengeQuestions, selectedAvailableChallengeQuestion);\n                    if (index > -1) {\n                        removedAvailableChallengeQuestion = currentChallengeQuestion.availableChallengeQuestions.splice(index, 1);\n                    }\n                }\n                if (selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion !== null) {\n                    currentChallengeQuestion.availableChallengeQuestions.splice(0, 0, selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion);\n                }\n            }\n        }\n\n        selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion = selectedAvailableChallengeQuestion;\n    }\n\n    getChallengeQuestionAnswers() {\n        let challengeQuestionAnswers = [];\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let challengeQuestion = this.challengeQuestions[i];\n            if (challengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText && challengeQuestion.userAnswerText) {\n                challengeQuestionAnswers.push({\n                    challengeQuestionId: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId,\n                    challengeQuestionText: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText,\n                    userAnswerText: challengeQuestion.userAnswerText\n                });\n            }\n        }\n        return challengeQuestionAnswers;\n    }\n\n    mapChallengeQuestionAnswers() {\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let challengeQuestion = this.challengeQuestions[i];\n            let challengeQuestionAnswer = this._challengeQuestionAnswers[i];\n            if (challengeQuestion && challengeQuestionAnswer) {\n                challengeQuestion.selectedAvailableChallengeQuestion = _.find(challengeQuestion.availableChallengeQuestions, function (a) {\n                    return a.challengeQuestionId === challengeQuestionAnswer.challengeQuestionId;\n                });\n                this.updateAvailableChallengeQuestions(challengeQuestion, challengeQuestion.selectedAvailableChallengeQuestion)\n            }\n        }\n    }\n\n    get challengeQuestionAnswersComplete() {\n        return this._challengeQuestionAnswers && this._challengeQuestionAnswers.length && this._challengeQuestionAnswers.length >= this.numberOfRequiredChallengeQuestionAnswers;\n    }\n\n    get smsInfosComplete() {\n        return this.smsInfos && this.smsInfos.length && this.smsInfos.length >= this.numberOfRequiredSmsInfos;\n    }\n\n    get emailInfosComplete() {\n        let isValid = false;\n        if (this.emailInfos && this.emailInfos.length && this.emailInfos.length >= this.numberOfRequiredEmailInfos) {\n            if (this.emailInfos.length > 1) {\n                isValid = true;\n            } else {\n                if (!this.emailInfos[0].emailAddress.match('companyname.com')) {\n                    isValid = true;\n                }\n            }\n        }\n        return isValid;\n    }\n}\n","export function configure(config) {\n    config.globalResources([\n        \"./value-converters/date-formatter\",\n        \"./value-converters/phone-formatter\",\n        \"./value-converters/timer-formatter\"\n    ]);\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {Notification} from 'aurelia-notification';\nimport {Router} from 'aurelia-router';\nimport * as nprogress from 'nprogress';\nimport {Config} from 'aurelia-api';\nimport {AuthService} from 'aurelia-authentication';\nimport {logger} from 'util/logger-helper';\nimport {DeviceHelper} from 'util/device-helper';\n\n@inject(Config, DeviceHelper, Router, Notification, AuthService)\nexport class UserService {\n    isRequesting = false;\n\n    constructor(config, deviceHelper) {\n        this.userEndpoint = config.getEndpoint(\"user\");\n        this.deviceHelper = deviceHelper;\n    }\n\n    signin(request) {\n        this._pre(request);\n        return this.userEndpoint.post('signin', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    analyzePreAuthUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('analyzepreauthuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    challengePreAuthUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('challengepreauthuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    challengeUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('challengeuser', request)\n            .then(response => {\n                this._post(response);\n            });\n    }\n\n    authenticatePreAuthUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('authenticatepreauthuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    authenticateUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('authenticateuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    getPreAuthUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('getpreauthuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    getUser(request) {\n        this._pre(request);\n        return this.userEndpoint.post('getuser', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    addChallengeQuestionAnswers(request) {\n        this._pre(request);\n        return this.userEndpoint.post('addchallengequestionanswers', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    verifyContactInfo(request) {\n        this._pre(request);\n        return this.userEndpoint.post('verifycontactinfo', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    removeContactInfo(request) {\n        this._pre(request);\n        return this.userEndpoint.post('removecontactinfo', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    resetPassword(request) {\n        this._pre(request);\n        return this.userEndpoint.post('resetcredentials', request)\n            .then(response => {\n                this._post(response);\n                return response;\n            });\n    }\n\n    _pre(request) {\n        nprogress.start();\n        this.isRequesting = true;\n        if (request) {\n            request.deviceRequest = this.deviceHelper.deviceRequest;\n        }\n    }\n\n    _post(response) {\n        if (response && response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n            this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n        }\n        this.isRequesting = false;\n        nprogress.done();\n    }\n}\n","import _ from 'lodash';\n\nexport class EnumSymbol {\n    sym = Symbol.for(name);\n    ordinal;\n    description;\n    keyName;\n\n    constructor(name, {ordinal, description}) {\n        if (!Object.is) {\n            Object.is = function (x, y) {\n                // SameValue algorithm\n                if (x === y) { // Steps 1-5, 7-10\n                    // Steps 6.b-6.e: +0 != -0\n                    return x !== 0 || 1 / x === 1 / y;\n                } else {\n                    // Step 6.a: NaN == NaN\n                    return x !== x && y !== y;\n                }\n            };\n        }\n        if (!Object.is(ordinal, undefined)) {\n            this.ordinal = ordinal;\n        }\n        if (description) {\n            this.description = description;\n        }\n        this.keyName = name;\n        Object.freeze(this);\n    }\n\n    get display() {\n        return this.description || Symbol.keyFor(this.sym);\n    }\n\n    get key() {\n        return this.keyName;\n    }\n\n    toString() {\n        return this.sym;\n    }\n\n    valueOf() {\n        return this.ordinal;\n    }\n}\n\nexport class Enum {\n    constructor(enumLiterals) {\n        for (let key in enumLiterals) {\n            if (enumLiterals.hasOwnProperty(key)) {\n                if (!enumLiterals[key]) {\n                    throw new TypeError('each enum should have been initialized with at least empty {} value');\n                }\n                this[key] = new EnumSymbol(key, enumLiterals[key]);\n            }\n        }\n        Object.freeze(this);\n    }\n\n    symbols() {\n        let syms = [];\n        let self = this;\n        Object.keys(this).forEach(function (k) {\n            syms.push(self[k]);\n        });\n        return syms; //for (key of Object.keys(this)) this[key];\n    }\n\n    keys() {\n        return Object.keys(this);\n    }\n\n    contains(sym) {\n        if (!(sym instanceof EnumSymbol)) {\n            return false;\n        }\n        return this[Symbol.keyFor(sym.sym)] === sym;\n    }\n\n    get(ordinal) {\n        let self = this;\n        let symbol;\n        this.keys().forEach(k => {\n            if (self[k].ordinal === +ordinal) {\n                symbol = self[k];\n            }\n        });\n        return symbol;\n    }\n}\n\nexport const AuthStatusCode = new Enum({\n    Success: {ordinal: 0, description: 'authStatusCode.success'},\n    Deny: {ordinal: 1, description: 'authStatusCode.deny'},\n    Pending: {ordinal: 2, description: 'authStatusCode.pending'},\n    Challenge: {ordinal: 3, description: 'authStatusCode.challenge'}\n});\n\nexport const ActionCode = new Enum({\n    ALLOW: {ordinal: 0, description: 'actionCode.allow'},\n    DENY: {ordinal: 1, description: 'actionCode.deny'},\n    CHALLENGE: {ordinal: 2, description: 'actionCode.challenge'},\n    ENROLL: {ordinal: 3, description: 'actionCode.enroll'}\n});\n\nexport const CredentialType = new Enum({\n    PASSWORD: {ordinal: 0, description: 'credentialType.password'},\n    QUESTIONS: {ordinal: 1, description: 'credentialType.questions'},\n    PHONE: {ordinal: 2, description: 'credentialType.phone'},\n    EMAIL: {ordinal: 3, description: 'credentialType.email'},\n    RSATOKEN: {ordinal: 4, description: 'credentialType.rsaToken'}\n});\n\nexport const ContactType = new Enum({\n    PHONE: {ordinal: 0, description: 'contactType.phone'},\n    EMAIL: {ordinal: 1, description: 'contactType.email'}\n});\n\nexport const UserStatus = new Enum({\n    NOTENROLLED: {ordinal: 0, description: 'actionCode.notEnrolled'},\n    UNVERIFIED: {ordinal: 1, description: 'actionCode.unverified'},\n    VERIFIED: {ordinal: 2, description: 'actionCode.verified'},\n    DELETE: {ordinal: 3, description: 'actionCode.delete'},\n    LOCKOUT: {ordinal: 4, description: 'actionCode.lockout'},\n    UNLOCKOUT: {ordinal: 5, description: 'actionCode.unlockout'}\n});\n\nexport const UserType = new Enum({\n    PERSISTENT: {ordinal: 0, description: 'actionCode.persistent'},\n    NONPERSISTENT: {ordinal: 1, description: 'actionCode.nonPersistent'},\n    BAIT: {ordinal: 2, description: 'actionCode.bait'}\n});\n\nlet determineShiftedValues = (total, highestValue) => {\n    let values = [];\n    let runningTotal = total;\n    for (let i = highestValue; i >= 0; i--) {\n        if (runningTotal >> i === 1) {\n            let binValue = Math.pow(2, i);\n            runningTotal = runningTotal - binValue;\n            values.push(binValue);\n        }\n    }\n    return values;\n};\n\nexport let EnumeratedTypeHelper = function () {\n    return {\n        asArray: (type, value) => {\n            if (value === undefined) {\n                return [];\n            }\n            let v = determineShiftedValues(value, type.symbols().length);\n            let enums = [];\n            _.forEach(v, ordinal => {\n                enums.push(type.get(ordinal));\n            });\n            return enums;\n        }\n    };\n}();\n","export class DeviceHelper {\n\n    constructor() {\n    }\n\n    get deviceRequest() {\n        let devicePrint = encode_deviceprint();\n\n        //Gather existing token value from cookie\n        let deviceTokenCookie = this.deviceTokenCookie;\n\n        return {\n            \"devicePrint\": devicePrint,\n            \"deviceTokenCookie\": deviceTokenCookie,\n            \"deviceTokenFSO\": deviceTokenCookie,\n            \"httpAccept\": null,\n            \"httpAcceptChars\": null,\n            \"httpAcceptEncoding\": null,\n            \"httpAcceptLanguage\": null,\n            \"httpReferrer\": null,\n            \"ipAddress\": null,\n            \"userAgent\": null\n        };\n    }\n\n    setDeviceTokenCookie(cDeviceToken) {\n        let cname = \"PMData\";\n        let cmaxage = 365;\n        let d = new Date();\n        d.setTime(d.getTime() + (cmaxage * 24 * 60 * 60 * 1000));\n        let expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cDeviceToken + \";\" + expires + \";path=/;\";\n    }\n\n    get deviceTokenCookie() {\n        let cname = \"PMData=\";\n        let ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(cname) === 0) {\n                return c.substring(cname.length, c.length);\n            }\n        }\n        return \"\";\n    }\n}\n","export default class EventTimer {\n\n    constructor(eventAggregator) {\n        this.eventAggregator = eventAggregator;\n    }\n\n    start(interval, tickKey, timeoutKey) {\n        let currentTime = interval;\n\n        this.intervalId = window.setInterval(() => {\n            if (--currentTime < 0) {\n                this.stop();\n                if (this.eventAggregator && this.eventAggregator.publish && timeoutKey) {\n                    this.eventAggregator.publish(timeoutKey, 0);\n                }\n            }\n            if (this.eventAggregator && this.eventAggregator.publish && tickKey) {\n                this.eventAggregator.publish(tickKey, currentTime);\n            }\n        }, 1000);\n    }\n\n    stop() {\n        window.clearInterval(this.intervalId);\n    }\n}\n","function LocationHelperFunction() {\n    return {\n        getQueryParameter: function (key, default_) {\n            if (default_ == null) {\n                default_ = null;\n            }\n            key = key.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n            key = key.replace(\"$\", \"\\\\$\");\n            let regex = new RegExp(\"[\\\\?&]\" + key + \"=([^&#]*)\");\n            let qs = regex.exec(window.location.href);\n            if (qs == null) {\n                return default_;\n            } else {\n                return decodeURIComponent(qs[1]);\n            }\n        }\n    };\n}\n\nexport let LocationHelper = new LocationHelperFunction();\n","import {LogManager} from 'aurelia-framework';\nimport appConfig from 'config/app';\n\nexport let logger = LogManager.getLogger(appConfig.logger.name);\n","import ODataFilter from 'odata-filter-parser';\nimport _ from 'lodash';\n\nlet Operators = ODataFilter.Operators;\n\nexport let ObjectUtilities = {\n    isEqual: function (objA, objB) {\n        if (!objA || !objB) {\n            return (!objA && !objB);\n        }\n        let aKeys = Object.keys(objA);\n        let bKeys = Object.keys(objB);\n        if (aKeys.length !== bKeys.length) {\n            return false;\n        }\n        for (let i = 0, len = aKeys.length; i < len; i++) {\n            let key = aKeys[i];\n            if (!objB.hasOwnProperty(key) || objA[key] !== objB[key]) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    deepExtend: function (destination, source) {\n        for (let property in source) {\n            if (source.hasOwnProperty(property)) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    ObjectUtilities.deepExtend(destination[property], source[property]);\n                } else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n        return destination;\n    }\n};\n\nexport let PredicateUtilities = {\n    removeMatches(subject, predicates) {\n        let predicateList = _.clone(predicates);\n        if (predicateList.length === 1 && !Operators.isLogical(predicateList[0].operator)) {\n            if (predicateList[0].subject === subject) {\n                predicateList.splice(0, 1);\n            }\n        } else {\n            _.remove(predicateList, item => {\n                return item.subject === subject;\n            });\n            let logicals = _.filter(predicateList, item => {\n                return Operators.isLogical(item.operator);\n            });\n            if (logicals.length > 0) {\n                _.forEach(logicals, logical => {\n                    let flattened = logical.flatten();\n                    let processed = PredicateUtilities.removeMatches(subject, flattened);\n                    if (processed.length < flattened.length) {\n                        let indx = _.indexOf(predicateList, logical);\n                        predicateList.splice(indx, 1);\n                    }\n                });\n            }\n        }\n        return predicateList;\n    }\n};\n\nexport let StringUtil = {\n    pluralize: function (str, count) {\n        let s = str;\n        if (count > 1) {\n            if (str.endsWith(\"y\")) {\n                s = str.substring(0, str.length - 1) + 'ies';\n            } else {\n                s += 's';\n            }\n        }\n        return s;\n    }\n};\n","import moment from 'moment';\nimport {logger} from 'util/logger-helper';\n\nfunction StringHelperFunction() {\n    return {\n        formatDate: function(date) {\n            let formattedDate = '';\n            if (date) {\n                try {\n                    let d = new Date(date);\n                    formattedDate = moment(d).format('MM/DD/YYYY');\n                } catch (dateErr) {\n                    logger.warn(\"Invalid value for view:\" + value, dateErr);\n                }\n            }\n            if (formattedDate === 'Invalid date') { // this will force the text to be \"\" for invalid dates\n                formattedDate = null;\n            }\n            return formattedDate;\n        },\n\n        parseDate: function(date) {\n            let parsedDate = '';\n            if (date) {\n                if (date === 'Invalid date') { // this will force the text to be \"\" for invalid dates\n                    return null;\n                }\n                try {\n                    parsedDate = moment(new Date(date)).format('YYYY-MM-DDTHH:mm:ssZ');\n                } catch (dateErr) {\n                    parsedDate = null;\n                    logger.warn(\"invalid value from view: \" + value, dateErr);\n                }\n            }\n            return parsedDate;\n        },\n\n        formatPhoneNumber: function(phoneNumber) {\n            let formattedPhoneNumber = '';\n            if (phoneNumber) {\n                let rawPhoneNumber = phoneNumber.replace(/\\D/g,'');\n                let size = rawPhoneNumber.length;\n    \n                if(size > 10)\n                {\n                    rawPhoneNumber = rawPhoneNumber.substring(1, 11);\n                }\n\n                formattedPhoneNumber = rawPhoneNumber.toString();\n                if (size > 0 && size < 4) {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber;\n                } else if (size < 7) {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6);\n                } else {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6) + ' - ' + formattedPhoneNumber.substring(6, 10);\n                }\n            }\n            return formattedPhoneNumber;\n        },\n\n        parsePhoneNumber: function(phoneNumber) {\n            let parsedPhoneNumber = '';\n            if (phoneNumber) {\n                parsedPhoneNumber = phoneNumber.replace(/\\D/g,'').substring(0,10);\n            }\n            return parsedPhoneNumber;\n        }\n    };\n}\n\nexport let StringHelper = new StringHelperFunction();\n","export class WindowHelper {\n    \n    constructor() {\n    }\n\n    addEventListener(type, listener, options) {\n        if (window && window.addEventListener) {\n            window.addEventListener(type, listener, options);\n        }\n    }\n    removeEventListener(type, listener, options, useCapture) {\n        if (window && window.removeEventListener) {\n            window.removeEventListener(type, listener, options);\n        }\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class NavBar {\n    @bindable router = null;\n    @bindable username = null;\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    get isAuthenticated() {\n        return this.authService.isAuthenticated();\n    }\n\n    goToLogout() {\n        let confirmDialogModel = this.i18n.tr('logout-dialog', {returnObjects: true});\n\n        this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.router.navigateToRoute('logout');\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class SiteFooter {\n    @bindable router = null;\n    @bindable languages = null;\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    setLanguage(event, language) {\n        localStorage.setItem('language', language.code);\n        logger.info('language_changed');\n        window.top.location.reload();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\n\nexport class ValidationSummary {\n    @bindable errors = null;\n    @bindable autofocus = null;\n}\n","export class ChallengeStart {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeCancel {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeReceived {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeVerify {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeFail {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\n","export class EnrollmentDisclaimerConfirmed {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollmentStart {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollChallengeQuestionAnswersComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollPhoneInfosComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollEmailInfosComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollCredentialsComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollmentComplete {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","export class RequiredCredentialTypeChanged {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","export class GoToLogin {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToLogout {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class SigninSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeWithCredentials {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class AuthenticateUserFail {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class AuthenticateUserSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToForgotPassword {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","export class GoToChangePassword {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditProfile {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToUnlockProfile {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditChallengeQuestionAnswers {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditPhoneInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditEmailInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport StringHelper from 'util/string-helper';\n\n@valueConverter(\"dateFormatter\")\nexport class dateFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatDate(value);\n    }\n\n    fromView(value) {\n        return StringHelper.parseDate(value);\n    }\n\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport {StringHelper} from 'util/string-helper';\n\n@valueConverter(\"intervalFormatter\")\nexport class intervalFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatInterval(value);\n    }\n\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport {StringHelper} from 'util/string-helper';\n\n@valueConverter(\"phoneFormatter\")\nexport class phoneFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatPhoneNumber(value);\n    }\n\n    fromView(value) {\n        return StringHelper.parsePhoneNumber(value)\n    }\n}\n","import numbro from 'numbro';\n\nexport class TimerFormatterValueConverter {\n    toView(value) {\n        if (value === '0') {\n            return 'Invalid time';\n        } else {\n            let formattedValue = numbro(value).format('0:0');\n            return formattedValue.substring(formattedValue.length - 5, formattedValue.length);\n        }\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    ChallengeCancel,\n    ChallengeVerify,\n    ChallengeSuccess,\n    ChallengeFail,\n    ChallengeComplete\n} from 'resources/messages/challenge-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithChallengeQuestions {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\n            ValidationRules\n                .ensure('userAnswerText').required()\n                .on(challengeQuestion);\n        }\n    }\n\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new ChallengeCancel());\n            resolve();\n        });\n    }\n\n    _getCredentials() {\n        let credentials = '';\n        for (let challengeQuestion of this.vm.user.challengeQuestions) {\n            if (challengeQuestion.userAnswerText !== null || challengeQuestion.userAnswerText.length >= 0) {\n                credentials = credentials + challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId + '|' + challengeQuestion.userAnswerText + ',';\n            }\n        }\n        credentials = _.trimEnd(credentials, ',');\n        return credentials;\n    }\n\n    next() {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let credentials = this._getCredentials();\n                        let message = {\n                            credentialType: 'Questions',\n                            credentials: credentials\n                        };\n                        this.eventAggregator.publish(new ChallengeVerify(message));\n                    }\n                    resolve();\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    this.notification.error('challenge_error');\n                    reject(validateReason);\n                });\n        });\n\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {VerifyEmailInfoDialog} from 'components/views/verify-email-info-dialog/verify-email-info-dialog';\nimport {\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail\n} from 'resources/messages/challenge-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithEmailInfo {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise((resolve, reject) => {\n            this.vm = viewModel;\n            let request = {\n                userId: this.vm.user.userId,\n                token: this.vm.user.token\n            };\n            this.userService.getPreAuthUser(request)\n                .then(response => {\n                    this.vm.user.fromJson(response);\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    this.notification.error('get-user_error');\n                    reject(reason);\n                });\n        });\n    }\n\n    cancel(message) {\n        this.eventAggregator.publish(new ChallengeCancel());\n    }\n\n    challengeUser(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let request = {\n                            userId: this.vm.user.userId,\n                            credentialType: 'Email',\n                            contactInfo: this.vm.emailAddress,\n                            label: this.vm.emailAddress,\n                            isDefault: true\n                        };\n                        this.userService.challengeUser(request)\n                            .then(response => {\n                                this.vm.user.sessionId = response.sessionId;\n                                this.vm.user.transactionId = response.transactionId;\n                                if (response.challengeStatus !== 'Deny') {\n                                    this.goToVerifyEmailInfo(response);\n                                } else {\n                                    this.notification.error('challenge-user-deny_error');\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('challenge-user_error');\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    reject(validateReason);\n                })\n        });\n    }\n\n    goToVerifyEmailInfo(message) {\n        let verifyEmailInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyEmailInfoModel.messageParams = {\n            'emailAddress': this.vm.emailAddress\n        };\n        return this.dialogService.open({viewModel: VerifyEmailInfoDialog, model: verifyEmailInfoModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-email-info_resend');\n                        this.challengeUser();\n                    } else {\n                        this.notification.info('verify-email-info_canceled');\n                    }\n                } else {\n                    this.onChallengeSuccess(openDialogResult.output)\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-email-info_error');\n            });\n    }\n\n    onChallengeSuccess(message) {\n        this.eventAggregator.publish(new ChallengeSuccess(message));\n    }\n\n    onChallengeFail(message) {\n        this.eventAggregator.publish(new ChallengeFail(message));\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {VerifyPhoneInfoDialog} from 'components/views/verify-phone-info-dialog/verify-phone-info-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    ChallengeStart,\n    ChallengeReceived,\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail,\n    ChallengeComplete\n} from 'resources/messages/challenge-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithPhoneInfo {\n    vm;\n    subscribers = [];\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.selectedSmsInfo = null;\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeReceived, message => this.onChallengeReceived(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('selectedSmsInfo').required()\n            .on(this.vm);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new ChallengeCancel());\n            resolve();\n        });\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let message = {\n                            credentialType: 'Phone',\n                            label: this.vm.selectedSmsInfo.label\n                        };\n                        this.eventAggregator.publish(new ChallengeStart(message));\n                    }\n                    resolve();\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    this.notification.error('challenge_error');\n                    reject(validateReason);\n                })\n        });\n    }\n\n    onChallengeReceived(message) {\n        let verifyPhoneInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId,\n                access_token: this.vm.user.access_token\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyPhoneInfoModel.messageParams = {\n            'phoneNumber': this.vm.selectedSmsInfo.phoneNumber\n        };\n        return this.dialogService.open({\n            viewModel: VerifyPhoneInfoDialog,\n            model: verifyPhoneInfoModel,\n            rejectOnCancel: false\n        })\n            .whenClosed(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-phone-info_resend');\n                        this.next();\n                    } else {\n                        this.notification.info('verify-phone-info_canceled');\n                    }\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-phone-info_error');\n            });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail\n} from 'resources/messages/challenge-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithRSAToken {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise((resolve, reject) => {\n            this.vm = viewModel;\n            let request = {\n                userId: this.vm.user.userId,\n                credentialType: 'Questions',\n                authToken: this.vm.authToken\n            };\n            this.userService.challengeUser(request)\n                .then(response => {\n                    if (response.challengeStatus !== 'Deny') {\n                        this.vm.user.fromJson(response);\n                        this.applyValidationRules();\n                    } else {\n                        this.notification.error('challenge-user_error');\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    this.notification.error('challenge-user_error');\n                    reject(reason);\n                });\n        });\n    }\n\n    applyValidationRules() {\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\n            ValidationRules\n                .ensure('userAnswerText').required()\n                .on(challengeQuestion);\n        }\n    }\n\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new ChallengeCancel());\n            resolve();\n        });\n    }\n\n    _getCredentials() {\n        let credentials = '';\n        for (let challengeQuestion of this.vm.user.challengeQuestions) {\n            if (challengeQuestion.userAnswerText !== null || challengeQuestion.userAnswerText.length >= 0) {\n                credentials = credentials + challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId + '|' + challengeQuestion.userAnswerText + ',';\n            }\n        }\n        credentials = _.trimEnd(credentials, ',');\n        return credentials;\n    }\n\n    next() {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let credentials = this._getCredentials();\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            authToken: this.vm.user.authToken,\n                            credentialType: 'Questions',\n                            credentials: credentials,\n                            bindDevice: this.vm.bindDevice\n                        };\n                        this.userService.authenticateUser(request)\n                            .then(response => {\n                                if (response.authStatusCode !== 'Deny') {\n                                    this.onChallengeSuccess(response);\n                                } else {\n                                    this.notification.error('challenge_error');\n                                    this.onChallengeFail(response);\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('challenge_error');\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    this.notification.error('challenge_error');\n                    reject(validateReason);\n                });\n        });\n\n    }\n\n    onChallengeSuccess(message) {\n        this.eventAggregator.publish(new ChallengeSuccess(message));\n    }\n\n    onChallengeFail(message) {\n        this.eventAggregator.publish(new ChallengeFail(message));\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChangePassword {\n    vm;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.userId = payload ? payload.username : null;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User();\n                this.vm.user.fromJson(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(DialogController, EventAggregator, Notification, I18N, AuthService, UserService)\nexport class ConfirmDialog {\n    vm = {\n        headerIcon: '',\n        headerText: '',\n        message: '',\n        messageParams: {},\n        cancelButtonText: '',\n        confirmButtonText: '',\n    };\n\n    constructor(dialogController, eventAggregator, notification, i18n, authService, userService) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        this.vm = viewModel;\n    }\n\n    confirm(event) {\n        this.dialogController.ok();\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {CredentialType} from 'util/common-models';\nimport {\n    EnrollChallengeQuestionAnswersComplete,\n    EnrollPhoneInfosComplete,\n    EnrollEmailInfosComplete\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class EditCredentials {\n    vm;\n    editCredentialsViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.credentialType = CredentialType.QUESTIONS;\n\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollChallengeQuestionAnswersComplete, message => this.onEnrollChallengeQuestionAnswersComplete(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollPhoneInfosComplete, message => this.onEnrollPhoneInfosComplete(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollEmailInfosComplete, message => this.onEnrollEmailInfosComplete(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onGoToEnrollChallengeQuestionAnswers(event) {\n        this.editCredentialsViewModel = 'components/views/enroll-challenge-question-answers/enroll-challenge-question-answers';\n    }\n\n    onEnrollChallengeQuestionAnswersComplete(message) {\n        this.editCredentialsViewModel = null;\n    }\n\n    onGoToEnrollPhoneInfos(event) {\n        this.editCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\n    }\n\n    onEnrollPhoneInfosComplete(message) {\n        this.editCredentialsViewModel = null;\n    }\n\n    onGoToEnrollEmailInfos(event) {\n        this.editCredentialsViewModel = 'components/views/enroll-email-infos/enroll-email-infos';\n    }\n\n    onEnrollEmailInfosComplete(message) {\n        this.editCredentialsViewModel = null;\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    EnrollChallengeQuestionAnswersComplete\n} from 'resources/messages/enrollment-messages';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollChallengeQuestionAnswers {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\n            ValidationRules\n                .ensure('userAnswerText').required()\n                .on(challengeQuestion);\n        }\n    }\n\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\n    }\n\n    save(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let challengeQuestionAnswers = this.vm.user.getChallengeQuestionAnswers();\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            challengeQuestionAnswers: challengeQuestionAnswers\n                        };\n                        this.userService.addChallengeQuestionAnswers(request)\n                            .then(response => {\n                                this.notification.success('add-challenge-question-answers_success');\n                                this.eventAggregator.publish(new EnrollChallengeQuestionAnswersComplete());\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('add-challenge-question-answers_error');\n                                reject(reason);\n                            });\n                    } else {\n                        let validateError = new Error('validate_error');\n                        logger.error(validateError);\n                        this.notification.error('validate_error');\n                        reject(validateError);\n                    }\n                })\n                .catch(exception => {\n                    logger.error(exception);\n                    reject(exception);\n                });\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {VerifyEmailInfoDialog} from 'components/views/verify-email-info-dialog/verify-email-info-dialog';\nimport {\n    EnrollEmailInfosComplete\n} from 'resources/messages/enrollment-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class EnrollEmailInfos {\n    vm;\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.showEnrollEmailInfoWarning = true;\n            this.vm.emailAddress = '';\n            this.vm.emailAddressHasFocus = true;\n            this.vm.showAddEmailInfoForm = true;\n            if (this.vm.user.emailInfos.length > 0) {\n                this.vm.showAddEmailInfoForm = false;\n            } else {\n                this.vm.emailAddressHasFocus = true;\n            }\n            this.applyValidationRules();\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('emailAddress').required().email().withMessage(`\\${$value} is not a valid email address.`)\n            .on(this.vm);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'email-address-input') {\n                    if (event.key === 'Enter') {\n                        this.addEmailInfo();\n                    }\n                }\n            }\n        }\n    }\n\n    removeEmailInfo(event, contactInfo) {\n        let confirmDialogModel = this.i18n.tr('confirm-remove-email-info-dialog', {returnObjects: true});\n        confirmDialogModel.messageParams = {\n            'emailAddress': contactInfo.emailAddress\n        };\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.onConfirmRemoveEmailInfo(contactInfo);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n    onConfirmRemoveEmailInfo(contactInfo) {\n        let request = {\n            userId: this.vm.userId,\n            contactType: 'Email',\n            contactInfo: contactInfo.emailAddress,\n            label: contactInfo.label,\n            verified: contactInfo.verified,\n            hasActiveToken: contactInfo.hasActiveToken,\n            isDefault: true\n        };\n        return this.userService.removeContactInfo(request)\n            .then(response => {\n                this.vm.user.sessionId = response.sessionId;\n                this.vm.user.transactionId = response.transactionId;\n                this.notification.info('remove-contact-info_success');\n                this.vm.user.emailInfos.splice(_.findIndex(this.vm.user.emailInfos, contactInfo), 1);\n                this.eventAggregator.publish(new EnrollEmailInfosComplete());\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('remove-contact-info_error');\n            });\n    }\n\n    isEmailAddressUnique(emailAddress) {\n        let idx = _.findIndex(this.vm.user.emailInfos, function (s) {\n            return s.label === emailAddress;\n        });\n        return idx < 0;\n    }\n\n    addEmailInfo(event) {\n        return new Promise((resolve, reject) => {\n            if (this.isEmailAddressUnique(this.vm.emailAddress)) {\n                this.controller.validate()\n                    .then(result => {\n                        if (result.valid) {\n                            let request = {\n                                userId: this.vm.user.userId,\n                                credentialType: 'Email',\n                                contactInfo: this.vm.emailAddress,\n                                label: this.vm.emailAddress,\n                                isDefault: true\n                            };\n                            this.userService.challengeUser(request)\n                                .then(response => {\n                                    this.vm.user.sessionId = response.sessionId;\n                                    this.vm.user.transactionId = response.transactionId;\n                                    if (response.challengeStatus !== 'Deny') {\n                                        this.goToVerifyEmailInfo(response);\n                                    } else {\n                                        this.notification.error('challenge-user-deny_error');\n                                    }\n                                    resolve();\n                                })\n                                .catch(reason => {\n                                    logger.error(reason);\n                                    this.notification.error('challenge-user_error');\n                                    reject(reason);\n                                });\n                        } else {\n                            resolve();\n                        }\n                    })\n                    .catch(exception => {\n                        logger.error(exception);\n                        reject(exception);\n                    });\n            } else {\n                let duplicateEmailError = new Error('duplicate-email_error');\n                this.notification.error(duplicateEmailError);\n                reject(duplicateEmailError);\n            }\n        });\n    }\n\n    goToVerifyEmailInfo(message) {\n        let verifyEmailInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyEmailInfoModel.messageParams = {\n            'emailAddress': this.vm.emailAddress\n        };\n        return this.dialogService.open({viewModel: VerifyEmailInfoDialog, model: verifyEmailInfoModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-email-info_resend');\n                        this.addEmailInfo();\n                    } else {\n                        this.notification.info('verify-email-info_canceled');\n                    }\n                } else {\n                    this.onVerifyEmailInfoSuccess(openDialogResult.output);\n                    this.eventAggregator.publish(new EnrollEmailInfosComplete());\n\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-email-info_error');\n            });\n    }\n\n    onVerifyEmailInfoSuccess(message) {\n        if (message) {\n            let emailInfo = {\n                emailAddress: message.contactInfo,\n                label: message.contactInfo,\n                isDefault: false,\n                verified: true,\n                hasActiveToken: false\n            };\n            this.vm.user.emailInfos.push(emailInfo);\n\n            this.vm.user.sessionId = null;\n            this.vm.user.transactionId = null;\n            this.vm.emailAddress = '';\n            this.vm.emailAddressHasFocus = true;\n            this.vm.showAddEmailInfoForm = false;\n        }\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {WindowHelper} from 'util/window-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {VerifyPhoneInfoDialog} from 'components/views/verify-phone-info-dialog/verify-phone-info-dialog';\nimport {\n    EnrollPhoneInfosComplete\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class EnrollPhoneInfos {\n    vm;\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.showEnrollPhoneInfoWarning = true;\n            this.vm.phoneNumber = '';\n            this.vm.phoneNumberHasFocus = true;\n            this.vm.showAddPhoneInfoForm = true;\n            if (this.vm.user.smsInfos.length > 0) {\n                this.vm.showAddPhoneInfoForm = false;\n            } else {\n                this.vm.phoneNumberHasFocus = true;\n            }\n            this.applyValidationRules();\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('phoneNumber')\n            .required()\n            .minLength(10)\n            .maxLength(11)\n            .matches(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?\\D?\\D?(\\d{4})$/)\n            .withMessage(`\\${$value} is not a valid phone number.`)\n            .on(this.vm);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'phone-number-input') {\n                    if (event.key === 'Enter') {\n                        this.addPhoneInfo();\n                    }\n                }\n            }\n        }\n    }\n\n    removePhoneInfo(event, contactInfo) {\n        let confirmDialogModel = this.i18n.tr('confirm-remove-phone-info-dialog', {returnObjects: true});\n        confirmDialogModel.messageParams = {\n            'phoneNumber': contactInfo.phoneNumber\n        };\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.onConfirmRemovePhoneInfo(contactInfo);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n    onConfirmRemovePhoneInfo(contactInfo) {\n        let request = {\n            userId: this.vm.userId,\n            contactType: 'Phone',\n            contactInfo: contactInfo.phoneNumber,\n            label: contactInfo.label,\n            verified: contactInfo.verified,\n            hasActiveToken: contactInfo.hasActiveToken,\n            isDefault: true\n        };\n        return this.userService.removeContactInfo(request)\n            .then(response => {\n                this.vm.user.sessionId = response.sessionId;\n                this.vm.user.transactionId = response.transactionId;\n                this.notification.info('remove-contact-info_success');\n                this.vm.user.smsInfos.splice(_.findIndex(this.vm.user.smsInfos, contactInfo), 1);\n                this.eventAggregator.publish(new EnrollPhoneInfosComplete());\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('remove-contact-info_error');\n            });\n    }\n\n    isPhoneNumberUnique(phoneNumber) {\n        let idx = _.findIndex(this.vm.user.smsInfos, function (s) {\n            return s.label === phoneNumber;\n        });\n        return idx < 0;\n    }\n\n    addPhoneInfo(event) {\n        return new Promise((resolve, reject) => {\n            if (this.isPhoneNumberUnique(this.vm.phoneNumber)) {\n                this.controller.validate()\n                    .then(result => {\n                        if (result.valid) {\n                            let request = {\n                                userId: this.vm.user.userId,\n                                credentialType: 'SMS',\n                                contactInfo: this.vm.phoneNumber,\n                                label: this.vm.phoneNumber,\n                                isDefault: true\n                            };\n                            this.userService.challengeUser(request)\n                                .then(response => {\n                                    this.vm.user.sessionId = response.sessionId;\n                                    this.vm.user.transactionId = response.transactionId;\n                                    if (response.challengeStatus !== 'Deny') {\n                                        this.goToVerifyPhoneInfo(response);\n                                    } else {\n                                        this.notification.error('challenge-user-deny_error');\n                                    }\n                                    resolve();\n                                })\n                                .catch(reason => {\n                                    logger.error(reason);\n                                    this.notification.error('challenge-user_error');\n                                    reject(reason);\n                                });\n                        } else {\n                            resolve();\n                        }\n                    })\n                    .catch(exception => {\n                        logger.error(exception);\n                        reject(exception);\n                    });\n            } else {\n                let duplicatePhoneError = new Error('duplicate-phone_error');\n                this.notification.error(duplicatePhoneError);\n                reject(duplicatePhoneError);\n            }\n        });\n    }\n\n    goToVerifyPhoneInfo(message) {\n        let verifyPhoneInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyPhoneInfoModel.messageParams = {\n            'phoneNumber': this.vm.phoneNumber\n        };\n        return this.dialogService.open({viewModel: VerifyPhoneInfoDialog, model: verifyPhoneInfoModel, rejectOnCancel: false})\n            .whenClosed(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-phone-info_resend');\n                        this.addPhoneInfo();\n                    } else {\n                        this.notification.info('verify-phone-info_canceled');\n                    }\n                } else {\n                    this.onVerifyPhoneInfoSuccess(openDialogResult.output);\n                    this.eventAggregator.publish(new EnrollPhoneInfosComplete());\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-phone-info_error');\n            });\n    }\n\n    onVerifyPhoneInfoSuccess(message) {\n        if (message) {\n            let phoneInfo = {\n                phoneNumber: message.contactInfo,\n                label: message.contactInfo,\n                isDefault: false,\n                verified: true,\n                hasActiveToken: false\n            };\n            this.vm.user.smsInfos.push(phoneInfo);\n\n            this.vm.user.sessionId = null;\n            this.vm.user.transactionId = null;\n            this.vm.phoneNumber = '';\n            this.vm.phoneNumberHasFocus = true;\n            this.vm.showAddPhoneInfoForm = false;\n        }\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {logger} from 'util/logger-helper';\nimport {CredentialType} from 'util/common-models';\nimport {\n    EnrollChallengeQuestionAnswersComplete,\n    EnrollPhoneInfosComplete,\n    EnrollEmailInfosComplete,\n    EnrollCredentialsComplete\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollCredentials {\n    vm;\n    enrollCredentialsViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.credentialType = CredentialType.QUESTIONS;\n            this.enrollCredentialsViewModel = 'components/views/enroll-challenge-question-answers/enroll-challenge-question-answers';\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollChallengeQuestionAnswersComplete, message => this.onEnrollChallengeQuestionAnswersComplete(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollPhoneInfosComplete, message => this.onEnrollPhoneInfosComplete(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollEmailInfosComplete, message => this.onEnrollEmailInfosComplete(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    skip(event) {\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\n            this.eventAggregator.publish(new EnrollCredentialsComplete({credentialType: CredentialType.QUESTIONS}));\n        } else {\n            let confirmDialogModel;\n            if (this.vm.credentialType === CredentialType.PHONE) {\n                confirmDialogModel = this.i18n.tr('confirm-skip-enroll-phone-infos-dialog', {returnObjects: true});\n            } else if (this.vm.credentialType === CredentialType.EMAIL) {\n                confirmDialogModel = this.i18n.tr('confirm-skip-enroll-email-infos-dialog', {returnObjects: true});\n            }\n            return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\n                .whenClosed(openDialogResult => {\n                    if (!openDialogResult.wasCancelled) {\n                        this.next(event);\n                    }\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    this.notification.error('confirm_error');\n                });\n        }\n    }\n\n    next(event) {\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\n            this.vm.credentialType = CredentialType.PHONE;\n            this.enrollCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\n        } else if (this.vm.credentialType === CredentialType.PHONE) {\n            this.vm.credentialType = CredentialType.EMAIL;\n            this.enrollCredentialsViewModel = 'components/views/enroll-email-infos/enroll-email-infos';\n        } else if (this.vm.credentialType === CredentialType.EMAIL) {\n            this.vm.credentialType = CredentialType.QUESTIONS;\n            this.enrollCredentialsViewModel = 'components/views/enroll-phone-infos/enroll-phone-infos';\n            this.eventAggregator.publish(new EnrollCredentialsComplete());\n        }\n    }\n\n    get enrollCredentialsComplete() {\n        let credentialsComplete = false;\n        if (this.vm.credentialType === CredentialType.QUESTIONS) {\n            credentialsComplete = this.vm.user.challengeQuestionAnswersComplete;\n        } else if (this.vm.credentialType === CredentialType.PHONE) {\n            credentialsComplete = this.vm.user.smsInfosComplete;\n        } else if (this.vm.credentialType === CredentialType.EMAIL) {\n            credentialsComplete = this.vm.user.emailInfosComplete;\n        }\n        return credentialsComplete;\n    }\n\n    onEnrollChallengeQuestionAnswersComplete(message) {\n    }\n\n    onEnrollPhoneInfosComplete(message) {\n    }\n\n    onEnrollEmailInfosComplete(message) {\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport {\n    EnrollmentDisclaimerConfirmed\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentDisclaimer {\n    vm;\n    eventTimerStartTime = appConfig.enrollment.confirmDisclaimerEventTimerStartTime || 5;\n    eventTimerTickKey = 'enrollment-disclaimer-tick';\n    eventTimerTimeoutKey = 'enrollment-disclaimer-timeout';\n    subscribers = [];\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('confirmDisclaimerChecked').equals(true)\n            .on(this.vm);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.confirmDisclaimerChecked = false;\n            this.vm.eventTimerExpired = false;\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        this.eventAggregator.publish(new EnrollmentDisclaimerConfirmed());\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {\n    EnrollmentStart\n} from 'resources/messages/enrollment-messages';\nimport {logger} from 'util/logger-helper';\n\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentIntro {\n    vm;\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n\n    start(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new EnrollmentStart());\n            resolve();\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {\n    EnrollmentComplete\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentReview {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n\n    done(event) {\n        return new Promise((resolve, reject) => {\n            if (this.vm.challengeQuestionAnswersComplete\n                && this.vm.user.smsInfosComplete\n                && this.vm.user.emailInfosComplete) {\n                this.eventAggregator.publish(new EnrollmentDone());\n                resolve();\n            } else {\n                let confirmDialogModel = this.i18n.tr('confirm-enrollment-review-warning-dialog', {returnObjects: true});\n                this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel, rejectOnCancel: false})\n                    .whenClosed(openDialogResult => {\n                        if (!openDialogResult.wasCancelled) {\n                            this.eventAggregator.publish(new EnrollmentComplete());\n                        }\n                        resolve();\n                    })\n                    .catch(reason => {\n                        logger.error(reason);\n                        this.notification.error('confirm_error');\n                        reject(reason);\n                    });\n            }\n        });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\nimport {\n    EnrollmentDisclaimerConfirmed,\n    EnrollmentStart,\n    EnrollCredentialsComplete,\n    EnrollmentComplete\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Enrollment {\n    vm = {\n        user: new User()\n    };\n    enrollmentViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.fromJson(payload);\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user.fromJson(response);\n                this.enrollmentViewModel = './enrollment-disclaimer';\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollmentDisclaimerConfirmed, message => this.onEnrollmentDisclaimerConfirmed(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollmentStart, message => this.onEnrollmentStart(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollCredentialsComplete, message => this.onEnrollCredentialsComplete(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollmentComplete, message => this.onEnrollmentComplete(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onEnrollmentDisclaimerConfirmed(message) {\n        this.enrollmentViewModel = './enrollment-intro';\n    }\n\n    onEnrollmentStart(message) {\n        this.enrollmentViewModel = './enroll-credentials';\n    }\n\n    onEnrollCredentialsComplete(message) {\n        this.enrollmentViewModel = './enrollment-review';\n    }\n\n    onEnrollmentComplete(message) {\n        this.router.navigateToRoute('self-service');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    GoToLogout,\n    AuthenticateUserSuccess,\n    AuthenticateUserFail\n} from 'resources/messages/login-messages';\nimport {\n    ChallengeStart,\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail,\n    ChallengeComplete\n} from 'resources/messages/challenge-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithCredentials {\n    vm;\n    challengeWithCredentialsViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            if (this.vm.selectedCredentialType === 'challenge-questions') {\n                this.challengePreAuthUser('Questions')\n                    .then(response => {\n                        this.challengeWithCredentialsViewModel = 'components/views/challenge-with-challenge-questions/challenge-with-challenge-questions';\n                        resolve();\n                    });\n            } else if (this.vm.selectedCredentialType === 'phone-info') {\n                this.getPreAuthUser('Phone')\n                    .then(response => {\n                        this.challengeWithCredentialsViewModel = 'components/views/challenge-with-phone-info/challenge-with-phone-info';\n                        resolve();\n                    });\n            } else if (this.vm.selectedCredentialType === 'email-info') {\n                this.challengeWithCredentialsViewModel = 'components/views/challenge-with-email-info/challenge-with-email-info';\n            } else if (this.vm.selectedCredentialType === 'rsa-token') {\n                this.challengeWithCredentialsViewModel = 'components/views/challenge-with-rsa-token/challenge-with-rsa-token';\n            } else {\n                this.eventAggregator.publish(new ChallengeFail());\n            }\n\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeStart, message => this.onChallengeStart(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeCancel, message => this.onChallengeCancel(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeSuccess, message => this.onChallengeSuccess(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    getPreAuthUser(credentialType) {\n        let request = {\n            userId: this.vm.user.userId,\n            credentialType: credentialType,\n            access_token: this.vm.user.access_token\n        };\n        return this.userService.getPreAuthUser(request)\n            .then(response => {\n                this.vm.user.fromJson(response);\n                return response;\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    onChallengeStart(message) {\n        if (message) {\n            this.challengePreAuthUser(message.credentialType, message.label)\n                .then(response => {\n                    this.eventAggregator.publish(new ChallengeReceived(response));\n                });\n        }\n    }\n\n    challengePreAuthUser(credentialType, label) {\n        let request = {\n            userId: this.vm.user.userId,\n            credentialType: credentialType,\n            access_token: this.vm.user.access_token\n        };\n        if (label) {\n            request.label = label;\n        }\n        return this.userService.challengePreAuthUser(request)\n            .then(response => {\n                if (response.challengeStatus !== 'Deny') {\n                    this.vm.user.fromJson(response);\n                    return response;\n                } else {\n                    this.notification.error('challenge-user_error');\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('challenge-user_error');\n            });\n    }\n\n    onChallengeVerify(message) {\n        if (message) {\n            this.authenticatePreAuthUser(message.credentialType, message.credentials)\n                .then(response => {\n                    this.eventAggregator.publish(new ChallengeVerify(response));\n                });\n        }\n    }\n\n    authenticatePreAuthUser(credentialType, credentials) {\n        let request = {\n            userId: this.vm.user.userId,\n            credentialType: credentialType,\n            credentials: credentials,\n            access_token: this.vm.user.access_token\n        };\n        return this.userService.authenticatePreAuthUser(request)\n            .then(response => {\n                return response;\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('verify-phone-info_error');\n                reject(reason);\n            });\n    }\n\n    onChallengeCancel() {\n        this.eventAggregator.publish(new GoToLogout());\n    }\n\n    onChallengeSuccess(message) {\n        this.eventAggregator.publish(new AuthenticateUserSuccess(message));\n    }\n\n    onChallengeFail(message) {\n        this.vm.user.sessionId = '';\n        this.vm.user.transactionId = '';\n        this.eventAggregator.publish(new AuthenticateUserFail(message));\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {\n    GoToLogout,\n    ChallengeWithCredentials\n} from 'resources/messages/login-messages';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class Challenge {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.bindDeviceOptions = ['yes', 'no'];\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('selectedCredentialType').required()\n            .on(this.vm);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new GoToLogout());\n            resolve();\n        });\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        this.eventAggregator.publish(new ChallengeWithCredentials());\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    reject(reason);\n                })\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class Deny {\n    vm;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\nimport {\n    GoToLogin,\n    SigninSuccess,\n    ChallengeWithCredentials,\n    AuthenticateUserSuccess,\n    GoToForgotPassword\n} from 'resources/messages/login-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Login {\n    vm = {\n        user: new User()\n    };\n    loginViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        this.loginViewModel = './network-credentials';\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToLogin, message => this.onGoToLogin(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(SigninSuccess, message => this.onSigninSuccess(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(AuthenticateUserSuccess, message => this.onAuthenticateUserSuccess(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeWithCredentials, message => this.onChallengeWithCredentials(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToForgotPassword, message => this.onGoToForgotPassword(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onGoToLogin(message) {\n        this.router.navigateToRoute('logout');\n    }\n\n    onSigninSuccess(message) {\n        if (message && message.authStatusCode === 'Challenge' && message.userStatus === 'Verified') {\n            this.vm.user.fromJson(message);\n            this.loginViewModel = './challenge';\n        } else if (message.authStatusCode === 'Success' && message.userStatus === 'Verified') {\n            this.onAuthenticateUserSuccess(message).then(response => {\n                this.router.navigateToRoute('self-service');\n            });\n        } else if (message.authStatusCode === 'Success' && message.userStatus === 'Unverified') {\n            this.onAuthenticateUserSuccess(message).then(response => {\n                this.router.navigateToRoute('enrollment');\n            });\n        } else {\n            this.loginViewModel = './deny';\n        }\n    }\n\n    onChallengeWithCredentials() {\n        this.loginViewModel = './challenge-with-credentials';\n    }\n\n    onAuthenticateUserSuccess(message) {\n        let request = {\n            username: this.vm.user.userId,\n            password: this.vm.user.credentials\n        };\n        return this.authService.login(request);\n    }\n\n    onGoToForgotPassword(message) {\n        this.router.navigateToRoute('forgot-password');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {\n    SigninSuccess,\n    GoToForgotPassword\n} from 'resources/messages/login-messages';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class NetworkCredentials {\n    vm;\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.userIdHasFocus = true;\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('userId').required().minLength(1).maxLength(256)\n            .ensure('credentials').required().minLength(1).maxLength(256)\n            .on(this.vm.user);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'credentials-input') {\n                    if (event.key === 'Enter') {\n                        this.signin();\n                    }\n                }\n            }\n        }\n    }\n\n    signin(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            credentials: this.vm.user.credentials\n                        };\n                        this.userService.signin(request)\n                            .then(response => {\n                                this.eventAggregator.publish(new SigninSuccess(response));\n                                resolve();\n                            })\n                            .catch(reason => { \n                                logger.error(reason);\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n            .catch(validateReason => {\n                logger.error(validateReason);\n                reject(validateReason);\n            })\n        });\n    }\n\n    goToForgotPassword(event) {\n        this.eventAggregator.publish(new GoToForgotPassword());\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Logout {\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.authService = authService;\n    }\n\n    activate() {\n        return this.authService.logout();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class SelfService {\n    vm = {\n        user: new User()\n    };\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = this.authService.getTokenPayload();\n        this.vm.user.fromJson(payload);\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user.fromJson(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    goToChangePassword(event) {\n        this.router.navigateToRoute('change-password');\n    }\n\n    goToEditProfile(event) {\n        this.router.navigateToRoute('edit-credentials');\n    }\n\n    goToUnlockAccount(event) {\n        this.router.navigateToRoute('unlock-account');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class UnlockAccount {\n    vm;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.userId = payload ? payload.username : null;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User();\n                this.vm.user.fromJson(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class VerifyEmailInfoDialog {\n    vm;\n    onKeypressInputCallback;\n    eventTimerStartTime = appConfig.enrollment.verifyEmailInfoTimerStartTime || 120;\n    eventTimerTickKey = 'verify-email-info_tick';\n    eventTimerTimeoutKey = 'verify-email-info_timeout';\n    subscribers = [];\n\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\n            .on(this.vm);\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'verification-code') {\n                    if (event.key === 'Enter') {\n                        this.verify();\n                    }\n                }\n            }\n        }\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n\n    resendCode(event) {\n        let response = {\n            resendCode: true\n        };\n        this.dialogController.cancel(response);\n    }\n\n    verify(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            contactType: 'Email',\n                            contactInfo: this.vm.emailAddress,\n                            label: this.vm.emailAddress,\n                            token: this.vm.verificationCode\n                        };\n                        this.userService.verifyContactInfo(request)\n                            .then(response => {\n                                if (response.verified) {\n                                    this.dialogController.ok(response);\n                                } else {\n                                    this.notification.error('verify-email-info-fail_error');\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('verify-email-info_error');\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    reject(validateReason);\n                });\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class VerifyPhoneInfoDialog {\n    vm;\n    onKeypressInputCallback;\n    eventTimerStartTime = appConfig.enrollment.verifyPhoneInfoTimerStartTime || 120;\n    eventTimerTickKey = 'verify-phone-info_tick';\n    eventTimerTimeoutKey = 'verify-phone-info_timeout';\n    subscribers = [];\n\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\n            .on(this.vm);\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'verification-code') {\n                    if (event.key === 'Enter') {\n                        this.verify();\n                    }\n                }\n            }\n        }\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n\n    resendCode(event) {\n        let response = {\n            resendCode: true\n        };\n        this.dialogController.cancel(response);\n    }\n\n    verify(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            contactType: 'SMS',\n                            contactInfo: this.vm.phoneNumber,\n                            label: this.vm.phoneNumber,\n                            token: this.vm.verificationCode\n                        };\n                        this.userService.verifyContactInfo(request)\n                            .then(response => {\n                                if (response.verified) {\n                                    this.dialogController.ok(response);\n                                } else {\n                                    this.notification.error('verify-phone-info-fail_error');\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('verify-phone-info_error');\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    reject(validateReason);\n                });\n        });\n    }\n}\n"],"sourceRoot":".."}