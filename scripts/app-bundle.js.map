{"version":3,"sources":["environment.js","main.js","app/app.js","components/index.js","foundation-validation/foundation-validation-renderer.js","foundation-validation/index.js","config/app.js","config/auth.js","config/deployed.js","config/local.js","config/router.js","models/challengeQuestion.js","models/challengeQuestionAnswer.js","models/emailInfo.js","models/smsInfo.js","models/user.js","resources/index.js","services/user-service.js","util/common-models.js","util/device-helper.js","util/event-timer.js","util/location-helper.js","util/logger-helper.js","util/object-utilities.js","util/string-helper.js","util/window-helper.js","components/enrollment-nav-bar/enrollment-nav-bar.js","components/nav-bar/nav-bar.js","components/site-footer/site-footer.js","components/validation-summary/validation-summary.js","resources/messages/challenge-messages.js","resources/messages/enrollment-messages.js","resources/messages/login-messages.js","resources/messages/self-service-messages.js","resources/value-converters/date-formatter.js","resources/value-converters/interval-formatter.js","resources/value-converters/phone-formatter.js","resources/value-converters/timer-formatter.js","components/views/change-password/change-password.js","components/views/confirm-dialog/confirm-dialog.js","components/views/enrollment/enroll-challenge-question-answers.js","components/views/enrollment/enroll-email-infos.js","components/views/enrollment/enroll-phone-infos.js","components/views/enrollment/enrollment-disclaimer.js","components/views/enrollment/enrollment-intro.js","components/views/enrollment/enrollment-review.js","components/views/enrollment/enrollment.js","components/views/login/challenge-with-challenge-questions.js","components/views/login/challenge-with-credentials.js","components/views/login/challenge.js","components/views/login/deny.js","components/views/login/login.js","components/views/login/network-credentials.js","components/views/logout/logout.js","components/views/self-service/self-service.js","components/views/unlock-account/unlock-account.js","components/views/verify-email-info-dialog/verify-email-info-dialog.js","components/views/verify-phone-info-dialog/verify-phone-info-dialog.js"],"names":["debug","testing","configure","addAppender","setLevel","window","location","hostname","match","RegExp","logLevel","error","Promise","config","warnings","wForgottenReturn","getLanguage","resolve","lng","configureRouter","title","app","addPipelineStep","map","routes","fallbackRoute","setRoot","aurelia","setupAureliaDone","setupI18NDone","container","get","initialize","use","standardConfiguration","feature","plugin","useDefaults","useCSS","settings","lock","centerHorizontalOnly","startingZIndex","enableEscClose","rejectOnCancel","instance","i18next","language","localStorage","getItem","setup","backend","loadPath","defaultLocale","attributes","fallbackLng","i18n","interpolation","format","value","parts","split","vc","resources","valueConverters","shift","toView","then","prototype","getMessage","key","translation","t","parser","parseMessage","getDisplayName","propertyName","displayName","undefined","mergedConfig","fetch","developmentLogging","start","lang","catch","App","router","authService","notification","languages","code","locale","flag","payload","getTokenPayload","username","authenticated","isAuthenticated","setLanguage","setItem","top","reload","attached","document","foundation","info","tr","globalResources","Element","closest","s","matches","ownerDocument","querySelectorAll","i","el","length","item","parentElement","abideLabels","FoundationValidationRenderer","render","instruction","unrender","result","elements","element","remove","add","formRow","formLabel","getElementsByTagName","formInput","valid","classList","contains","setAttribute","message","createElement","className","textContent","id","appendChild","querySelector","removeChild","registerHandler","environment","logger","name","endpoints","endpoint","default","notifications","success","enrollment","numberOfRequiredChallengeQuestionAnswers","numberOfRequiredSmsInfos","numberOfRequiredEmailInfos","confirmDisclaimerEventTimerStartTime","verifyEmailInfoTimerStartTime","configureEndpoints","baseUrl","loginUrl","signupUrl","loginRedirect","profileUrl","refreshTokenUrl","useRefreshToken","route","moduleId","nav","auth","roles","ChallengeQuestion","challengeQuestionId","challengeQuestionText","userAnswerText","fromJson","response","ChallengeQuestionAnswer","EmailInfo","emailAddress","label","isDefault","verified","hasActiveToken","Boolean","SmsInfo","phoneNumber","User","sessionId","transactionId","userId","fullName","_availableChallengeQuestions","_challengeQuestionAnswers","challengeQuestions","smsInfos","emailInfos","availableChallengeCredentialTypes","authStatusCode","userInfo","authToken","buildChallengeQuestions","availableChallengeQuestionAnswers","newChallengeQuestion","push","mapChallengeQuestionAnswers","challengeQuestionAnswers","j","newChallengeQuestionAnswer","k","newSmsInfo","l","newEmailInfo","credentialTypes","m","n","numberOfChallengeQuestions","availableChallengeQuestions","orderBy","cloneDeep","selectedAvailableChallengeQuestion","previouslySelectedAvailableChallengeQuestion","showActualAnswer","updateAvailableChallengeQuestions","selectedChallengeQuestion","currentChallengeQuestion","removedAvailableChallengeQuestion","index","findIndex","splice","getChallengeQuestionAnswers","challengeQuestion","challengeQuestionAnswer","find","a","isValid","UserService","deviceHelper","isRequesting","userEndpoint","getEndpoint","signin","signinRequest","deviceRequest","post","deviceTokenCookie","setDeviceTokenCookie","analyzeUser","analyzeUserRequest","challengeUser","challengeUserRequest","authenticateUser","authenticateUserRequest","getUser","getUserRequest","addChallengeQuestionAnswers","addChallengeQuestionAnswersRequest","verifyContactInfo","verifyContactInfoRequest","removeContactInfo","removeContactInfoRequest","resetPassword","resetPasswordRequest","EnumSymbol","ordinal","description","Object","is","x","y","keyName","freeze","toString","sym","valueOf","Symbol","keyFor","for","Enum","enumLiterals","hasOwnProperty","TypeError","symbols","syms","self","keys","forEach","symbol","AuthStatusCode","Success","Deny","Pending","Challenge","EnrollmentStep","DISCLAIMER","INTRO","QUESTIONS","PHONE","EMAIL","SUMMARY","ActionCode","ALLOW","CHALLENGE","NONE","REVIEW","CredentialType","PASSWORD","SMS","ONETIMETOKEN","ContactType","UserStatus","LOCKEDOUT","determineShiftedValues","total","highestValue","values","runningTotal","binValue","Math","pow","EnumeratedTypeHelper","asArray","type","v","enums","DeviceHelper","cDeviceToken","cname","cmaxage","d","Date","setTime","getTime","expires","toUTCString","cookie","devicePrint","encode_deviceprint","ca","c","charAt","substring","indexOf","EventTimer","eventAggregator","interval","tickKey","timeoutKey","currentTime","intervalId","setInterval","stop","publish","clearInterval","LocationHelperFunction","getQueryParameter","default_","replace","regex","qs","exec","href","decodeURIComponent","LocationHelper","getLogger","Operators","ObjectUtilities","isEqual","objA","objB","aKeys","bKeys","len","deepExtend","destination","source","property","constructor","PredicateUtilities","removeMatches","subject","predicates","predicateList","clone","isLogical","operator","logicals","filter","flattened","logical","flatten","processed","indx","StringUtil","pluralize","str","count","endsWith","StringHelperFunction","formatDate","date","formattedDate","dateErr","warn","parseDate","parsedDate","formatPhoneNumber","formattedPhoneNumber","rawPhoneNumber","size","parsePhoneNumber","parsedPhoneNumber","StringHelper","WindowHelper","addEventListener","listener","options","removeEventListener","useCapture","EnrollmentNavBar","bindingEngine","dialogService","userService","vm","user","showNavBar","bind","bindingContext","overrideContext","goToChallengeQuestionAnswers","event","goToPhoneInfos","goToEmailInfos","NavBar","goToLogout","confirmDialogModel","returnObjects","open","viewModel","model","wasCancelled","navigateToRoute","reason","SiteFooter","ValidationSummary","GoToChallenge","assign","GoToChallengeWithCredentials","ChallengeCancel","ChallengeSuccess","ChallengeFail","GoToEnrollmentDisclaimer","GoToEnrollmentIntro","GoToChallengeQuestionAnswers","ChallengeQuestionAnswersDone","GoToPhoneInfos","PhoneInfosDone","GoToEmailInfos","EmailInfosDone","GoToEnrollmentSummary","EnrollmentDone","GoToLogin","SigninSuccess","AuthenticateUserSuccess","GoToForgotPassword","GoToChangePassword","GoToEditProfile","GoToUnlockProfile","GoToEditChallengeQuestionAnswers","GoToEditPhoneInfos","GoToEditEmailInfos","dateFormatterValueConverter","fromView","intervalFormatterValueConverter","formatInterval","phoneFormatterValueConverter","TimerFormatterValueConverter","formattedValue","ChangePassword","subscribers","activate","params","routeConfig","navigationInstruction","request","goToChangePassword","goToEditProfile","goToUnlockAccount","ConfirmDialog","dialogController","headerIcon","headerText","messageParams","cancelButtonText","confirmButtonText","confirm","ok","cancel","EnrollChallengeQuestionAnswers","controllerFactory","controller","createForCurrentScope","applyValidationRules","ensure","required","on","onSelectedAvailableChallengeQuestionAnswerChanged","next","reject","validate","controllerValidateResult","onAddChallengeQuestionAnswersSuccess","validateError","Error","exception","EnrollEmailInfos","windowHelper","showEnrollEmailInfoWarning","emailAddressHasFocus","showAddEmailInfoForm","onKeypressInputCallback","onKeypressInput","email","withMessage","deactivate","target","addEmailInfo","removeEmailInfo","contactInfo","openDialogResult","onConfirmRemoveEmailInfo","contactType","isEmailAddressUnique","idx","credentialType","challengeStatus","goToVerifyEmailInfo","duplicateEmailError","verifyEmailInfoModel","verificationCode","verificationCodeHasFocus","output","resendCode","onVerifyEmailInfoSuccess","JSON","parse","stringify","emailInfo","skip","emailInfosSkipped","emailInfosComplete","EnrollPhoneInfos","phoneInfos","showEnrollPhoneInfoWarning","phoneNumberHasFocus","showAddPhoneInfoForm","minLength","maxLength","addPhoneInfo","removePhoneInfo","onConfirmRemovePhoneInfo","isPhoneNumberUnique","goToVerifyPhoneInfo","duplicatePhoneError","verifyPhoneInfoModel","onVerifyPhoneInfoSuccess","phoneInfo","EnrollPhoneInfosDone","phoneInfosSkipped","phoneInfosComplete","EnrollmentDisclaimer","eventTimerStartTime","eventTimerTickKey","eventTimerTimeoutKey","timer","equals","remainingTime","subscribe","onEventTimerTick","startTime","onEventTimerTimeout","detached","each","subscriber","dispose","eventTimerExpired","EnrollmentIntro","EnrollmentReview","goToEnrollChallengeQuestionAnswers","goToEnrollPhoneInfos","goToEnrollEmailInfos","done","challengeQuestionAnswersComplete","smsInfosComplete","Enrollment","confirmDisclaimerChecked","onGoToEnrollmentIntro","onGoToEnrollmentDisclaimer","onGoToEnrollChallengeQuestionAnswers","onEnrollChallengeQuestionAnswersDone","onGoToEnrollPhoneInfos","onEnrollPhoneInfosDone","onGoToEnrollEmailInfos","onEnrollEmailInfosDone","onGoToEnrollmentSummary","onEnrollmentDone","enrollmentStep","enrollmentViewModel","ChallengeWithChallengeQuestions","_getCredentials","credentials","trimEnd","bindDevice","onChallengeSuccess","onChallengeFail","validateReason","ChallengeWithCredentials","selectedCredentialType","challengeWithCredentialsViewModel","onChallengeCancel","validateTrigger","manual","bindDeviceOptions","Login","userIdHasFocus","credentialsHasFocus","loginViewModel","onGoToLogin","onSigninSuccess","onAuthenticateUserSuccess","onGoToChallengeWithCredentials","onGoToForgotPassword","userStatus","setResponseObject","token","NetworkCredentials","goToForgotPassword","Logout","logout","SelfService","UnlockAccount","VerifyEmailInfoDialog","verify","VerifyPhoneInfoDialog","verifyPhoneInfoTimerStartTime"],"mappings":";;;;;;oBAAe;AACbA,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;YCsHCC,YAAAA;;;;;;;;;;;;;;;;;;AA1GhB,iCAAWC,WAAX,CAAuB,4CAAvB;AACA,iCAAWC,QAAX,CAAoBC,OAAOC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,IAAIC,MAAJ,CAAW,WAAX,CAA/B,IACd,6BAAWC,QAAX,CAAoBV,KADN,GAEd,6BAAWU,QAAX,CAAoBC,KAF1B;;AAIAC,YAAQC,MAAR,CAAe;AACXC,kBAAU;AACNC,8BAAkB;AADZ;AADC,KAAf;;AAMA,aAASC,WAAT,GAAuB;AACnB,eAAO,IAAIJ,OAAJ,CAAY,UAACK,OAAD,EAAa;AAC5B,gBAAIC,MAAM,IAAV;AACAD,oBAAQC,GAAR;AACH,SAHM,CAAP;AAIH;;AAED,aAASC,eAAT,CAAyBN,MAAzB,EAAiC;AAC7BA,eAAOO,KAAP,GAAe,cAAUC,GAAV,CAAcD,KAA7B;AACAP,eAAOS,eAAP,CAAuB,WAAvB;AACAT,eAAOU,GAAP,CAAW,iBAAaC,MAAxB;AACAX,eAAOY,aAAP,CAAqB,iBAAaA,aAAlC;AACH;;AAED,aAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACtB,YAAIA,QAAQC,gBAAR,IAA4BD,QAAQE,aAAxC,EAAuD;AACnDF,oBAAQG,SAAR,CAAkBC,GAAlB,wBAA8B7B,SAA9B,CAAwCiB,eAAxC;AACAQ,oBAAQD,OAAR,CAAgB,SAAhB;AACH;AACJ;;AAED,aAASM,UAAT,CAAoBL,OAApB,EAA6BT,GAA7B,EAAkC;AAC9BS,gBAAQC,gBAAR,GAA2B,KAA3B;AACAD,gBAAQE,aAAR,GAAwB,KAAxB;AACAF,gBAAQM,GAAR,CACKC,qBADL,GAEKC,OAFL,CAEa,uBAFb,EAGKA,OAHL,CAGa,WAHb,EAIKA,OAJL,CAIa,YAJb,EAKKC,MALL,CAKY,oBALZ,EAMKA,MANL,CAMY,gBANZ,EAM8B,qBAAa;AACnC,mBAAOlC,UAAU,CACb,aADa,EAEb,wBAFa,EAGb,sBAHa,CAAV,iDAAP;AAKH,SAZL,EAaKkC,MAbL,CAaY,gBAbZ,EAa8B,kBAAU;AAChCvB,mBAAOwB,WAAP;AACAxB,mBAAOyB,MAAP,CAAc,EAAd;AACAzB,mBAAO0B,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AACA3B,mBAAO0B,QAAP,CAAgBE,oBAAhB,GAAuC,KAAvC;AACA5B,mBAAO0B,QAAP,CAAgBG,cAAhB,GAAiC,CAAjC;AACA7B,mBAAO0B,QAAP,CAAgBI,cAAhB,GAAiC,IAAjC;AACA9B,mBAAO0B,QAAP,CAAgBK,cAAhB,GAAiC,IAAjC;AACH,SArBL,EAsBKR,MAtBL,CAsBY,cAtBZ,EAsB4B,oBAAY;AAChCS,qBAASC,OAAT,CAAiBb,GAAjB;AACA,gBAAIc,WAAWC,aAAaC,OAAb,CAAqB,UAArB,CAAf;AACAJ,qBAASK,KAAT,CAAe;AACXC,yBAAS;AACLC,8BAAU;AADL,iBADE;AAIXlC,qBAAK6B,YAAY,cAAUM,aAAV,CAAwBN,QAJ9B;AAKXO,4BAAY,CAAC,GAAD,CALD;AAMXC,6BAAaR,YAAY,cAAUM,aAAV,CAAwBN,QANtC;AAOX/C,uBAAO,cAAUwD,IAAV,CAAexD,KAPX;AAQXyD,+BAAe;AACXC,4BAAQ,gBAAUC,KAAV,EAAiBD,OAAjB,EAAyBxC,GAAzB,EAA8B;AAClC,4BAAM0C,QAAQF,QAAOG,KAAP,CAAa,GAAb,CAAd;AACA,4BAAMC,KAAKnC,QAAQoC,SAAR,CAAkBC,eAAlB,CAAkCJ,MAAMK,KAAN,EAAlC,CAAX;AACA,+BAAOH,KAAKA,GAAGI,MAAH,YAAUP,KAAV,SAAoBC,KAApB,EAAL,GAAkCD,KAAzC;AACH;AALU;AARJ,aAAf,EAeGQ,IAfH,CAeQ,YAAM;AACV,6DAA0BC,SAA1B,CAAoCC,UAApC,GAAiD,UAAUC,GAAV,EAAe;AAC5D,wBAAMC,cAAc1B,SAASC,OAAT,CAAiB0B,CAAjB,yBAAyCF,GAAzC,CAApB;AACA,2BAAO,KAAKG,MAAL,CAAYC,YAAZ,CAAyBH,WAAzB,CAAP;AACH,iBAHD;AAIA,6DAA0BH,SAA1B,CAAoCO,cAApC,GAAqD,UAAUC,YAAV,EAAwBC,WAAxB,EAAqC;AACtF,wBAAIA,gBAAgB,IAAhB,IAAwBA,gBAAgBC,SAA5C,EAAuD;AACnD,+BAAOD,WAAP;AACH;AACD,2BAAOhC,SAASC,OAAT,CAAiB0B,CAAjB,sBAAsCI,YAAtC,CAAP;AACH,iBALD;AAMAjD,wBAAQE,aAAR,GAAwB,IAAxB;AACAH,wBAAQC,OAAR;AACH,aA5BD;AA6BH,SAtDL;;AAwDA,YAAIoD,eAAepD,QAAQG,SAAR,CAAkBC,GAAlB,uBAAnB;AACA,YAAIgD,aAAaC,KAAb,CAAmB,aAAnB,MAAsC,aAA1C,EAAyD;AACrDrD,oBAAQM,GAAR,CAAYgD,kBAAZ;AACH;;AAED,YAAIF,aAAaC,KAAb,CAAmB,aAAnB,MAAsC,SAA1C,EAAqD;AACjDrD,oBAAQM,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACH;;AAEDT,gBAAQuD,KAAR,GAAgBf,IAAhB,CAAqB,YAAM;AACvBxC,oBAAQC,gBAAR,GAA2B,IAA3B;AACAF,oBAAQC,OAAR;AACH,SAHD;AAIH;;AAEM,aAASzB,SAAT,CAAmByB,OAAnB,EAA4B;AAC/BX,sBAAcmD,IAAd,CAAmB,gBAAQ;AACvBnC,uBAAWL,OAAX,EAAoBwD,IAApB;AACH,SAFD,EAEGC,KAFH,CAES,aAAK;AAEVpD,uBAAWL,OAAX,EAAoB,IAApB;AACH,SALD;AAMH;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCnHY0D,cAAAA,cADZ;AAQG,qBAAYC,MAAZ,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+ChC,IAA/C,EAAqD;AAAA;;AAAA,iBALrDiC,SAKqD,GALzC,CACR,EAACC,MAAM,IAAP,EAAaC,QAAQ,OAArB,EAA8BC,MAAM,IAApC,EADQ,EAER,EAACF,MAAM,IAAP,EAAaC,QAAQ,OAArB,EAA8BC,MAAM,IAApC,EAFQ,CAKyC;;AACjD,iBAAKN,MAAL,GAAcA,MAAd;AACA,iBAAKC,WAAL,GAAmBA,WAAnB;AACA,iBAAKC,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;;AAEA,gBAAIqC,UAAUN,YAAYO,eAAZ,EAAd;AACA,iBAAKC,QAAL,GAAgBF,UAAUA,QAAQE,QAAlB,GAA6B,IAA7C;AACA,iBAAKC,aAAL,GAAqB,KAAKT,WAAL,CAAiBU,eAAjB,EAArB;AACH;;sBAEDC,mCAAYnD,UAAU;AAClBC,yBAAamD,OAAb,CAAqB,UAArB,EAAiCpD,SAAS2C,IAA1C;AACArF,mBAAO+F,GAAP,CAAW9F,QAAX,CAAoB+F,MAApB;AACH;;sBAEDC,+BAAW;AACP,kCAAEC,QAAF,EAAYC,UAAZ;AACA,iCAAOC,IAAP,CAAY,KAAKjD,IAAL,CAAUkD,EAAV,CAAa,sBAAb,CAAZ;AACA,iBAAKlB,YAAL,CAAkBiB,IAAlB,CAAuB,sBAAvB;AACH;;;;;;;;;;;YCrCWvG,YAAAA;AAAT,aAASA,SAAT,CAAmBW,MAAnB,EAA2B;AAC9BA,eAAO8F,eAAP,CAAuB,CACnB,mBADmB,EAEnB,yCAFmB,EAGnB,2BAHmB,EAInB,yCAJmB,CAAvB;AAMH;;;;;;;;;;;;;;;;ACLD,QAAItG,OAAOuG,OAAP,IAAkB,CAACA,QAAQxC,SAAR,CAAkByC,OAAzC,EAAkD;AAC9CD,gBAAQxC,SAAR,CAAkByC,OAAlB,GACI,UAAUC,CAAV,EAAa;AACT,gBAAIC,UAAU,CAAC,KAAKR,QAAL,IAAiB,KAAKS,aAAvB,EAAsCC,gBAAtC,CAAuDH,CAAvD,CAAd;AACA,gBAAII,UAAJ;AACA,gBAAIC,KAAK,IAAT;AACA,eAAG;AACCD,oBAAIH,QAAQK,MAAZ;AACA,uBAAO,EAAEF,CAAF,IAAO,CAAP,IAAYH,QAAQM,IAAR,CAAaH,CAAb,MAAoBC,EAAvC,EAA2C,CAC1C;AACJ,aAJD,QAIUD,IAAI,CAAL,KAAYC,KAAKA,GAAGG,aAApB,CAJT;AAKA,mBAAOH,EAAP;AACH,SAXL;AAYH;;AAED,QAAMI,cAAc,KAApB;;QAEaC,uCAAAA;;;;;+CACTC,yBAAOC,aAAa;AAChB,iCAA+BA,YAAYC,QAA3C,kHAAqD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,oBAA3CC,MAA2C,SAA3CA,MAA2C;AAAA,oBAAnCC,QAAmC,SAAnCA,QAAmC;;AACjD,sCAAoBA,QAApB,yHAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAArBC,OAAqB;;AAC1BN,iDAA6BO,MAA7B,CAAoCD,OAApC,EAA6CF,MAA7C;AACH;AACJ;;AAED,kCAA+BF,YAAYD,MAA3C,yHAAmD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,oBAAzCG,MAAyC,SAAzCA,MAAyC;AAAA,oBAAjCC,QAAiC,SAAjCA,QAAiC;;AAC/C,sCAAoBA,QAApB,yHAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAArBC,QAAqB;;AAC1BN,iDAA6BQ,GAA7B,CAAiCF,QAAjC,EAA0CF,MAA1C;AACH;AACJ;AACJ;;qCAEMI,mBAAIF,SAASF,QAAQ;AACxB,gBAAMK,UAAUH,QAAQjB,OAAR,CAAgB,WAAhB,CAAhB;AACA,gBAAI,CAACoB,OAAL,EAAc;AACV;AACH;;AAED,gBAAMC,YAAYD,QAAQE,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,CAAlB;AACA,gBAAMC,YAAYH,QAAQE,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,CAAlB;AACA,gBAAIP,OAAOS,KAAX,EAAkB;AACd,oBAAId,eAAeW,SAAf,IAA4B,CAACA,UAAUI,SAAV,CAAoBC,QAApB,CAA6B,kBAA7B,CAAjC,EAAmF;AAC/EL,8BAAUI,SAAV,CAAoBN,GAApB,CAAwB,gBAAxB;AACH;;AAED,oBAAII,aAAa,CAACA,UAAUE,SAAV,CAAoBC,QAApB,CAA6B,kBAA7B,CAAlB,EAAoE;AAChEH,8BAAUE,SAAV,CAAoBN,GAApB,CAAwB,gBAAxB;AACH;AACJ,aARD,MAQO;AACH,oBAAIT,eAAeW,SAAnB,EAA8B;AAC1BA,8BAAUI,SAAV,CAAoBP,MAApB,CAA2B,gBAA3B;AACAG,8BAAUI,SAAV,CAAoBN,GAApB,CAAwB,kBAAxB;AACH;;AAED,oBAAII,SAAJ,EAAe;AACXA,8BAAUE,SAAV,CAAoBP,MAApB,CAA2B,gBAA3B;AACAK,8BAAUE,SAAV,CAAoBN,GAApB,CAAwB,kBAAxB;AACAI,8BAAUI,YAAV,CAAuB,cAAvB,EAAuC,MAAvC;AACH;;AAED,oBAAMC,UAAUlC,SAASmC,aAAT,CAAuB,MAAvB,CAAhB;AACAD,wBAAQE,SAAR,GAAoB,uBAApB;AACAF,wBAAQG,WAAR,GAAsBhB,OAAOa,OAA7B;AACAA,wBAAQI,EAAR,2BAAmCjB,OAAOiB,EAA1C;AACAZ,wBAAQa,WAAR,CAAoBL,OAApB;AACH;AACJ;;qCAEMV,yBAAOD,SAASF,QAAQ;AAC3B,gBAAMK,UAAUH,QAAQjB,OAAR,CAAgB,WAAhB,CAAhB;AACA,gBAAI,CAACoB,OAAL,EAAc;AACV;AACH;;AAED,gBAAMC,YAAYD,QAAQE,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,CAAlB;AACA,gBAAMC,YAAYH,QAAQE,oBAAR,CAA6B,OAA7B,EAAsC,CAAtC,CAAlB;;AAEA,gBAAIP,OAAOS,KAAX,EAAkB;AACd,oBAAId,eAAeW,SAAnB,EAA8B;AAC1BA,8BAAUI,SAAV,CAAoBP,MAApB,CAA2B,gBAA3B;AACH;;AAED,oBAAIK,SAAJ,EAAe;AACXA,8BAAUE,SAAV,CAAoBP,MAApB,CAA2B,gBAA3B;AACH;AACJ,aARD,MAQO;AACH,oBAAIR,eAAeW,SAAnB,EAA8B;AAC1BA,8BAAUI,SAAV,CAAoBP,MAApB,CAA2B,kBAA3B;AACH;;AAED,oBAAIK,SAAJ,EAAe;AACXA,8BAAUE,SAAV,CAAoBP,MAApB,CAA2B,kBAA3B;AACAK,8BAAUI,YAAV,CAAuB,cAAvB,EAAuC,OAAvC;AACH;;AAED,oBAAMC,UAAUR,QAAQc,aAAR,0BAA6CnB,OAAOiB,EAApD,CAAhB;AACA,oBAAIJ,OAAJ,EAAa;AACTR,4BAAQe,WAAR,CAAoBP,OAApB;AACH;AACJ;AACJ;;;;;;;;;;;YCpGWvI,YAAAA;AAAT,aAASA,SAAT,CAAmBW,MAAnB,EAA2B;AAC9BA,eAAOiB,SAAP,CAAiBmH,eAAjB,CACI,iBADJ,EAEI;AAAA,mBAAanH,UAAUC,GAAV,4DAAb;AAAA,SAFJ;AAGH;;;;;;;;sBCNc;AACXV,aAAK;AACDD,mBAAO,iDADN;AAED8H,yBAAa;AAFZ,SADM;AAKXC,gBAAQ;AACJC,kBAAM;AADF,SALG;AAQX5F,cAAM;AACFxD,mBAAO;AADL,SARK;AAWX,uBAAe;AACXqJ,uBAAW,CACP;AACID,sBAAM,MADV;AAEIE,0BAAU,6BAFd;;AAIIC,yBAAS;AAJb,aADO,EAOP;AACIH,sBAAM,MADV;AAEIE,0BAAU;AAFd,aAPO;AADA,SAXJ;AA0BXjG,uBAAe;AACXN,sBAAU,IADC;AAEX4C,oBAAQ;AAFG,SA1BJ;AA8BX,gCAAwB;AACpB6D,2BAAe;AACXC,yBAAS,uBADE;AAEX9I,uBAAO,qBAFI;AAGX8F,sBAAM;AAHK;AADK,SA9Bb;AAqCXiD,oBAAY;AACRC,sDAA0C,CADlC;AAERC,sCAA0B,CAFlB;AAGRC,wCAA4B,CAHpB;AAIRC,kDAAsC,CAJ9B;AAKRC,2CAA+B;AALvB;AArCD;;;;;;;;sBCAA;AAEX,kCAA0B;AAEtBT,sBAAU,MAFY;;AAKtBU,gCAAoB,CAAC,MAAD,EAAS,MAAT,CALE;;AAStBC,qBAAS,MATa;;AAYtBC,sBAAU,QAZY;;AAetBC,uBAAW,SAfW;;AAkBtBC,2BAAe,iBAlBO;;AAqBtBC,wBAAY,KArBU;;AAuBtBC,6BAAiB,gBAvBK;AAwBtBC,6BAAiB;AAxBK;AAFf;;;;;;;;sBCMA;AACXlJ,aAAK;AAED6H,yBAAa,iBAFZ,EADM;AAKX,uBAAe;AACXG,uBAAW,CACP;AACID,sBAAM,MADV;AAEIE,0BAAU,YAFd;AAGIC,yBAAS,IAHb,EADO,EAMP;AACIH,sBAAM,MADV;AAEIE,0BAAU,YAFd,EANO;AADA;AALJ;;;;;;;;oBCNA;;;;;;;;sBCAA;AACX9H,gBAAQ,CACJ;AACIgJ,mBAAO,CAAC,EAAD,EAAK,QAAL,CADX;AAEIpB,kBAAM,OAFV;AAGIqB,sBAAU,8BAHd;AAIIC,iBAAK,KAJT;AAKIC,kBAAM,KALV;AAMIvJ,mBAAO,OANX;AAOImB,sBAAU;AACNiC,mBAAG,aADG;AAENoG,uBAAO;AAFD;AAPd,SADI,EAYD;AACCJ,mBAAO,SADR;AAECpB,kBAAM,QAFP;AAGCqB,sBAAU,gCAHX;AAICrJ,mBAAO,QAJR;AAKCmB,sBAAU;AACNiC,mBAAG,cADG;AAENoG,uBAAO;AAFD;AALX,SAZC,EAqBD;AACCJ,mBAAO,aADR;AAECpB,kBAAM,YAFP;AAGCqB,sBAAU,wCAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,YANR;AAOCmB,sBAAU;AACNiC,mBAAG,kBADG;AAENoG,uBAAO,CAAC,aAAD;AAFD;AAPX,SArBC,EAgCD;AACCJ,mBAAO,YADR;AAECpB,kBAAM,WAFP;AAGCqB,sBAAU,sCAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,WANR;AAOCmB,sBAAU;AACNiC,mBAAG,iBADG;AAENoG,uBAAO;AAFD;AAPX,SAhCC,EA2CD;AACCJ,mBAAO,eADR;AAECpB,kBAAM,cAFP;AAGCqB,sBAAU,4CAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,cANR;AAOCmB,sBAAU;AACNiC,mBAAG,oBADG;AAENoG,uBAAO;AAFD;AAPX,SA3CC,EAsDD;AACCJ,mBAAO,+BADR;AAECpB,kBAAM,iBAFP;AAGCqB,sBAAU,kDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,iBANR;AAOCmB,sBAAU;AACNiC,mBAAG,uBADG;AAENoG,uBAAO;AAFD;AAPX,SAtDC,EAiED;AACCJ,mBAAO,8BADR;AAECpB,kBAAM,gBAFP;AAGCqB,sBAAU,gDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,gBANR;AAOCmB,sBAAU;AACNiC,mBAAG,sBADG;AAENoG,uBAAO;AAFD;AAPX,SAjEC,EA4ED;AACCJ,mBAAO,4BADR;AAECpB,kBAAM,cAFP;AAGCqB,sBAAU,4CAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,cANR;AAOCmB,sBAAU;AACNiC,mBAAG,oBADG;AAENoG,uBAAO;AAFD;AAPX,SA5EC,EAuFD;AACCJ,mBAAO,+CADR;AAECpB,kBAAM,iCAFP;AAGCqB,sBAAU,kFAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,iCANR;AAOCmB,sBAAU;AACNiC,mBAAG,uCADG;AAENoG,uBAAO;AAFD;AAPX,SAvFC,EAkGD;AACCJ,mBAAO,gCADR;AAECpB,kBAAM,kBAFP;AAGCqB,sBAAU,oDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,kBANR;AAOCmB,sBAAU;AACNiC,mBAAG,wBADG;AAENoG,uBAAO;AAFD;AAPX,SAlGC,EA6GD;AACCJ,mBAAO,gCADR;AAECpB,kBAAM,kBAFP;AAGCqB,sBAAU,oDAHX;AAICC,iBAAK,KAJN;AAKCC,kBAAM,IALP;AAMCvJ,mBAAO,kBANR;AAOCmB,sBAAU;AACNiC,mBAAG,wBADG;AAENoG,uBAAO;AAFD;AAPX,SA7GC,CADG;AA0HXnJ,uBAAe;AA1HJ;;;;;;;;;;;;;;;QCAFoJ,4BAAAA;AAKT,qCAAc;AAAA;;AAAA,iBAJdC,mBAIc,GAJQ,EAIR;AAAA,iBAHdC,qBAGc,GAHU,EAGV;AAAA,iBAFdC,cAEc,GAFG,EAEH;AACb;;oCAEDC,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASJ,mBAAb,EAAkC;AAC9B,yBAAKA,mBAAL,GAA2BI,SAASJ,mBAApC;AACH;AACD,oBAAII,SAASH,qBAAb,EAAoC;AAChC,yBAAKA,qBAAL,GAA6BG,SAASH,qBAAtC;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;QCjBQI,kCAAAA;AAKT,2CAAc;AAAA;;AAAA,iBAJdL,mBAIc,GAJQ,EAIR;AAAA,iBAHdC,qBAGc,GAHU,EAGV;AAAA,iBAFdC,cAEc,GAFG,EAEH;AACb;;0CAEDC,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASJ,mBAAb,EAAkC;AAC9B,yBAAKA,mBAAL,GAA2BI,SAASJ,mBAApC;AACH;AACD,oBAAII,SAASH,qBAAb,EAAoC;AAChC,yBAAKA,qBAAL,GAA6BG,SAASH,qBAAtC;AACH;AACD,oBAAIG,SAASF,cAAb,EAA6B;AACzB,yBAAKA,cAAL,GAAsBE,SAASF,cAA/B;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;QCpBQI,oBAAAA;AAOT,6BAAc;AAAA;;AAAA,iBANdC,YAMc,GANA,EAMA;AAAA,iBALdC,KAKc,GALN,EAKM;AAAA,iBAJdC,SAIc,GAJF,KAIE;AAAA,iBAHdC,QAGc,GAHH,KAGG;AAAA,iBAFdC,cAEc,GAFG,KAEH;AACb;;4BAEDR,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASG,YAAb,EAA2B;AACvB,yBAAKA,YAAL,GAAoBH,SAASG,YAA7B;AACH;AACD,oBAAIH,SAASI,KAAb,EAAoB;AAChB,yBAAKA,KAAL,GAAaJ,SAASI,KAAtB;AACH;AACD,qBAAKC,SAAL,GAAiBG,QAAQR,SAASK,SAAjB,CAAjB;AACA,qBAAKC,QAAL,GAAgBE,QAAQR,SAASM,QAAjB,CAAhB;AACA,qBAAKC,cAAL,GAAsBC,QAAQR,SAASO,cAAjB,CAAtB;AACH;AACJ;;;;;;;;;;;;;;;;;;QCtBQE,kBAAAA;AAOT,2BAAc;AAAA;;AAAA,iBANdC,WAMc,GAND,EAMC;AAAA,iBALdN,KAKc,GALN,EAKM;AAAA,iBAJdC,SAIc,GAJF,KAIE;AAAA,iBAHdC,QAGc,GAHH,KAGG;AAAA,iBAFdC,cAEc,GAFG,KAEH;AACb;;0BAEDR,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASU,WAAb,EAA0B;AACtB,yBAAKA,WAAL,GAAmBV,SAASU,WAA5B;AACH;AACD,oBAAIV,SAASI,KAAb,EAAoB;AAChB,yBAAKA,KAAL,GAAaJ,SAASI,KAAtB;AACH;AACD,qBAAKC,SAAL,GAAiBG,QAAQR,SAASK,SAAjB,CAAjB;AACA,qBAAKC,QAAL,GAAgBE,QAAQR,SAASM,QAAjB,CAAhB;AACA,qBAAKC,cAAL,GAAsBC,QAAQR,SAASO,cAAjB,CAAtB;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCdQI,eAAAA;AAeT,sBAAYvI,UAAZ,EAAwB;AAAA;;AAAA,iBAdxBwI,SAcwB,GAdZ,EAcY;AAAA,iBAbxBC,aAawB,GAbR,EAaQ;AAAA,iBAZxBC,MAYwB,GAZf,EAYe;AAAA,iBAXxBC,QAWwB,GAXb,EAWa;AAAA,iBAVxBC,4BAUwB,GAVO,EAUP;AAAA,iBATxBC,yBASwB,GATI,EASJ;AAAA,iBARxBC,kBAQwB,GARH,EAQG;AAAA,iBAPxBC,QAOwB,GAPb,EAOa;AAAA,iBANxBC,UAMwB,GANX,EAMW;AAAA,iBALxBC,iCAKwB,GALY,EAKZ;AAAA,iBAJxB5C,wCAIwB,GAJmB,cAAUD,UAAV,CAAqBC,wCAArB,IAAiE,CAIpF;AAAA,iBAHxBC,wBAGwB,GAHG,cAAUF,UAAV,CAAqBE,wBAArB,IAAiD,CAGpD;AAAA,iBAFxBC,0BAEwB,GAFK,cAAUH,UAAV,CAAqBG,0BAArB,IAAmD,CAExD;;AACpB,iBAAKoB,QAAL,CAAc3H,UAAd;AACH;;uBAED2H,6BAASC,UAAU;AACf,gBAAIA,QAAJ,EAAc;AACV,oBAAIA,SAASsB,cAAb,EAA6B;AACzB,yBAAKA,cAAL,GAAsB,6BAAetB,SAASsB,cAAxB,CAAtB;AACH;AACD,oBAAItB,SAASY,SAAb,EAAwB;AACpB,yBAAKA,SAAL,GAAiBZ,SAASY,SAA1B;AACH;AACD,oBAAIZ,SAASa,aAAb,EAA4B;AACxB,yBAAKA,aAAL,GAAqBb,SAASa,aAA9B;AACH;AACD,oBAAIb,SAASc,MAAb,EAAqB;AACjB,yBAAKA,MAAL,GAAcd,SAASc,MAAvB;AACH;AACD,oBAAId,SAASuB,QAAT,IAAqBvB,SAASuB,QAAT,CAAkBR,QAA3C,EAAqD;AACjD,yBAAKA,QAAL,GAAgBf,SAASuB,QAAT,CAAkBR,QAAlC;AACH;AACD,oBAAIf,SAASwB,SAAb,EAAwB;AACpB,yBAAKA,SAAL,GAAiBxB,SAASwB,SAA1B;AACH;AACD,oBAAIC,0BAA0B,KAA9B;AACA,oBAAIzB,SAAS0B,iCAAT,IAA8C1B,SAAS0B,iCAAT,CAA2CxF,MAAzF,IAAmG8D,SAAS0B,iCAAT,CAA2CxF,MAA3C,GAAoD,CAA3J,EAA8J;AAC1JuF,8CAA0B,IAA1B;AACA,yBAAK,IAAIzF,IAAI,CAAb,EAAgBA,IAAIgE,SAAS0B,iCAAT,CAA2CxF,MAA/D,EAAuEF,GAAvE,EAA4E;AACxE,4BAAI2F,uBAAuB,0CAA3B;AACAA,6CAAqB5B,QAArB,CAA8BC,SAAS0B,iCAAT,CAA2C1F,CAA3C,CAA9B;AACA,6BAAKgF,4BAAL,CAAkCY,IAAlC,CAAuCD,oBAAvC;AACH;AACJ;AACD,oBAAIE,8BAA8B,KAAlC;AACA,oBAAI7B,SAAS8B,wBAAT,IAAqC9B,SAAS8B,wBAAT,CAAkC5F,MAAvE,IAAiF8D,SAAS8B,wBAAT,CAAkC5F,MAAlC,GAA2C,CAAhI,EAAmI;AAC/H2F,kDAA8B,IAA9B;AACA,yBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI/B,SAAS8B,wBAAT,CAAkC5F,MAAtD,EAA8D6F,GAA9D,EAAmE;AAC/D,4BAAIC,6BAA6B,sDAAjC;AACAA,mDAA2BjC,QAA3B,CAAoCC,SAAS8B,wBAAT,CAAkCC,CAAlC,CAApC;AACA,6BAAKd,yBAAL,CAA+BW,IAA/B,CAAoCI,0BAApC;AACH;AACJ;AACD,oBAAIhC,SAASmB,QAAT,IAAqBnB,SAASmB,QAAT,CAAkBjF,MAAvC,IAAiD8D,SAASmB,QAAT,CAAkBjF,MAAlB,GAA2B,CAAhF,EAAmF;AAC/E,yBAAK,IAAI+F,IAAI,CAAb,EAAgBA,IAAIjC,SAASmB,QAAT,CAAkBjF,MAAtC,EAA8C+F,GAA9C,EAAmD;AAC/C,4BAAIC,aAAa,sBAAjB;AACAA,mCAAWnC,QAAX,CAAoBC,SAASmB,QAAT,CAAkBc,CAAlB,CAApB;AACA,6BAAKd,QAAL,CAAcS,IAAd,CAAmBM,UAAnB;AACH;AACJ;AACD,oBAAIlC,SAASoB,UAAT,IAAuBpB,SAASoB,UAAT,CAAoBlF,MAA3C,IAAqD8D,SAASoB,UAAT,CAAoBlF,MAApB,GAA6B,CAAtF,EAAyF;AACrF,yBAAK,IAAIiG,IAAI,CAAb,EAAgBA,IAAInC,SAASoB,UAAT,CAAoBlF,MAAxC,EAAgDiG,GAAhD,EAAqD;AACjD,4BAAIC,eAAe,0BAAnB;AACAA,qCAAarC,QAAb,CAAsBC,SAASoB,UAAT,CAAoBe,CAApB,CAAtB;AACA,6BAAKf,UAAL,CAAgBQ,IAAhB,CAAqBQ,YAArB;AACH;AACJ;AACD,oBAAIpC,SAASqC,eAAT,IAA4BrC,SAASqC,eAAT,CAAyBnG,MAArD,IAA+D8D,SAASqC,eAAT,CAAyBnG,MAAzB,GAAkC,CAArG,EAAwG;AACpG,yBAAK,IAAIoG,IAAI,CAAb,EAAgBA,IAAItC,SAASqC,eAAT,CAAyBnG,MAA7C,EAAqDoG,GAArD,EAA0D;AACtD,6BAAKjB,iCAAL,CAAuCO,IAAvC,CAA4C5B,SAASqC,eAAT,CAAyBC,CAAzB,CAA5C;AACH;AACJ;;AAED,oBAAIb,uBAAJ,EAA6B;AACzB,yBAAKA,uBAAL,CAA6B,KAAKhD,wCAAlC;AACH;AACD,oBAAIoD,2BAAJ,EAAiC;AAC7B,wBAAI,CAACJ,uBAAL,EAA8B;AAC1B,4BAAIzB,SAAS8B,wBAAT,IAAqC9B,SAAS8B,wBAAT,CAAkC5F,MAAvE,IAAiF8D,SAAS8B,wBAAT,CAAkC5F,MAAlC,GAA2C,CAAhI,EAAmI;AAC/H,iCAAK,IAAIqG,IAAI,CAAb,EAAgBA,IAAIvC,SAAS8B,wBAAT,CAAkC5F,MAAtD,EAA8DqG,GAA9D,EAAmE;AAC/D,oCAAIZ,wBAAuB,0CAA3B;AACAA,sDAAqB5B,QAArB,CAA8BC,SAAS8B,wBAAT,CAAkCS,CAAlC,CAA9B;AACA,qCAAKvB,4BAAL,CAAkCY,IAAlC,CAAuCD,qBAAvC;AACH;AACD,iCAAKF,uBAAL,CAA6BzB,SAAS8B,wBAAT,CAAkC5F,MAA/D;AACH;AACJ;AACD,yBAAK2F,2BAAL;AACH;AACJ;AACJ;;uBAEDJ,2DAAwBe,4BAA4B;AAChD,iBAAKtB,kBAAL,GAA0B,EAA1B;AACA,iBAAK,IAAIlF,IAAI,CAAb,EAAgBA,IAAIwG,0BAApB,EAAgDxG,GAAhD,EAAqD;AACjD,qBAAKkF,kBAAL,CAAwBU,IAAxB,CAA6B;AACzBa,iDAA6B,iBAAEC,OAAF,CAAU,iBAAEC,SAAF,CAAY,KAAK3B,4BAAjB,EAA+C,CAAC,qBAAD,CAA/C,EAAwE,CAAC,KAAD,CAAxE,CAAV,CADJ;AAEzB4B,wDAAoC,IAFX;AAGzBC,kEAA8C,IAHrB;AAIzB/C,oCAAgB,EAJS;AAKzBgD,sCAAkB;AALO,iBAA7B;AAOH;AACJ;;uBAEDC,+EAAkCC,2BAA2BJ,oCAAoC;AAC7F,iBAAK,IAAI5G,IAAI,CAAb,EAAgBA,IAAI,KAAKkF,kBAAL,CAAwBhF,MAA5C,EAAoDF,GAApD,EAAyD;AACrD,oBAAIiH,2BAA2B,KAAK/B,kBAAL,CAAwBlF,CAAxB,CAA/B;AACA,oBAAIiH,6BAA6BD,yBAAjC,EAA4D;AACxD,wBAAIE,0CAAJ;AACA,wBAAIN,uCAAuC,IAA3C,EAAiD;AAC7C,4BAAIO,QAAQ,iBAAEC,SAAF,CAAYH,yBAAyBR,2BAArC,EAAkEG,kCAAlE,CAAZ;AACA,4BAAIO,QAAQ,CAAC,CAAb,EAAgB;AACZD,gEAAoCD,yBAAyBR,2BAAzB,CAAqDY,MAArD,CAA4DF,KAA5D,EAAmE,CAAnE,CAApC;AACH;AACJ;AACD,wBAAIH,0BAA0BH,4CAA1B,KAA2E,IAA/E,EAAqF;AACjFI,iDAAyBR,2BAAzB,CAAqDY,MAArD,CAA4D,CAA5D,EAA+D,CAA/D,EAAkEL,0BAA0BH,4CAA5F;AACH;AACJ;AACJ;;AAEDG,sCAA0BH,4CAA1B,GAAyED,kCAAzE;AACH;;uBAEDU,qEAA8B;AAC1B,gBAAIxB,2BAA2B,EAA/B;AACA,iBAAK,IAAI9F,IAAI,CAAb,EAAgBA,IAAI,KAAKkF,kBAAL,CAAwBhF,MAA5C,EAAoDF,GAApD,EAAyD;AACrD,oBAAIuH,oBAAoB,KAAKrC,kBAAL,CAAwBlF,CAAxB,CAAxB;AACA,oBAAIuH,qBAAqBA,kBAAkBX,kCAAvC,IAA6EW,kBAAkBX,kCAAlB,CAAqDhD,mBAAlI,IAAyJ2D,kBAAkBX,kCAAlB,CAAqD/C,qBAA9M,IAAuO0D,kBAAkBzD,cAA7P,EAA6Q;AACzQgC,6CAAyBF,IAAzB,CAA8B;AAC1BhC,6CAAqB2D,kBAAkBX,kCAAlB,CAAqDhD,mBADhD;AAE1BC,+CAAuB0D,kBAAkBX,kCAAlB,CAAqD/C,qBAFlD;AAG1BC,wCAAgByD,kBAAkBzD;AAHR,qBAA9B;AAKH;AACJ;AACD,mBAAOgC,wBAAP;AACH;;uBAEDD,qEAA8B;AAAA;;AAAA,uCACjB7F,CADiB;AAEtB,oBAAIuH,oBAAoB,MAAKrC,kBAAL,CAAwBlF,CAAxB,CAAxB;AACA,oBAAIwH,0BAA0B,MAAKvC,yBAAL,CAA+BjF,CAA/B,CAA9B;AACA,oBAAIuH,qBAAqBC,uBAAzB,EAAkD;AAC9CD,sCAAkBX,kCAAlB,GAAuD,iBAAEa,IAAF,CAAOF,kBAAkBd,2BAAzB,EAAsD,UAAUiB,CAAV,EAAa;AACtH,+BAAOA,EAAE9D,mBAAF,KAA0B4D,wBAAwB5D,mBAAzD;AACH,qBAFsD,CAAvD;AAGA,0BAAKmD,iCAAL,CAAuCQ,iBAAvC,EAA0DA,kBAAkBX,kCAA5E;AACH;AATqB;;AAC1B,iBAAK,IAAI5G,IAAI,CAAb,EAAgBA,IAAI,KAAKkF,kBAAL,CAAwBhF,MAA5C,EAAoDF,GAApD,EAAyD;AAAA,sBAAhDA,CAAgD;AASxD;AACJ;;;;gCAEsC;AACnC,uBAAO,KAAKiF,yBAAL,IAAkC,KAAKA,yBAAL,CAA+B/E,MAAjE,IAA2E,KAAK+E,yBAAL,CAA+B/E,MAA/B,IAAyC,KAAKuC,wCAAhI;AACH;;;gCAEsB;AACnB,uBAAO,KAAK0C,QAAL,IAAiB,KAAKA,QAAL,CAAcjF,MAA/B,IAAyC,KAAKiF,QAAL,CAAcjF,MAAd,IAAwB,KAAKwC,wBAA7E;AACH;;;gCAEwB;AACrB,oBAAIiF,UAAU,KAAd;AACA,oBAAI,KAAKvC,UAAL,IAAmB,KAAKA,UAAL,CAAgBlF,MAAnC,IAA6C,KAAKkF,UAAL,CAAgBlF,MAAhB,IAA0B,KAAKyC,0BAAhF,EAA4G;AACxG,wBAAI,KAAKyC,UAAL,CAAgBlF,MAAhB,GAAyB,CAA7B,EAAgC;AAC5ByH,kCAAU,IAAV;AACH,qBAFD,MAEO;AACH,4BAAI,CAAC,KAAKvC,UAAL,CAAgB,CAAhB,EAAmBjB,YAAnB,CAAgC7K,KAAhC,CAAsC,iBAAtC,CAAL,EAA+D;AAC3DqO,sCAAU,IAAV;AACH;AACJ;AACJ;AACD,uBAAOA,OAAP;AACH;;;;;;;;;;;;YCzLW3O,YAAAA;AAAT,aAASA,SAAT,CAAmBW,MAAnB,EAA2B;AAC9BA,eAAO8F,eAAP,CAAuB,CACnB,mCADmB,EAEnB,oCAFmB,EAGnB,oCAHmB,CAAvB;AAKH;;;;;;;;;;;;;;;;;;QCCYmI,sBAAAA,sBADZ;AAIG,6BAAYjO,MAAZ,EAAoBkO,YAApB,EAAkC;AAAA;;AAAA,iBAFlCC,YAEkC,GAFnB,KAEmB;;AAC9B,iBAAKC,YAAL,GAAoBpO,OAAOqO,WAAP,CAAmB,MAAnB,CAApB;AACA,iBAAKH,YAAL,GAAoBA,YAApB;AACH;;8BAEDI,yBAAOC,eAAe;AAAA;;AAClB,iBAAKJ,YAAL,GAAoB,IAApB;AACAI,0BAAcC,aAAd,GAA8B,KAAKN,YAAL,CAAkBM,aAAhD;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,QAAvB,EAAiCF,aAAjC,EACFjL,IADE,CACG,oBAAY;AACd,sBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,0BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAEDuE,mCAAYC,oBAAoB;AAAA;;AAC5B,iBAAKV,YAAL,GAAoB,IAApB;AACAU,+BAAmBL,aAAnB,GAAmC,KAAKN,YAAL,CAAkBM,aAArD;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,aAAvB,EAAsCI,kBAAtC,EACFvL,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAEDyE,uCAAcC,sBAAsB;AAAA;;AAChC,iBAAKZ,YAAL,GAAoB,IAApB;AACAY,iCAAqBP,aAArB,GAAqC,KAAKN,YAAL,CAAkBM,aAAvD;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,eAAvB,EAAwCM,oBAAxC,EACFzL,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAED2E,6CAAiBC,yBAAyB;AAAA;;AACtC,iBAAKd,YAAL,GAAoB,IAApB;AACAc,oCAAwBT,aAAxB,GAAwC,KAAKN,YAAL,CAAkBM,aAA1D;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,kBAAvB,EAA2CQ,uBAA3C,EACF3L,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAED6E,2BAAQC,gBAAgB;AAAA;;AACpB,iBAAKhB,YAAL,GAAoB,IAApB;AACAgB,2BAAeX,aAAf,GAA+B,KAAKN,YAAL,CAAkBM,aAAjD;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,SAAvB,EAAkCU,cAAlC,EACF7L,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAED+E,mEAA4BC,oCAAoC;AAAA;;AAC5D,iBAAKlB,YAAL,GAAoB,IAApB;AACAkB,+CAAmCb,aAAnC,GAAmD,KAAKN,YAAL,CAAkBM,aAArE;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,6BAAvB,EAAsDY,kCAAtD,EACF/L,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAEDiF,+CAAkBC,0BAA0B;AAAA;;AACxC,iBAAKpB,YAAL,GAAoB,IAApB;AACAoB,qCAAyBf,aAAzB,GAAyC,KAAKN,YAAL,CAAkBM,aAA3D;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,mBAAvB,EAA4Cc,wBAA5C,EACFjM,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAEDmF,+CAAkBC,0BAA0B;AAAA;;AACxC,iBAAKtB,YAAL,GAAoB,IAApB;AACAsB,qCAAyBjB,aAAzB,GAAyC,KAAKN,YAAL,CAAkBM,aAA3D;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,mBAAvB,EAA4CgB,wBAA5C,EACFnM,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;8BAEDqF,uCAAcC,sBAAsB;AAAA;;AAChC,iBAAKxB,YAAL,GAAoB,IAApB;AACAwB,iCAAqBnB,aAArB,GAAqC,KAAKN,YAAL,CAAkBM,aAAvD;AACA,mBAAO,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,kBAAvB,EAA2CkB,oBAA3C,EACFrM,IADE,CACG,oBAAY;AACd,uBAAK6K,YAAL,GAAoB,KAApB;AACA,oBAAI9D,SAASmE,aAAT,IAA0BnE,SAASmE,aAAT,CAAuBE,iBAArD,EAAwE;AACpE,2BAAKR,YAAL,CAAkBS,oBAAlB,CAAuCtE,SAASmE,aAAT,CAAuBE,iBAA9D;AACH;AACD,uBAAOrE,QAAP;AACH,aAPE,CAAP;AAQH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QChIQuF,qBAAAA;AAMT,4BAAYrH,IAAZ,QAA0C;AAAA,gBAAvBsH,OAAuB,QAAvBA,OAAuB;AAAA,gBAAdC,WAAc,QAAdA,WAAc;;AAAA;;AAAA;;AACtC,gBAAI,CAACC,OAAOC,EAAZ,EAAgB;AACZD,uBAAOC,EAAP,GAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAExB,wBAAID,MAAMC,CAAV,EAAa;AAET,+BAAOD,MAAM,CAAN,IAAW,IAAIA,CAAJ,KAAU,IAAIC,CAAhC;AACH,qBAHD,MAGO;AAEH,+BAAOD,MAAMA,CAAN,IAAWC,MAAMA,CAAxB;AACH;AACJ,iBATD;AAUH;AACD,gBAAI,CAACH,OAAOC,EAAP,CAAUH,OAAV,EAAmB5L,SAAnB,CAAL,EAAoC;AAChC,qBAAK4L,OAAL,GAAeA,OAAf;AACH;AACD,gBAAIC,WAAJ,EAAiB;AACb,qBAAKA,WAAL,GAAmBA,WAAnB;AACH;AACD,iBAAKK,OAAL,GAAe5H,IAAf;AACAwH,mBAAOK,MAAP,CAAc,IAAd;AACH;;6BAUDC,+BAAW;AACP,mBAAO,KAAKC,GAAZ;AACH;;6BAEDC,6BAAU;AACN,mBAAO,KAAKV,OAAZ;AACH;;;;gCAda;AACV,uBAAO,KAAKC,WAAL,IAAoBU,OAAOC,MAAP,CAAc,KAAKH,GAAnB,CAA3B;AACH;;;gCAES;AACN,uBAAO,KAAKH,OAAZ;AACH;;;;;aAlCDG,MAAME,OAAOE,GAAP,CAAWnI,IAAX;;;QA6CGoI,eAAAA;AACT,sBAAYC,YAAZ,EAA0B;AAAA;;AACtB,iBAAK,IAAInN,GAAT,IAAgBmN,YAAhB,EAA8B;AAC1B,oBAAIA,aAAaC,cAAb,CAA4BpN,GAA5B,CAAJ,EAAsC;AAClC,wBAAI,CAACmN,aAAanN,GAAb,CAAL,EAAwB;AACpB,8BAAM,IAAIqN,SAAJ,CAAc,qEAAd,CAAN;AACH;AACD,yBAAKrN,GAAL,IAAY,IAAImM,UAAJ,CAAenM,GAAf,EAAoBmN,aAAanN,GAAb,CAApB,CAAZ;AACH;AACJ;AACDsM,mBAAOK,MAAP,CAAc,IAAd;AACH;;uBAEDW,6BAAU;AACN,gBAAIC,OAAO,EAAX;AACA,gBAAIC,OAAO,IAAX;AACAlB,mBAAOmB,IAAP,CAAY,IAAZ,EAAkBC,OAAlB,CAA0B,UAAU7E,CAAV,EAAa;AACnC0E,qBAAK/E,IAAL,CAAUgF,KAAK3E,CAAL,CAAV;AACH,aAFD;AAGA,mBAAO0E,IAAP;AACH;;uBAEDE,uBAAO;AACH,mBAAOnB,OAAOmB,IAAP,CAAY,IAAZ,CAAP;AACH;;uBAEDxJ,6BAAS4I,KAAK;AACV,gBAAI,EAAEA,eAAeV,UAAjB,CAAJ,EAAkC;AAC9B,uBAAO,KAAP;AACH;AACD,mBAAO,KAAKY,OAAOC,MAAP,CAAcH,IAAIA,GAAlB,CAAL,MAAiCA,GAAxC;AACH;;uBAEDpP,mBAAI2O,SAAS;AACT,gBAAIoB,OAAO,IAAX;AACA,gBAAIG,eAAJ;AACA,iBAAKF,IAAL,GAAYC,OAAZ,CAAoB,aAAK;AACrB,oBAAIF,KAAK3E,CAAL,EAAQuD,OAAR,KAAoB,CAACA,OAAzB,EAAkC;AAC9BuB,6BAASH,KAAK3E,CAAL,CAAT;AACH;AACJ,aAJD;AAKA,mBAAO8E,MAAP;AACH;;;;;AAGE,QAAMC,0CAAiB,IAAIV,IAAJ,CAAS;AACnCW,iBAAS,EAACzB,SAAS,CAAV,EAAaC,aAAa,wBAA1B,EAD0B;AAEnCyB,cAAM,EAAC1B,SAAS,CAAV,EAAaC,aAAa,qBAA1B,EAF6B;AAGnC0B,iBAAS,EAAC3B,SAAS,CAAV,EAAaC,aAAa,wBAA1B,EAH0B;AAInC2B,mBAAW,EAAC5B,SAAS,CAAV,EAAaC,aAAa,0BAA1B;AAJwB,KAAT,CAAvB;;AAOA,QAAM4B,0CAAiB,IAAIf,IAAJ,CAAS;AACnCgB,oBAAY,EAAC9B,SAAS,CAAV,EAAaC,aAAa,2BAA1B,EADuB;AAEnC8B,eAAO,EAAC/B,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAF4B;AAGnC+B,mBAAW,EAAChC,SAAS,CAAV,EAAaC,aAAa,0BAA1B,EAHwB;AAInCgC,eAAO,EAACjC,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAJ4B;AAKnCiC,eAAO,EAAClC,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAL4B;AAMnCkC,iBAAS,EAACnC,SAAS,CAAV,EAAaC,aAAa,wBAA1B;AAN0B,KAAT,CAAvB;;AASA,QAAMmC,kCAAa,IAAItB,IAAJ,CAAS;AAC/BuB,eAAO,EAACrC,SAAS,CAAV,EAAaC,aAAa,kBAA1B,EADwB;AAE/BqC,mBAAW,EAACtC,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAFoB;AAG/BsC,cAAM,EAACvC,SAAS,CAAV,EAAaC,aAAa,iBAA1B,EAHyB;AAI/BuC,gBAAQ,EAACxC,SAAS,CAAV,EAAaC,aAAa,mBAA1B;AAJuB,KAAT,CAAnB;;AAOA,QAAMwC,0CAAiB,IAAI3B,IAAJ,CAAS;AACnC4B,kBAAU,EAAC1C,SAAS,CAAV,EAAaC,aAAa,yBAA1B,EADyB;AAEnC+B,mBAAW,EAAChC,SAAS,CAAV,EAAaC,aAAa,0BAA1B,EAFwB;AAGnC0C,aAAK,EAAC3C,SAAS,CAAV,EAAaC,aAAa,oBAA1B,EAH8B;AAInCiC,eAAO,EAAClC,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAJ4B;AAKnC2C,sBAAc,EAAC5C,SAAS,CAAV,EAAaC,aAAa,6BAA1B;AALqB,KAAT,CAAvB;;AAQA,QAAM4C,oCAAc,IAAI/B,IAAJ,CAAS;AAChCmB,eAAO,EAACjC,SAAS,CAAV,EAAaC,aAAa,mBAA1B,EADyB;AAEhCiC,eAAO,EAAClC,SAAS,CAAV,EAAaC,aAAa,mBAA1B;AAFyB,KAAT,CAApB;;AAKA,QAAM6C,kCAAa,IAAIhC,IAAJ,CAAS;AAC/BuB,eAAO,EAACrC,SAAS,CAAV,EAAaC,aAAa,kBAA1B,EADwB;AAE/B8C,mBAAW,EAAC/C,SAAS,CAAV,EAAaC,aAAa,sBAA1B,EAFoB;AAG/BsC,cAAM,EAACvC,SAAS,CAAV,EAAaC,aAAa,iBAA1B,EAHyB;AAI/BuC,gBAAQ,EAACxC,SAAS,CAAV,EAAaC,aAAa,mBAA1B;AAJuB,KAAT,CAAnB;;AAOP,QAAI+C,yBAAyB,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,YAAR,EAAyB;AAClD,YAAIC,SAAS,EAAb;AACA,YAAIC,eAAeH,KAAnB;AACA,aAAK,IAAIzM,IAAI0M,YAAb,EAA2B1M,KAAK,CAAhC,EAAmCA,GAAnC,EAAwC;AACpC,gBAAI4M,gBAAgB5M,CAAhB,KAAsB,CAA1B,EAA6B;AACzB,oBAAI6M,WAAWC,KAAKC,GAAL,CAAS,CAAT,EAAY/M,CAAZ,CAAf;AACA4M,+BAAeA,eAAeC,QAA9B;AACAF,uBAAO/G,IAAP,CAAYiH,QAAZ;AACH;AACJ;AACD,eAAOF,MAAP;AACH,KAXD;;AAaO,QAAIK,sDAAuB,YAAY;AAC1C,eAAO;AACHC,qBAAS,iBAACC,IAAD,EAAOzQ,KAAP,EAAiB;AACtB,oBAAIA,UAAUmB,SAAd,EAAyB;AACrB,2BAAO,EAAP;AACH;AACD,oBAAIuP,IAAIX,uBAAuB/P,KAAvB,EAA8ByQ,KAAKxC,OAAL,GAAexK,MAA7C,CAAR;AACA,oBAAIkN,QAAQ,EAAZ;AACA,iCAAEtC,OAAF,CAAUqC,CAAV,EAAa,mBAAW;AACpBC,0BAAMxH,IAAN,CAAWsH,KAAKrS,GAAL,CAAS2O,OAAT,CAAX;AACH,iBAFD;AAGA,uBAAO4D,KAAP;AACH;AAXE,SAAP;AAaH,KAdiC,EAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrJMC,uBAAAA;AAET,gCAAc;AAAA;AACb;;+BAsBD/E,qDAAqBgF,cAAc;AAC/B,gBAAIC,QAAQ,QAAZ;AACA,gBAAIC,UAAU,GAAd;AACA,gBAAIC,IAAI,IAAIC,IAAJ,EAAR;AACAD,cAAEE,OAAF,CAAUF,EAAEG,OAAF,KAAeJ,UAAU,EAAV,GAAe,EAAf,GAAoB,EAApB,GAAyB,IAAlD;AACA,gBAAIK,UAAU,aAAaJ,EAAEK,WAAF,EAA3B;AACAzO,qBAAS0O,MAAT,GAAkBR,QAAQ,GAAR,GAAcD,YAAd,GAA6B,GAA7B,GAAmCO,OAAnC,GAA6C,UAA/D;AACH;;;;gCA3BmB;AAChB,oBAAIG,cAAcC,oBAAlB;;AAGA,oBAAI5F,oBAAoB,KAAKA,iBAA7B;;AAEA,uBAAO;AACH,mCAAe2F,WADZ;AAEH,yCAAqB3F,iBAFlB;AAGH,sCAAkBA,iBAHf;AAIH,kCAAc,IAJX;AAKH,uCAAmB,IALhB;AAMH,0CAAsB,IANnB;AAOH,0CAAsB,IAPnB;AAQH,oCAAgB,IARb;AASH,iCAAa,IATV;AAUH,iCAAa;AAVV,iBAAP;AAYH;;;gCAWuB;AACpB,oBAAIkF,QAAQ,SAAZ;AACA,oBAAIW,KAAK7O,SAAS0O,MAAT,CAAgBpR,KAAhB,CAAsB,GAAtB,CAAT;AACA,qBAAK,IAAIqD,IAAI,CAAb,EAAgBA,IAAIkO,GAAGhO,MAAvB,EAA+BF,GAA/B,EAAoC;AAChC,wBAAImO,IAAID,GAAGlO,CAAH,CAAR;AACA,2BAAOmO,EAAEC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4B;AACxBD,4BAAIA,EAAEE,SAAF,CAAY,CAAZ,CAAJ;AACH;AACD,wBAAIF,EAAEG,OAAF,CAAUf,KAAV,MAAqB,CAAzB,EAA4B;AACxB,+BAAOY,EAAEE,SAAF,CAAYd,MAAMrN,MAAlB,EAA0BiO,EAAEjO,MAA5B,CAAP;AACH;AACJ;AACD,uBAAO,EAAP;AACH;;;;;;;;;;;;;;;;;;;QC/CgBqO;AAEjB,4BAAYC,eAAZ,EAA6B;AAAA;;AACzB,iBAAKA,eAAL,GAAuBA,eAAvB;AACH;;6BAEDxQ,uBAAMyQ,UAAUC,SAASC,YAAY;AAAA;;AACjC,gBAAIC,cAAcH,QAAlB;;AAEA,iBAAKI,UAAL,GAAkB1V,OAAO2V,WAAP,CAAmB,YAAM;AACvC,oBAAI,EAAEF,WAAF,GAAgB,CAApB,EAAuB;AACnB,0BAAKG,IAAL;AACA,wBAAI,MAAKP,eAAL,IAAwB,MAAKA,eAAL,CAAqBQ,OAA7C,IAAwDL,UAA5D,EAAwE;AACpE,8BAAKH,eAAL,CAAqBQ,OAArB,CAA6BL,UAA7B,EAAyC,CAAzC;AACH;AACJ;AACD,oBAAI,MAAKH,eAAL,IAAwB,MAAKA,eAAL,CAAqBQ,OAA7C,IAAwDN,OAA5D,EAAqE;AACjE,0BAAKF,eAAL,CAAqBQ,OAArB,CAA6BN,OAA7B,EAAsCE,WAAtC;AACH;AACJ,aAViB,EAUf,IAVe,CAAlB;AAWH;;6BAEDG,uBAAO;AACH5V,mBAAO8V,aAAP,CAAqB,KAAKJ,UAA1B;AACH;;;;;sBAxBgBN;;;;;;;;ACArB,aAASW,sBAAT,GAAkC;AAC9B,eAAO;AACHC,+BAAmB,2BAAU/R,GAAV,EAAegS,QAAf,EAAyB;AACxC,oBAAIA,YAAY,IAAhB,EAAsB;AAClBA,+BAAW,IAAX;AACH;AACDhS,sBAAMA,IAAIiS,OAAJ,CAAY,MAAZ,EAAoB,MAApB,EAA4BA,OAA5B,CAAoC,MAApC,EAA4C,MAA5C,CAAN;AACAjS,sBAAMA,IAAIiS,OAAJ,CAAY,GAAZ,EAAiB,KAAjB,CAAN;AACA,oBAAIC,QAAQ,IAAI/V,MAAJ,CAAW,WAAW6D,GAAX,GAAiB,WAA5B,CAAZ;AACA,oBAAImS,KAAKD,MAAME,IAAN,CAAWrW,OAAOC,QAAP,CAAgBqW,IAA3B,CAAT;AACA,oBAAIF,MAAM,IAAV,EAAgB;AACZ,2BAAOH,QAAP;AACH,iBAFD,MAEO;AACH,2BAAOM,mBAAmBH,GAAG,CAAH,CAAnB,CAAP;AACH;AACJ;AAdE,SAAP;AAgBH;;AAEM,QAAII,0CAAiB,IAAIT,sBAAJ,EAArB;;;;;;;;;;;;;;;;;;AChBA,MAAIjN,0BAAS,6BAAW2N,SAAX,CAAqB,cAAU3N,MAAV,CAAiBC,IAAtC,CAAb;;;;;;;;;;;;;;;;;;;;ACAP,QAAI2N,YAAY,4BAAYA,SAA5B;;AAEO,QAAIC,4CAAkB;AACzBC,iBAAS,iBAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC3B,gBAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB;AAChB,uBAAQ,CAACD,IAAD,IAAS,CAACC,IAAlB;AACH;AACD,gBAAIC,QAAQxG,OAAOmB,IAAP,CAAYmF,IAAZ,CAAZ;AACA,gBAAIG,QAAQzG,OAAOmB,IAAP,CAAYoF,IAAZ,CAAZ;AACA,gBAAIC,MAAMhQ,MAAN,KAAiBiQ,MAAMjQ,MAA3B,EAAmC;AAC/B,uBAAO,KAAP;AACH;AACD,iBAAK,IAAIF,IAAI,CAAR,EAAWoQ,MAAMF,MAAMhQ,MAA5B,EAAoCF,IAAIoQ,GAAxC,EAA6CpQ,GAA7C,EAAkD;AAC9C,oBAAI5C,MAAM8S,MAAMlQ,CAAN,CAAV;AACA,oBAAI,CAACiQ,KAAKzF,cAAL,CAAoBpN,GAApB,CAAD,IAA6B4S,KAAK5S,GAAL,MAAc6S,KAAK7S,GAAL,CAA/C,EAA0D;AACtD,2BAAO,KAAP;AACH;AACJ;AACD,mBAAO,IAAP;AACH,SAjBwB;;AAmBzBiT,oBAAY,oBAAUC,WAAV,EAAuBC,MAAvB,EAA+B;AACvC,iBAAK,IAAIC,QAAT,IAAqBD,MAArB,EAA6B;AACzB,oBAAIA,OAAO/F,cAAP,CAAsBgG,QAAtB,CAAJ,EAAqC;AACjC,wBAAID,OAAOC,QAAP,KAAoBD,OAAOC,QAAP,EAAiBC,WAArC,IAAoDF,OAAOC,QAAP,EAAiBC,WAAjB,KAAiC/G,MAAzF,EAAiG;AAC7F4G,oCAAYE,QAAZ,IAAwBF,YAAYE,QAAZ,KAAyB,EAAjD;AACAV,wCAAgBO,UAAhB,CAA2BC,YAAYE,QAAZ,CAA3B,EAAkDD,OAAOC,QAAP,CAAlD;AACH,qBAHD,MAGO;AACHF,oCAAYE,QAAZ,IAAwBD,OAAOC,QAAP,CAAxB;AACH;AACJ;AACJ;AACD,mBAAOF,WAAP;AACH;AA/BwB,KAAtB;;AAkCA,QAAII,kDAAqB;AAC5BC,qBAD4B,yBACdC,OADc,EACLC,UADK,EACO;AAC/B,gBAAIC,gBAAgB,iBAAEC,KAAF,CAAQF,UAAR,CAApB;AACA,gBAAIC,cAAc5Q,MAAd,KAAyB,CAAzB,IAA8B,CAAC2P,UAAUmB,SAAV,CAAoBF,cAAc,CAAd,EAAiBG,QAArC,CAAnC,EAAmF;AAC/E,oBAAIH,cAAc,CAAd,EAAiBF,OAAjB,KAA6BA,OAAjC,EAA0C;AACtCE,kCAAczJ,MAAd,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,aAJD,MAIO;AACH,iCAAExG,MAAF,CAASiQ,aAAT,EAAwB,gBAAQ;AAC5B,2BAAO3Q,KAAKyQ,OAAL,KAAiBA,OAAxB;AACH,iBAFD;AAGA,oBAAIM,WAAW,iBAAEC,MAAF,CAASL,aAAT,EAAwB,gBAAQ;AAC3C,2BAAOjB,UAAUmB,SAAV,CAAoB7Q,KAAK8Q,QAAzB,CAAP;AACH,iBAFc,CAAf;AAGA,oBAAIC,SAAShR,MAAT,GAAkB,CAAtB,EAAyB;AACrB,qCAAE4K,OAAF,CAAUoG,QAAV,EAAoB,mBAAW;AAC3B,4BAAIE,YAAYC,QAAQC,OAAR,EAAhB;AACA,4BAAIC,YAAYb,mBAAmBC,aAAnB,CAAiCC,OAAjC,EAA0CQ,SAA1C,CAAhB;AACA,4BAAIG,UAAUrR,MAAV,GAAmBkR,UAAUlR,MAAjC,EAAyC;AACrC,gCAAIsR,OAAO,iBAAElD,OAAF,CAAUwC,aAAV,EAAyBO,OAAzB,CAAX;AACAP,0CAAczJ,MAAd,CAAqBmK,IAArB,EAA2B,CAA3B;AACH;AACJ,qBAPD;AAQH;AACJ;AACD,mBAAOV,aAAP;AACH;AA1B2B,KAAzB;;AA6BA,QAAIW,kCAAa;AACpBC,mBAAW,mBAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC7B,gBAAIhS,IAAI+R,GAAR;AACA,gBAAIC,QAAQ,CAAZ,EAAe;AACX,oBAAID,IAAIE,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACnBjS,wBAAI+R,IAAItD,SAAJ,CAAc,CAAd,EAAiBsD,IAAIzR,MAAJ,GAAa,CAA9B,IAAmC,KAAvC;AACH,iBAFD,MAEO;AACHN,yBAAK,GAAL;AACH;AACJ;AACD,mBAAOA,CAAP;AACH;AAXmB,KAAjB;;;;;;;;;;;;;;;;;;ACjEP,aAASkS,oBAAT,GAAgC;AAC5B,eAAO;AACHC,wBAAY,oBAASC,IAAT,EAAe;AACvB,oBAAIC,gBAAgB,EAApB;AACA,oBAAID,IAAJ,EAAU;AACN,wBAAI;AACA,4BAAIvE,IAAI,IAAIC,IAAJ,CAASsE,IAAT,CAAR;AACAC,wCAAgB,sBAAOxE,CAAP,EAAUjR,MAAV,CAAiB,YAAjB,CAAhB;AACH,qBAHD,CAGE,OAAO0V,OAAP,EAAgB;AACd,6CAAOC,IAAP,CAAY,4BAA4B1V,KAAxC,EAA+CyV,OAA/C;AACH;AACJ;AACD,oBAAID,kBAAkB,cAAtB,EAAsC;AAClCA,oCAAgB,IAAhB;AACH;AACD,uBAAOA,aAAP;AACH,aAfE;;AAiBHG,uBAAW,mBAASJ,IAAT,EAAe;AACtB,oBAAIK,aAAa,EAAjB;AACA,oBAAIL,IAAJ,EAAU;AACN,wBAAIA,SAAS,cAAb,EAA6B;AACzB,+BAAO,IAAP;AACH;AACD,wBAAI;AACAK,qCAAa,sBAAO,IAAI3E,IAAJ,CAASsE,IAAT,CAAP,EAAuBxV,MAAvB,CAA8B,sBAA9B,CAAb;AACH,qBAFD,CAEE,OAAO0V,OAAP,EAAgB;AACdG,qCAAa,IAAb;AACA,6CAAOF,IAAP,CAAY,8BAA8B1V,KAA1C,EAAiDyV,OAAjD;AACH;AACJ;AACD,uBAAOG,UAAP;AACH,aA/BE;;AAiCHC,+BAAmB,2BAAS5N,WAAT,EAAsB;AACrC,oBAAI6N,uBAAuB,EAA3B;AACA,oBAAI7N,WAAJ,EAAiB;AACb,wBAAI8N,iBAAiB9N,YAAY2K,OAAZ,CAAoB,KAApB,EAA0B,EAA1B,CAArB;AACA,wBAAIoD,OAAOD,eAAetS,MAA1B;;AAEA,wBAAGuS,OAAO,EAAV,EACA;AACID,yCAAiBA,eAAenE,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAjB;AACH;;AAEDkE,2CAAuBC,eAAexI,QAAf,EAAvB;AACA,wBAAIyI,OAAO,CAAP,IAAYA,OAAO,CAAvB,EAA0B;AACtBF,+CAAuB,MAAMA,oBAA7B;AACH,qBAFD,MAEO,IAAIE,OAAO,CAAX,EAAc;AACjBF,+CAAuB,MAAMA,qBAAqBlE,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAN,GAA6C,IAA7C,GAAoDkE,qBAAqBlE,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAA3E;AACH,qBAFM,MAEA;AACHkE,+CAAuB,MAAMA,qBAAqBlE,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAN,GAA6C,IAA7C,GAAoDkE,qBAAqBlE,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAApD,GAA2F,KAA3F,GAAmGkE,qBAAqBlE,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,CAA1H;AACH;AACJ;AACD,uBAAOkE,oBAAP;AACH,aAtDE;;AAwDHG,8BAAkB,0BAAShO,WAAT,EAAsB;AACpC,oBAAIiO,oBAAoB,EAAxB;AACA,oBAAIjO,WAAJ,EAAiB;AACbiO,wCAAoBjO,YAAY2K,OAAZ,CAAoB,KAApB,EAA0B,EAA1B,EAA8BhB,SAA9B,CAAwC,CAAxC,EAA0C,EAA1C,CAApB;AACH;AACD,uBAAOsE,iBAAP;AACH;AA9DE,SAAP;AAgEH;;AAEM,QAAIC,sCAAe,IAAId,oBAAJ,EAAnB;;;;;;;;;;;;;;;QCtEMe,uBAAAA;AAET,gCAAc;AAAA;AACb;;+BAEDC,6CAAiB5F,MAAM6F,UAAUC,SAAS;AACtC,gBAAI7Z,UAAUA,OAAO2Z,gBAArB,EAAuC;AACnC3Z,uBAAO2Z,gBAAP,CAAwB5F,IAAxB,EAA8B6F,QAA9B,EAAwCC,OAAxC;AACH;AACJ;;+BACDC,mDAAoB/F,MAAM6F,UAAUC,SAASE,YAAY;AACrD,gBAAI/Z,UAAUA,OAAO8Z,mBAArB,EAA0C;AACtC9Z,uBAAO8Z,mBAAP,CAA2B/F,IAA3B,EAAiC6F,QAAjC,EAA2CC,OAA3C;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;QCCQG,2BAAAA,2BADZ;AAOG,kCAAYC,aAAZ,EAA2B5E,eAA3B,EAA4C6E,aAA5C,EAA2D/U,YAA3D,EAAyEhC,IAAzE,EAA+E+B,WAA/E,EAA4FiV,WAA5F,EAAyG;AAAA;;AAAA,iBALzGC,EAKyG,GALpG;AACDC,sBAAM,EADL;AAEDC,4BAAY;AAFX,aAKoG;;AACrG,iBAAKL,aAAL,GAAqBA,aAArB;AACA,iBAAK5E,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACH;;mCAEDoX,qBAAKC,gBAAgBC,iBAAiB;AAClC,iBAAKL,EAAL,GAAUI,eAAeJ,EAAzB;AACH;;mCAEDM,qEAA6BC,OAAO;AAChC,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,sDAA7B;AACH;;mCAED+E,yCAAeD,OAAO;AAClB,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACH;;mCAEDgF,yCAAeF,OAAO;AAClB,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC/BQiF,iBAAAA,iBADZ;AAKG,wBAAY7V,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA;;AAAA;;AAC9F,iBAAKlV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;yBAMDY,mCAAa;AAAA;;AACT,gBAAIC,qBAAqB,KAAK7X,IAAL,CAAUkD,EAAV,CAAa,eAAb,EAA8B,EAAC4U,eAAe,IAAhB,EAA9B,CAAzB;;AAEA,iBAAKf,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACKlX,IADL,CACU,oBAAY;AACd,oBAAI,CAAC+G,SAASwQ,YAAd,EAA4B;AACxB,0BAAKpW,MAAL,CAAYqW,eAAZ,CAA4B,QAA5B;AACH;AACJ,aALL,EAMKvW,KANL,CAMW,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,sBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,cAAxB;AACH,aATL;AAUH;;;;gCAjBqB;AAClB,uBAAO,KAAK4E,WAAL,CAAiBU,eAAjB,EAAP;AACH;;;;;;;mBAfkB;;;;;mBACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHZ4V,qBAAAA,qBADZ;AAKG,4BAAYvW,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA;;AAAA;;AAC9F,iBAAKlV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;6BAEDtU,mCAAY8U,OAAOjY,UAAU;AACzBC,yBAAamD,OAAb,CAAqB,UAArB,EAAiCpD,SAAS2C,IAA1C;AACA,iCAAOe,IAAP,CAAY,kBAAZ;AACApG,mBAAO+F,GAAP,CAAW9F,QAAX,CAAoB+F,MAApB;AACH;;;;;;mBAjBkB;;;;;mBACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXbyV,4BAAAA;;;;;;;;;mBACU;;;;;mBACG;;;;;;;;;;;;;;;;;QCJbC,wBAAAA,gBACT,uBAAYzY,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ2Y,uCAAAA,+BACT,sCAAY3Y,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ4Y,0BAAAA,kBACT,yBAAY5Y,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ6Y,2BAAAA,mBACT,0BAAY7Y,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ8Y,wBAAAA,gBACT,uBAAY9Y,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCrCQ+Y,mCAAAA,2BACT,kCAAY/Y,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQgZ,8BAAAA,sBACT,6BAAYhZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQiZ,uCAAAA,+BACT,sCAAYjZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQkZ,uCAAAA,+BACT,sCAAYlZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQmZ,yBAAAA,iBACT,wBAAYnZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQoZ,yBAAAA,iBACT,wBAAYpZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQqZ,yBAAAA,iBACT,wBAAYrZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQsZ,yBAAAA,iBACT,wBAAYtZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQuZ,gCAAAA,wBACT,+BAAYvZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQwZ,yBAAAA,iBACT,wBAAYxZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QC7EQyZ,oBAAAA,YACT,mBAAYzZ,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ0Z,wBAAAA,gBACT,uBAAY1Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQyY,wBAAAA,gBACT,uBAAYzY,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ2Z,kCAAAA,0BACT,iCAAY3Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ4Z,6BAAAA,qBACT,4BAAY5Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;;;;;;;;;;;;;;QCrCQ6Z,6BAAAA,qBACT,4BAAY7Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ8Z,0BAAAA,kBACT,yBAAY9Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQ+Z,4BAAAA,oBACT,2BAAY/Z,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQga,2CAAAA,mCACT,0CAAYha,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQia,6BAAAA,qBACT,4BAAYja,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;QAGQka,6BAAAA,qBACT,4BAAYla,UAAZ,EAAwB;AAAA;;AACpB,YAAIA,UAAJ,EAAgB;AACZsN,mBAAOoL,MAAP,CAAc,IAAd,EAAoB1Y,UAApB;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;QCxCQma,sCAAAA,sCADZ,sCAAe,eAAf;;;;;8CAGGvZ,yBAAOP,OAAO;AACV,mBAAO,uBAAasV,UAAb,CAAwBtV,KAAxB,CAAP;AACH;;8CAED+Z,6BAAS/Z,OAAO;AACZ,mBAAO,uBAAa2V,SAAb,CAAuB3V,KAAvB,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCRQga,0CAAAA,0CADZ,sCAAe,mBAAf;;;;;kDAGGzZ,yBAAOP,OAAO;AACV,mBAAO,2BAAaia,cAAb,CAA4Bja,KAA5B,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCJQka,uCAAAA,uCADZ,sCAAe,gBAAf;;;;;+CAGG3Z,yBAAOP,OAAO;AACV,mBAAO,2BAAa6V,iBAAb,CAA+B7V,KAA/B,CAAP;AACH;;+CAED+Z,6BAAS/Z,OAAO;AACZ,mBAAO,2BAAaiW,gBAAb,CAA8BjW,KAA9B,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXQma,uCAAAA;;;;;+CACT5Z,yBAAOP,OAAO;AACV,gBAAIA,UAAU,GAAd,EAAmB;AACf,uBAAO,cAAP;AACH,aAFD,MAEO;AACH,oBAAIoa,iBAAiB,sBAAOpa,KAAP,EAAcD,MAAd,CAAqB,KAArB,CAArB;AACA,uBAAOqa,eAAexI,SAAf,CAAyBwI,eAAe3W,MAAf,GAAwB,CAAjD,EAAoD2W,eAAe3W,MAAnE,CAAP;AACH;AACJ;;;;;;;;;;;;;;;;;;;;;QCEQ4W,yBAAAA,yBADZ;AAKG,gCAAY1Y,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAFlGyD,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;;AAEA,gBAAI3U,UAAUN,YAAYO,eAAZ,EAAd;AACA,iBAAK2U,EAAL,CAAQC,IAAR,CAAa1O,MAAb,GAAsBnG,UAAUA,QAAQE,QAAlB,GAA6B,IAAnD;AACH;;iCAEDmY,6BAASC,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIC,UAAU;AACVxS,2BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,+BAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,wBAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O;AAHX,aAAd;AAKA,mBAAO,KAAKwO,WAAL,CAAiBzK,OAAjB,CAAyBuO,OAAzB,EACFna,IADE,CACG,oBAAY;AACd,sBAAKsW,EAAL,CAAQC,IAAR,GAAe,gBAAf;AACA,sBAAKD,EAAL,CAAQC,IAAR,CAAazP,QAAb,CAAsBC,QAAtB;AACH,aAJE,EAKF9F,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,sBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;iCAED4d,iDAAmBvD,OAAO;AACtB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,iBAA5B;AACH;;iCAED6C,2CAAgBxD,OAAO;AACnB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,cAA5B;AACH;;iCAED8C,+CAAkBzD,OAAO;AACrB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,gBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;QC9CQ+C,wBAAAA,wBADZ;AAWG,+BAAYC,gBAAZ,EAA8BjJ,eAA9B,EAA+ClQ,YAA/C,EAA6DhC,IAA7D,EAAmE+B,WAAnE,EAAgFiV,WAAhF,EAA6F;AAAA;;AAAA,iBAT7FC,EAS6F,GATxF;AACDmE,4BAAY,EADX;AAEDC,4BAAY,EAFX;AAGDpW,yBAAS,EAHR;AAIDqW,+BAAe,EAJd;AAKDC,kCAAkB,EALjB;AAMDC,mCAAmB;AANlB,aASwF;;AACzF,iBAAKL,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKjJ,eAAL,GAAuBA,eAAvB;AACA,iBAAKlQ,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;gCAED0D,6BAAS1C,WAAW;AAChB,iBAAKf,EAAL,GAAUe,SAAV;AACH;;gCAEDyD,2BAAQjE,OAAO;AACX,iBAAK2D,gBAAL,CAAsBO,EAAtB;AACH;;gCAEDC,yBAAOnE,OAAO;AACV,iBAAK2D,gBAAL,CAAsBQ,MAAtB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCzBQC,yCAAAA,yCADZ;AAQG,gDAAY9Z,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBANrHC,EAMqH,GANhH;AACDC,sBAAM;AACFtO,wCAAoB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AADlB;AADL,aAMgH;;AACjH,iBAAK9G,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;iDAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,CAAQC,IAAR,GAAec,UAAUd,IAAzB;AACA,sBAAK8E,oBAAL;AACAve;AACH,aAJM,CAAP;AAKH;;iDAEDue,uDAAuB;AACnB,iBAAK,IAAItY,IAAI,CAAb,EAAgBA,IAAI,KAAKuT,EAAL,CAAQC,IAAR,CAAatO,kBAAb,CAAgChF,MAApD,EAA4DF,GAA5D,EAAiE;AAC7D,oBAAIuH,oBAAoB,KAAKgM,EAAL,CAAQC,IAAR,CAAatO,kBAAb,CAAgClF,CAAhC,CAAxB;AACA,mDACKuY,MADL,CACY,gBADZ,EAC8BC,QAD9B,GAEKC,EAFL,CAEQlR,iBAFR;AAGH;AACJ;;iDAEDmR,+GAAkD5E,OAAOH,gBAAgB/M,oCAAoC;AACzG,iBAAK2M,EAAL,CAAQC,IAAR,CAAazM,iCAAb,CAA+C4M,eAAepM,iBAA9D,EAAiFX,kCAAjF;AACH;;iDAEDqR,yBAAOnE,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK8U,eAAL,CAAqBQ,OAArB,CAA6B,6CAA7B;AACAjV;AACH,aAHM,CAAP;AAIH;;iDAED4e,qBAAK7E,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,4BAAI2E,2BAA2B,OAAKyN,EAAL,CAAQC,IAAR,CAAalM,2BAAb,EAA/B;AACA,4BAAI8P,UAAU;AACVxS,uCAAW,OAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,2CAAe,OAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,oCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MAHX;AAIVgB,sDAA0BA;AAJhB,yBAAd;AAMA,+BAAKwN,WAAL,CAAiBvK,2BAAjB,CAA6CqO,OAA7C,EACKna,IADL,CACU,oBAAY;AACd,mCAAK8b,oCAAL;AACA,mCAAKza,YAAL,CAAkBiE,OAAlB,CAA0B,wCAA1B;AACA,mCAAKiM,eAAL,CAAqBQ,OAArB,CAA6B,4DAA7B;AACAjV;AACH,yBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,iDAAOzE,KAAP,CAAaib,MAAb;AACA,mCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,sCAAxB;AACAmf,mCAAOlE,MAAP;AACH,yBAXL;AAYH,qBApBD,MAoBO;AACH,4BAAIsE,gBAAgB,IAAIC,KAAJ,CAAU,gBAAV,CAApB;AACA,6CAAOxf,KAAP,CAAauf,aAAb;AACA,+BAAK1a,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACAmf,+BAAOI,aAAP;AACH;AACJ,iBA5BL,EA6BK9a,KA7BL,CA6BW,qBAAa;AAChB,yCAAOzE,KAAP,CAAayf,SAAb;AACAN,2BAAOM,SAAP;AACH,iBAhCL;AAiCH,aAlCM,CAAP;AAmCH;;iDAEDH,qFAAqCxX,SAAS;AAAA;;AAC1C,gBAAI6V,UAAU;AACVxS,2BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,+BAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,wBAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O;AAHX,aAAd;AAKA,mBAAO,KAAKwO,WAAL,CAAiBzK,OAAjB,CAAyBuO,OAAzB,EACFna,IADE,CACG,oBAAY;AACd,qCAAOxD,KAAP,CAAa,kBAAb;AACH,aAHE,EAIFyE,KAJE,CAII,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACH,aAPE,CAAP;AAQH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC/FQ0f,2BAAAA,2BADZ;AAaG,kCAAY/a,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH8F,YAArH,EAAmI;AAAA;;AAAA,iBAXnI7F,EAWmI,GAX9H;AACDC,sBAAM;AACFpO,gCAAY;AADV,iBADL;AAIDiU,4CAA4B,IAJ3B;AAKDlV,8BAAc,EALb;AAMDmV,sCAAsB,IANrB;AAODC,sCAAsB;AAPrB,aAW8H;;AAC/H,iBAAKnb,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAK8F,YAAL,GAAoBA,YAApB;;AAEA,iBAAKI,uBAAL,GAA+B,KAAKC,eAAL,CAAqB/F,IAArB,CAA0B,IAA1B,CAA/B;AACH;;mCAEDsD,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,CAAQC,IAAR,GAAec,UAAUd,IAAzB;AACA,oBAAI,MAAKD,EAAL,CAAQC,IAAR,CAAapO,UAAb,CAAwBlF,MAAxB,GAAiC,CAArC,EAAwC;AACpC,0BAAKqT,EAAL,CAAQgG,oBAAR,GAA+B,KAA/B;AACH,iBAFD,MAEO;AACH,0BAAKhG,EAAL,CAAQ+F,oBAAR,GAA+B,IAA/B;AACH;AACD,sBAAKhB,oBAAL;AACA,sBAAKc,YAAL,CAAkBtG,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK0G,uBAApD,EAA6E,KAA7E;AACAzf;AACH,aAVM,CAAP;AAWH;;mCAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,cADZ,EAC4BC,QAD5B,GACuCkB,KADvC,GAC+CC,WAD/C,4CAEKlB,EAFL,CAEQ,KAAKlF,EAFb;AAGH;;mCAEDqG,mCAAa;AACT,iBAAKR,YAAL,CAAkBnG,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKuG,uBAAvD;AACH;;mCAEDC,2CAAgB3F,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM+F,MAAN,CAAalY,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAImS,MAAM+F,MAAN,CAAalY,EAAb,KAAoB,qBAAxB,EAA+C;AAC3C,4BAAImS,MAAM1W,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK0c,YAAL;AACH;AACJ;AACJ;AACJ;AACJ;;mCAEDC,2CAAgBjG,OAAOkG,aAAa;AAAA;;AAChC,gBAAI7F,qBAAqB,KAAK7X,IAAL,CAAUkD,EAAV,CAAa,kCAAb,EAAiD,EAAC4U,eAAe,IAAhB,EAAjD,CAAzB;AACAD,+BAAmByD,aAAnB,GAAmC;AAC/B,gCAAgBoC,YAAY7V;AADG,aAAnC;AAGA,mBAAO,KAAKkP,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACFlX,IADE,CACG,4BAAoB;AACtB,oBAAI,CAACgd,iBAAiBzF,YAAtB,EAAoC;AAChC,2BAAK0F,wBAAL,CAA8BF,WAA9B;AACH;AACJ,aALE,EAMF9b,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,cAAxB;AACH,aATE,CAAP;AAUH;;mCAEDygB,6DAAyBF,aAAa;AAAA;;AAClC,gBAAI5C,UAAU;AACVtS,wBAAQ,KAAKyO,EAAL,CAAQzO,MADN;AAEVqV,6BAAa,OAFH;AAGVH,6BAAaA,YAAY7V,YAHf;AAIVC,uBAAO4V,YAAY5V,KAJT;AAKVE,0BAAU0V,YAAY1V,QALZ;AAMVC,gCAAgByV,YAAYzV,cANlB;AAOVF,2BAAW;AAPD,aAAd;AASA,mBAAO,KAAKiP,WAAL,CAAiBnK,iBAAjB,CAAmCiO,OAAnC,EACFna,IADE,CACG,oBAAY;AACd,uBAAKsW,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uBAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oBAAIb,SAASzB,OAAb,EAAsB;AAClB,2BAAKjE,YAAL,CAAkBiB,IAAlB,CAAuB,6BAAvB;AACA,2BAAKgU,EAAL,CAAQC,IAAR,CAAapO,UAAb,CAAwBiC,MAAxB,CAA+B,iBAAED,SAAF,CAAY,OAAKmM,EAAL,CAAQC,IAAR,CAAapO,UAAzB,EAAqC4U,WAArC,CAA/B,EAAkF,CAAlF;AACH,iBAHD,MAGO;AACH,yCAAOvgB,KAAP,CAAauK,QAAb;AACA,2BAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH;AACJ,aAXE,EAYFyE,KAZE,CAYI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH,aAfE,CAAP;AAgBH;;mCAED2gB,qDAAqBjW,cAAc;AAC/B,gBAAIkW,MAAM,iBAAEjT,SAAF,CAAY,KAAKmM,EAAL,CAAQC,IAAR,CAAapO,UAAzB,EAAqC,UAAUxF,CAAV,EAAa;AACxD,uBAAOA,EAAEwE,KAAF,KAAYD,YAAnB;AACH,aAFS,CAAV;AAGA,mBAAOkW,MAAM,CAAb;AACH;;mCAEDP,qCAAahG,OAAO;AAAA;;AAChB,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,oBAAI,OAAKwB,oBAAL,CAA0B,OAAK7G,EAAL,CAAQpP,YAAlC,CAAJ,EAAqD;AACjD,2BAAKiU,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,4BAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,gCAAIiW,UAAU;AACVtS,wCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MADX;AAEVwV,gDAAgB,KAFN;AAGVN,6CAAa,OAAKzG,EAAL,CAAQpP,YAHX;AAIVC,uCAAO,OAAKmP,EAAL,CAAQpP,YAJL;AAKVE,2CAAW;AALD,6BAAd;AAOA,mCAAKiP,WAAL,CAAiB7K,aAAjB,CAA+B2O,OAA/B,EACKna,IADL,CACU,oBAAY;AACd,uCAAKsW,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uCAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oCAAIb,SAASuW,eAAT,KAA6B,MAAjC,EAAyC;AACrC,2CAAKC,mBAAL,CAAyBxW,QAAzB;AACH,iCAFD,MAEO;AACH,2CAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH;AACDM;AACH,6BAVL,EAWKmE,KAXL,CAWW,kBAAU;AACb,qDAAOzE,KAAP,CAAaib,MAAb;AACA,uCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,sBAAxB;AACAmf,uCAAOlE,MAAP;AACH,6BAfL;AAgBH,yBAxBD,MAwBO;AACH3a;AACH;AACJ,qBA7BL,EA8BKmE,KA9BL,CA8BW,qBAAa;AAChB,6CAAOzE,KAAP,CAAayf,SAAb;AACAN,+BAAOM,SAAP;AACH,qBAjCL;AAkCH,iBAnCD,MAmCO;AACH,wBAAIuB,sBAAsB,IAAIxB,KAAJ,CAAU,uBAAV,CAA1B;AACA,2BAAK3a,YAAL,CAAkB7E,KAAlB,CAAwBghB,mBAAxB;AACA7B,2BAAO6B,mBAAP;AACH;AACJ,aAzCM,CAAP;AA0CH;;mCAEDD,mDAAoBjZ,SAAS;AAAA;;AACzB,gBAAImZ,uBAAuB;AACvBlH,sBAAM;AACF1O,4BAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MADnB;AAEFF,+BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SAFtB;AAGFC,mCAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O;AAH1B,iBADiB;AAMvB8V,kCAAkB,EANK;AAOvBC,0CAA0B;AAPH,aAA3B;AASAF,iCAAqB9C,aAArB,GAAqC;AACjC,gCAAgB,KAAKrE,EAAL,CAAQpP;AADS,aAArC;AAGA,mBAAO,KAAKkP,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uDAAD,EAAmCC,OAAOmG,oBAA1C,EAAxB,EACFzd,IADE,CACG,4BAAoB;AACtB,oBAAIgd,iBAAiBzF,YAArB,EAAmC;AAC/B,wBAAIyF,iBAAiBY,MAAjB,IAA2BZ,iBAAiBY,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAKxc,YAAL,CAAkBiB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKua,YAAL;AACH,qBAHD,MAGO;AACH,+BAAKxb,YAAL,CAAkBiB,IAAlB,CAAuB,4BAAvB;AACH;AACJ,iBAPD,MAOO;AACH,2BAAKwb,wBAAL,CAA8Bd,iBAAiBY,MAA/C;AACH;AACJ,aAZE,EAaF3c,KAbE,CAaI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkBiB,IAAlB,CAAuB,yBAAvB;AACH,aAhBE,CAAP;AAiBH;;mCAEDwb,6DAAyBxZ,SAAS;AAC9B,gBAAIyY,cAAc,MAAMgB,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAe3Z,QAAQyY,WAAvB,CAAX,CAAxB;AACA,gBAAImB,YAAY;AACZhX,8BAAc6V,WADF;AAEZ5V,uBAAO4V,YAAY3L,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAFK;AAGZhK,2BAAW,KAHC;AAIZC,0BAAU,IAJE;AAKZC,gCAAgB;AALJ,aAAhB;AAOA,iBAAKgP,EAAL,CAAQC,IAAR,CAAapO,UAAb,CAAwBQ,IAAxB,CAA6BuV,SAA7B;;AAEA,iBAAK5H,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyB,IAAzB;AACA,iBAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6B,IAA7B;AACA,iBAAK0O,EAAL,CAAQpP,YAAR,GAAuB,EAAvB;AACA,iBAAKoP,EAAL,CAAQ+F,oBAAR,GAA+B,IAA/B;AACA,iBAAK/F,EAAL,CAAQgG,oBAAR,GAA+B,KAA/B;AACH;;mCAEDA,qDAAqBzF,OAAO;AAAA;;AACxB,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK6Z,EAAL,CAAQgG,oBAAR,GAA+B,IAA/B;AACAxf;AACH,aAHM,CAAP;AAIH;;mCAMDqhB,qBAAKtH,OAAO;AAAA;;AACR,gBAAIK,qBAAqB,KAAK7X,IAAL,CAAUkD,EAAV,CAAa,wCAAb,EAAuD,EAAC4U,eAAe,IAAhB,EAAvD,CAAzB;AACA,mBAAO,KAAKf,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACFlX,IADE,CACG,4BAAoB;AACtB,oBAAI,CAACgd,iBAAiBzF,YAAtB,EAAoC;AAChC,2BAAKhG,eAAL,CAAqBQ,OAArB,CAA6B,6CAAyB,EAACqM,mBAAmB,IAApB,EAAzB,CAA7B;AACH;AACJ,aALE,EAMFnd,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,eAAxB;AACH,aATE,CAAP;AAUH;;mCAEDkf,qBAAK7E,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK8U,eAAL,CAAqBQ,OAArB,CAA6B,8CAA7B;AACAjV;AACH,aAHM,CAAP;AAIH;;;;gCAvB0B;AACvB,uBAAO,KAAKwZ,EAAL,CAAQC,IAAR,CAAa8H,kBAApB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1NQC,2BAAAA,2BADZ;AAaG,kCAAYnd,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH8F,YAArH,EAAmI;AAAA;;AAAA,iBAXnI7F,EAWmI,GAX9H;AACDC,sBAAM;AACFgI,gCAAY;AADV,iBADL;AAIDC,4CAA4B,IAJ3B;AAKD/W,6BAAa,EALZ;AAMDgX,qCAAqB,IANpB;AAODC,sCAAsB;AAPrB,aAW8H;;AAC/H,iBAAKvd,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAK8F,YAAL,GAAoBA,YAApB;;AAEA,iBAAKI,uBAAL,GAA+B,KAAKC,eAAL,CAAqB/F,IAArB,CAA0B,IAA1B,CAA/B;AACH;;mCAEDsD,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,CAAQC,IAAR,GAAec,UAAUd,IAAzB;AACA,oBAAI,MAAKD,EAAL,CAAQC,IAAR,CAAarO,QAAb,CAAsBjF,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,0BAAKqT,EAAL,CAAQoI,oBAAR,GAA+B,KAA/B;AACH,iBAFD,MAEO;AACH,0BAAKpI,EAAL,CAAQmI,mBAAR,GAA8B,IAA9B;AACH;AACD,sBAAKpD,oBAAL;AACA,sBAAKc,YAAL,CAAkBtG,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK0G,uBAApD,EAA6E,KAA7E;AACAzf;AACH,aAVM,CAAP;AAWH;;mCAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,aADZ,EAEKC,QAFL,GAGKoD,SAHL,CAGe,EAHf,EAIKC,SAJL,CAIe,EAJf,EAKKhc,OALL,CAKa,2CALb,EAMK8Z,WANL,2CAOKlB,EAPL,CAOQ,KAAKlF,EAPb;AAQH;;mCAEDqG,mCAAa;AACT,iBAAKR,YAAL,CAAkBnG,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKuG,uBAAvD;AACH;;mCAEDC,2CAAgB3F,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM+F,MAAN,CAAalY,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAImS,MAAM+F,MAAN,CAAalY,EAAb,KAAoB,oBAAxB,EAA8C;AAC1C,4BAAImS,MAAM1W,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK0e,YAAL;AACH;AACJ;AACJ;AACJ;AACJ;;mCAEDC,2CAAgBjI,OAAOkG,aAAa;AAAA;;AAChC,gBAAI7F,qBAAqB,KAAK7X,IAAL,CAAUkD,EAAV,CAAa,kCAAb,EAAiD,EAAC4U,eAAe,IAAhB,EAAjD,CAAzB;AACAD,+BAAmByD,aAAnB,GAAmC;AAC/B,+BAAeoC,YAAYtV;AADI,aAAnC;AAGA,mBAAO,KAAK2O,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACFlX,IADE,CACG,4BAAoB;AACtB,oBAAI,CAACgd,iBAAiBzF,YAAtB,EAAoC;AAChC,2BAAKwH,wBAAL,CAA8BhC,WAA9B;AACH;AACJ,aALE,EAMF9b,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,cAAxB;AACH,aATE,CAAP;AAUH;;mCAEDuiB,6DAAyBhC,aAAa;AAAA;;AAClC,gBAAI5C,UAAU;AACVtS,wBAAQ,KAAKyO,EAAL,CAAQzO,MADN;AAEVqV,6BAAa,OAFH;AAGVH,6BAAaA,YAAYtV,WAHf;AAIVN,uBAAO4V,YAAY5V,KAJT;AAKVE,0BAAU0V,YAAY1V,QALZ;AAMVC,gCAAgByV,YAAYzV,cANlB;AAOVF,2BAAW;AAPD,aAAd;AASA,mBAAO,KAAKiP,WAAL,CAAiBnK,iBAAjB,CAAmCiO,OAAnC,EACFna,IADE,CACG,oBAAY;AACd,uBAAKsW,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uBAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oBAAIb,SAASzB,OAAb,EAAsB;AAClB,2BAAKjE,YAAL,CAAkBiB,IAAlB,CAAuB,6BAAvB;AACA,2BAAKgU,EAAL,CAAQC,IAAR,CAAarO,QAAb,CAAsBkC,MAAtB,CAA6B,iBAAED,SAAF,CAAY,OAAKmM,EAAL,CAAQC,IAAR,CAAarO,QAAzB,EAAmC6U,WAAnC,CAA7B,EAA8E,CAA9E;AACH,iBAHD,MAGO;AACH,yCAAOvgB,KAAP,CAAauK,QAAb;AACA,2BAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH;AACJ,aAXE,EAYFyE,KAZE,CAYI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH,aAfE,CAAP;AAgBH;;mCAEDwiB,mDAAoBvX,aAAa;AAC7B,gBAAI2V,MAAM,iBAAEjT,SAAF,CAAY,KAAKmM,EAAL,CAAQC,IAAR,CAAarO,QAAzB,EAAmC,UAAUvF,CAAV,EAAa;AACtD,uBAAOA,EAAEwE,KAAF,KAAYM,WAAnB;AACH,aAFS,CAAV;AAGA,mBAAO2V,MAAM,CAAb;AACH;;mCAEDyB,qCAAahI,OAAO;AAAA;;AAChB,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,oBAAI,OAAKqD,mBAAL,CAAyB,OAAK1I,EAAL,CAAQ7O,WAAjC,CAAJ,EAAmD;AAC/C,2BAAK0T,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,4BAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,gCAAIiW,UAAU;AACVtS,wCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MADX;AAEVwV,gDAAgB,KAFN;AAGVN,6CAAa,OAAKzG,EAAL,CAAQ7O,WAHX;AAIVN,uCAAO,OAAKmP,EAAL,CAAQ7O,WAJL;AAKVL,2CAAW;AALD,6BAAd;AAOA,mCAAKiP,WAAL,CAAiB7K,aAAjB,CAA+B2O,OAA/B,EACKna,IADL,CACU,oBAAY;AACd,uCAAKsW,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyBZ,SAASY,SAAlC;AACA,uCAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6Bb,SAASa,aAAtC;AACA,oCAAIb,SAASuW,eAAT,KAA6B,MAAjC,EAAyC;AACrC,2CAAK2B,mBAAL,CAAyBlY,QAAzB;AACH,iCAFD,MAEO;AACH,2CAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,2BAAxB;AACH;AACDM;AACH,6BAVL,EAWKmE,KAXL,CAWW,kBAAU;AACb,qDAAOzE,KAAP,CAAaib,MAAb;AACA,uCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,sBAAxB;AACAmf,uCAAOlE,MAAP;AACH,6BAfL;AAgBH,yBAxBD,MAwBO;AACH3a;AACH;AACJ,qBA7BL,EA8BKmE,KA9BL,CA8BW,qBAAa;AAChB,6CAAOzE,KAAP,CAAayf,SAAb;AACAN,+BAAOM,SAAP;AACH,qBAjCL;AAkCH,iBAnCD,MAmCO;AACH,wBAAIiD,sBAAsB,IAAIlD,KAAJ,CAAU,uBAAV,CAA1B;AACA,2BAAK3a,YAAL,CAAkB7E,KAAlB,CAAwB0iB,mBAAxB;AACAvD,2BAAOuD,mBAAP;AACH;AACJ,aAzCM,CAAP;AA0CH;;mCAEDD,mDAAoB3a,SAAS;AAAA;;AACzB,gBAAI6a,uBAAuB;AACvB5I,sBAAM;AACF1O,4BAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MADnB;AAEFF,+BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SAFtB;AAGFC,mCAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O;AAH1B,iBADiB;AAMvB8V,kCAAkB,EANK;AAOvBC,0CAA0B;AAPH,aAA3B;AASAwB,iCAAqBxE,aAArB,GAAqC;AACjC,+BAAe,KAAKrE,EAAL,CAAQ7O;AADU,aAArC;AAGA,mBAAO,KAAK2O,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uDAAD,EAAmCC,OAAO6H,oBAA1C,EAAxB,EACFnf,IADE,CACG,4BAAoB;AACtB,oBAAIgd,iBAAiBzF,YAArB,EAAmC;AAC/B,wBAAIyF,iBAAiBY,MAAjB,IAA2BZ,iBAAiBY,MAAjB,CAAwBC,UAAvD,EAAmE;AAC/D,+BAAKxc,YAAL,CAAkBiB,IAAlB,CAAuB,0BAAvB;AACA,+BAAKuc,YAAL;AACH,qBAHD,MAGO;AACH,+BAAKxd,YAAL,CAAkBiB,IAAlB,CAAuB,4BAAvB;AACH;AACJ,iBAPD,MAOO;AACH,2BAAK8c,wBAAL,CAA8BpC,iBAAiBY,MAA/C;AACH;AACJ,aAZE,EAaF3c,KAbE,CAaI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkBiB,IAAlB,CAAuB,yBAAvB;AACH,aAhBE,CAAP;AAiBH;;mCAED8c,6DAAyB9a,SAAS;AAC9B,gBAAIyY,cAAc,MAAMgB,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAe3Z,QAAQyY,WAAvB,CAAX,CAAxB;AACA,gBAAIsC,YAAY;AACZ5X,6BAAasV,WADD;AAEZ5V,uBAAO4V,YAAY3L,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAFK;AAGZhK,2BAAW,KAHC;AAIZC,0BAAU,IAJE;AAKZC,gCAAgB;AALJ,aAAhB;AAOA,iBAAKgP,EAAL,CAAQC,IAAR,CAAarO,QAAb,CAAsBS,IAAtB,CAA2B0W,SAA3B;;AAEA,iBAAK/I,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyB,IAAzB;AACA,iBAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6B,IAA7B;AACA,iBAAK0O,EAAL,CAAQ7O,WAAR,GAAsB,EAAtB;AACA,iBAAK6O,EAAL,CAAQmI,mBAAR,GAA8B,IAA9B;AACA,iBAAKnI,EAAL,CAAQoI,oBAAR,GAA+B,KAA/B;AACH;;mCAEDA,qDAAqB7H,OAAO;AAAA;;AACxB,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK6Z,EAAL,CAAQoI,oBAAR,GAA+B,IAA/B;AACA5hB;AACH,aAHM,CAAP;AAIH;;mCAMDqhB,qBAAKtH,OAAO;AAAA;;AACR,gBAAIK,qBAAqB,KAAK7X,IAAL,CAAUkD,EAAV,CAAa,wCAAb,EAAuD,EAAC4U,eAAe,IAAhB,EAAvD,CAAzB;AACA,mBAAO,KAAKf,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACFlX,IADE,CACG,4BAAoB;AACtB,oBAAI,CAACgd,iBAAiBzF,YAAtB,EAAoC;AAChC,2BAAKhG,eAAL,CAAqBQ,OAArB,CAA6B,IAAIuN,oBAAJ,CAAyB,EAACC,mBAAmB,IAApB,EAAzB,CAA7B;AACH;AACJ,aALE,EAMFte,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,uBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,eAAxB;AACH,aATE,CAAP;AAUH;;mCAEDkf,qBAAK7E,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK8U,eAAL,CAAqBQ,OAArB,CAA6B,IAAIuN,oBAAJ,EAA7B;AACAxiB;AACH,aAHM,CAAP;AAIH;;;;gCAvB0B;AACvB,uBAAO,KAAKwZ,EAAL,CAAQC,IAAR,CAAaiJ,kBAApB;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC9NQC,+BAAAA,+BADZ;AAQG,sCAAYte,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBANrHC,EAMqH,GANhH,EAMgH;AAAA,iBALrHoJ,mBAKqH,GAL/F,cAAUna,UAAV,CAAqBI,oCAArB,IAA6D,CAKkC;AAAA,iBAJrHga,iBAIqH,GAJjG,4BAIiG;AAAA,iBAHrHC,oBAGqH,GAH9F,+BAG8F;AAAA,iBAFrH9F,WAEqH,GAFvG,EAEuG;;AACjH,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;;AAEA,iBAAKwJ,KAAL,GAAa,yBAAe,KAAKtO,eAApB,CAAb;AACH;;uCAED8J,uDAAuB;AACnB,+CACKC,MADL,CACY,0BADZ,EACwCwE,MADxC,CAC+C,IAD/C,EAEKtE,EAFL,CAEQ,KAAKlF,EAFb;AAGH;;uCAEDyD,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,sBAAKgE,oBAAL;AACA,sBAAK/E,EAAL,CAAQyJ,aAAR,GAAwB,MAAKL,mBAA7B;AACA,sBAAKG,KAAL,CAAW9e,KAAX,CAAiB,MAAK2e,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;AACA9iB;AACH,aANM,CAAP;AAOH;;uCAEDqF,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKL,iBAApC,EAAuD;AAAA,uBAAa,OAAKM,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKpG,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKJ,oBAApC,EAA0D;AAAA,uBAAa,OAAKO,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;uCAEDE,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;uCAED5D,mCAAa;AACT,iBAAKkD,KAAL,CAAW/N,IAAX;AACH;;uCAEDmO,6CAAiBC,WAAW;AACxB,iBAAK5J,EAAL,CAAQyJ,aAAR,GAAwBG,SAAxB;AACH;;uCAEDC,mDAAoBD,WAAW;AAC3B,iBAAK5J,EAAL,CAAQkK,iBAAR,GAA4B,IAA5B;AACH;;uCAED9E,qBAAK7E,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,+BAAKqN,eAAL,CAAqBQ,OAArB,CAA6B,6CAA7B;AACH;AACDjV;AACH,iBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,yCAAOzE,KAAP,CAAaib,MAAb;AACAkE,2BAAOlE,MAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;;;;;QChFQgJ,0BAAAA,0BADZ;AAIG,iCAAYtf,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAFlGC,EAEkG,GAF7F,EAE6F;;AAC9F,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;kCAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACAva;AACH,aAHM,CAAP;AAIH;;kCAED8Z,qEAA6BC,OAAO;AAChC,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,sDAA7B;AACH;;kCAED+E,yCAAeD,OAAO;AAClB,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACH;;kCAEDgF,yCAAeF,OAAO;AAClB,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC9BQ2O,2BAAAA,2BADZ;AAIG,kCAAYvf,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBAFrHC,EAEqH,GAFhH,EAEgH;;AACjH,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;mCAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,CAAQC,IAAR,GAAec,UAAUd,IAAzB;AACAzZ;AACH,aAHM,CAAP;AAIH;;mCAED6jB,iFAAmC9J,OAAO;AACtC,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,iCAA5B;AACH;;mCAEDoJ,qDAAqB/J,OAAO;AACxB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,kBAA5B;AACH;;mCAEDqJ,qDAAqBhK,OAAO;AACxB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,kBAA5B;AACH;;mCAEDsJ,qBAAKjK,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,oBAAI,OAAKrF,EAAL,CAAQyK,gCAAR,IACA,OAAKzK,EAAL,CAAQC,IAAR,CAAayK,gBADb,IAEA,OAAK1K,EAAL,CAAQC,IAAR,CAAa8H,kBAFjB,EAEqC;AACjC,2BAAK9M,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACAjV;AACH,iBALD,MAKO;AACH,wBAAIoa,qBAAqB;AACrB,sCAAc,0CADO;AAErB,sCAAc,0CAFO;AAGrB,mCAAW,sCAHU;AAIrB,6CAAqB,kDAJA;AAKrB,4CAAoB,iDALC;AAMrB,8CAAsB,mDAND;AAOrB,6CAAqB;AAPA,qBAAzB;AASA,2BAAKd,aAAL,CAAmBgB,IAAnB,CAAwB,EAACC,uCAAD,EAA2BC,OAAOJ,kBAAlC,EAAxB,EACKlX,IADL,CACU,4BAAoB;AACtB,4BAAI,CAACgd,iBAAiBzF,YAAtB,EAAoC;AAChC,mCAAKhG,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACAjV;AACH,yBAHD,MAGO;AACH6e,mCAAO,IAAIK,KAAJ,CAAU,kBAAV,CAAP;AACH;AACJ,qBARL,EASK/a,KATL,CASW,kBAAU;AACb,6CAAOzE,KAAP,CAAaib,MAAb;AACA,+BAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,eAAxB;AACAmf,+BAAOlE,MAAP;AACH,qBAbL;AAeH;AACJ,aAhCM,CAAP;AAiCH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC1DQwJ,qBAAAA,qBADZ;AAYG,4BAAY9f,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAVlGC,EAUkG,GAV7F;AACDC,sBAAM,EADL;AAEDC,4BAAY,KAFX;AAGD0K,0CAA0B,KAHzB;AAIDnB,+BAAe,CAJd;AAKDS,mCAAmB;AALlB,aAU6F;AAAA,iBAFlG1G,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;;AAEA,gBAAI3U,UAAUN,YAAYO,eAAZ,EAAd;AACA,iBAAK2U,EAAL,CAAQC,IAAR,CAAa1O,MAAb,GAAsBnG,UAAUA,QAAQE,QAAlB,GAA6B,IAAnD;AACH;;6BAEDmY,6BAASC,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIC,UAAU;AACVxS,2BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,+BAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,wBAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O;AAHX,aAAd;AAKA,mBAAO,KAAKwO,WAAL,CAAiBzK,OAAjB,CAAyBuO,OAAzB,EACFna,IADE,CACG,oBAAY;AACd,sBAAKsW,EAAL,CAAQC,IAAR,GAAe,gBAAf;AACA,sBAAKD,EAAL,CAAQC,IAAR,CAAazP,QAAb,CAAsBC,QAAtB;AACA,sBAAKoa,qBAAL,CAA2Bpa,QAA3B;AACH,aALE,EAMF9F,KANE,CAMI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,sBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACH,aATE,CAAP;AAUH;;6BAED2F,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,+CAAyD;AAAA,uBAAW,OAAKoB,0BAAL,CAAgC9c,OAAhC,CAAX;AAAA,aAAzD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,0CAAoD;AAAA,uBAAW,OAAKmB,qBAAL,CAA2B7c,OAA3B,CAAX;AAAA,aAApD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,mDAA6D;AAAA,uBAAW,OAAKqB,oCAAL,CAA0C/c,OAA1C,CAAX;AAAA,aAA7D,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,mDAA6D;AAAA,uBAAW,OAAKsB,oCAAL,CAA0Chd,OAA1C,CAAX;AAAA,aAA7D,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAA+C;AAAA,uBAAW,OAAKuB,sBAAL,CAA4Bjd,OAA5B,CAAX;AAAA,aAA/C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAA+C;AAAA,uBAAW,OAAKwB,sBAAL,CAA4Bld,OAA5B,CAAX;AAAA,aAA/C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAA+C;AAAA,uBAAW,OAAKyB,sBAAL,CAA4Bnd,OAA5B,CAAX;AAAA,aAA/C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAA+C;AAAA,uBAAW,OAAK0B,sBAAL,CAA4Bpd,OAA5B,CAAX;AAAA,aAA/C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,4CAAsD;AAAA,uBAAW,OAAK2B,uBAAL,CAA6Brd,OAA7B,CAAX;AAAA,aAAtD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAA+C;AAAA,uBAAW,OAAK4B,gBAAL,CAAsBtd,OAAtB,CAAX;AAAA,aAA/C,CADJ;AAGH;;6BAED8b,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;6BAEDa,iEAA2B9c,SAAS;AAChC,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,KAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAexT,UAAxC;AACA,iBAAKyT,mBAAL,GAA2B,yBAA3B;AACH;;6BAEDX,uDAAsB7c,SAAS;AAC3B,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,KAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAevT,KAAxC;AACA,iBAAKwT,mBAAL,GAA2B,oBAA3B;AACH;;6BAEDT,qFAAqC/c,SAAS;AAC1C,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,IAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAetT,SAAxC;AACA,iBAAKuT,mBAAL,GAA2B,qCAA3B;AACH;;6BAEDR,qFAAqChd,SAAS;AAC1C,iBAAKgS,EAAL,CAAQyK,gCAAR,GAA2C,KAAKzK,EAAL,CAAQC,IAAR,CAAawK,gCAAxD;AACA,iBAAKQ,sBAAL;AACH;;6BAEDA,yDAAuBjd,SAAS;AAC5B,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,IAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAerT,KAAxC;AACA,iBAAKsT,mBAAL,GAA2B,sBAA3B;AACH;;6BAEDN,yDAAuBld,SAAS;AAC5B,gBAAI,KAAKgS,EAAL,CAAQC,IAAR,CAAayK,gBAAjB,EAAmC;AAC/B,qBAAK1K,EAAL,CAAQkJ,kBAAR,GAA6B,IAA7B;AACA,qBAAKlJ,EAAL,CAAQiJ,iBAAR,GAA4B,KAA5B;AACH,aAHD,MAIK;AACD,oBAAIjb,WAAWA,QAAQib,iBAAvB,EAA0C;AACtC,yBAAKjJ,EAAL,CAAQkJ,kBAAR,GAA6B,KAA7B;AACA,yBAAKlJ,EAAL,CAAQiJ,iBAAR,GAA4B,IAA5B;AACH;AACJ;AACD,iBAAKkC,sBAAL;AACH;;6BAEDA,yDAAuBnd,SAAS;AAC5B,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,IAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAepT,KAAxC;AACA,iBAAKqT,mBAAL,GAA2B,sBAA3B;AACH;;6BAEDJ,yDAAuBpd,SAAS;AAC5B,gBAAI,KAAKgS,EAAL,CAAQC,IAAR,CAAa8H,kBAAjB,EAAqC;AACjC,qBAAK/H,EAAL,CAAQ+H,kBAAR,GAA6B,IAA7B;AACA,qBAAK/H,EAAL,CAAQ8H,iBAAR,GAA4B,KAA5B;AACH,aAHD,MAIK;AACD,oBAAI9Z,WAAWA,QAAQ8Z,iBAAvB,EAA0C;AACtC,yBAAK9H,EAAL,CAAQ+H,kBAAR,GAA6B,KAA7B;AACA,yBAAK/H,EAAL,CAAQ8H,iBAAR,GAA4B,IAA5B;AACH;AACJ;AACD,iBAAKuD,uBAAL;AACH;;6BAEDA,2DAAwBrd,SAAS;AAC7B,iBAAKgS,EAAL,CAAQE,UAAR,GAAqB,KAArB;AACA,iBAAKF,EAAL,CAAQuL,cAAR,GAAyB,6BAAenT,OAAxC;AACA,iBAAKoT,mBAAL,GAA2B,qBAA3B;AACH;;6BAEDF,6CAAiBtd,SAAS;AACtB,iBAAKnD,MAAL,CAAYqW,eAAZ,CAA4B,cAA5B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QClKQuK,0CAAAA,0CADZ;AAIG,iDAAY5gB,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBAFrHC,EAEqH,GAFhH,EAEgH;;AACjH,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKhF,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;kDAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,sBAAKrF,EAAL,GAAUe,SAAV;AACA,oBAAI8C,UAAU;AACVtS,4BAAQ,MAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MADX;AAEVwV,oCAAgB,WAFN;AAGV9U,+BAAW,MAAK+N,EAAL,CAAQ/N;AAHT,iBAAd;AAKA,sBAAK8N,WAAL,CAAiB7K,aAAjB,CAA+B2O,OAA/B,EACKna,IADL,CACU,oBAAY;AACd,wBAAI+G,SAASuW,eAAT,KAA6B,MAAjC,EAAyC;AACrC,8BAAKhH,EAAL,CAAQC,IAAR,CAAazP,QAAb,CAAsBC,QAAtB;AACA,8BAAKsU,oBAAL;AACH,qBAHD,MAGO;AACH,8BAAKha,YAAL,CAAkB7E,KAAlB,CAAwB,sBAAxB;AACH;AACDM;AACH,iBATL,EAUKmE,KAVL,CAUW,kBAAU;AACb,yCAAOzE,KAAP,CAAaib,MAAb;AACA,0BAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,sBAAxB;AACAmf,2BAAOlE,MAAP;AACH,iBAdL;AAeH,aAtBM,CAAP;AAuBH;;kDAED4D,uDAAuB;AACnB,iBAAK,IAAItY,IAAI,CAAb,EAAgBA,IAAI,KAAKuT,EAAL,CAAQC,IAAR,CAAatO,kBAAb,CAAgChF,MAApD,EAA4DF,GAA5D,EAAiE;AAC7D,oBAAIuH,oBAAoB,KAAKgM,EAAL,CAAQC,IAAR,CAAatO,kBAAb,CAAgClF,CAAhC,CAAxB;AACA,mDACKuY,MADL,CACY,gBADZ,EAC8BC,QAD9B,GAEKC,EAFL,CAEQlR,iBAFR;AAGH;AACJ;;kDAEDmR,+GAAkD5E,OAAOH,gBAAgB/M,oCAAoC;AACzG,iBAAK2M,EAAL,CAAQC,IAAR,CAAazM,iCAAb,CAA+C4M,eAAepM,iBAA9D,EAAiFX,kCAAjF;AACH;;kDAEDqR,yBAAOnE,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK8U,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACAjV;AACH,aAHM,CAAP;AAIH;;kDAEDklB,6CAAkB;AACd,gBAAIC,cAAc,EAAlB;AACA,iCAA8B,KAAK3L,EAAL,CAAQC,IAAR,CAAatO,kBAA3C,kHAA+D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAAtDqC,iBAAsD;;AAC3D,oBAAIA,kBAAkBzD,cAAlB,KAAqC,IAArC,IAA6CyD,kBAAkBzD,cAAlB,CAAiC5D,MAAjC,IAA2C,CAA5F,EAA+F;AAC3Fgf,kCAAcA,cAAc3X,kBAAkBX,kCAAlB,CAAqDhD,mBAAnE,GAAyF,GAAzF,GAA+F2D,kBAAkBzD,cAAjH,GAAkI,GAAhJ;AACH;AACJ;AACDob,0BAAc,iBAAEC,OAAF,CAAUD,WAAV,EAAuB,GAAvB,CAAd;AACA,mBAAOA,WAAP;AACH;;kDAEDvG,uBAAO;AAAA;;AACH,mBAAO,IAAIjf,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,4BAAI+d,cAAc,OAAKD,eAAL,EAAlB;AACA,4BAAI7H,UAAU;AACVxS,uCAAW,OAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,2CAAe,OAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,oCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MAHX;AAIVU,uCAAW,OAAK+N,EAAL,CAAQC,IAAR,CAAahO,SAJd;AAKV8U,4CAAgB,WALN;AAMV4E,yCAAaA,WANH;AAOVE,wCAAY,OAAK7L,EAAL,CAAQ6L;AAPV,yBAAd;AASA,+BAAK9L,WAAL,CAAiB3K,gBAAjB,CAAkCyO,OAAlC,EACKna,IADL,CACU,oBAAY;AACd,gCAAI+G,SAASsB,cAAT,KAA4B,MAAhC,EAAwC;AACpC,uCAAK+Z,kBAAL,CAAwBrb,QAAxB;AACH,6BAFD,MAEO;AACH,uCAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,iBAAxB;AACA,uCAAK6lB,eAAL,CAAqBtb,QAArB;AACH;AACDjK;AACH,yBATL,EAUKmE,KAVL,CAUW,kBAAU;AACb,iDAAOzE,KAAP,CAAaib,MAAb;AACA,mCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,iBAAxB;AACAmf,mCAAOlE,MAAP;AACH,yBAdL;AAeH,qBA1BD,MA0BO;AACH3a;AACH;AACJ,iBA/BL,EAgCKmE,KAhCL,CAgCW,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa8lB,cAAb;AACA,2BAAKjhB,YAAL,CAAkB7E,KAAlB,CAAwB,iBAAxB;AACAmf,2BAAO2G,cAAP;AACH,iBApCL;AAqCH,aAtCM,CAAP;AAwCH;;kDAEDF,iDAAmB9d,SAAS;AACxB,iBAAKiN,eAAL,CAAqBQ,OAArB,CAA6B,wCAAqBzN,OAArB,CAA7B;AACH;;kDAED+d,2CAAgB/d,SAAS;AACrB,iBAAKiN,eAAL,CAAqBQ,OAArB,CAA6B,qCAAkBzN,OAAlB,CAA7B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrHQie,mCAAAA,mCADZ;AAMG,0CAAYphB,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAJlGC,EAIkG,GAJ7F,EAI6F;AAAA,iBAFlGwD,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;2CAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,oBAAI,MAAKf,EAAL,CAAQkM,sBAAR,KAAmC,qBAAvC,EAA8D;AAC1D,0BAAKC,iCAAL,GAAyC,sCAAzC;AACH,iBAFD,MAEO,IAAI,MAAKnM,EAAL,CAAQkM,sBAAR,KAAmC,YAAvC,EAAqD;AACxD,0BAAKC,iCAAL,GAAyC,6BAAzC;AACH,iBAFM,MAEA,IAAI,MAAKnM,EAAL,CAAQkM,sBAAR,KAAmC,YAAvC,EAAqD;AACxD,0BAAKC,iCAAL,GAAyC,6BAAzC;AACH,iBAFM,MAEA,IAAI,MAAKnM,EAAL,CAAQkM,sBAAR,KAAmC,WAAvC,EAAoD;AACvD,0BAAKC,iCAAL,GAAyC,4BAAzC;AACH,iBAFM,MAEA;AACH,0BAAKlR,eAAL,CAAqBQ,OAArB,CAA6B,sCAA7B;AACH;AACDjV;AACH,aAdM,CAAP;AAeH;;2CAEDqF,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,qCAAgD;AAAA,uBAAW,OAAK0C,iBAAL,CAAuBpe,OAAvB,CAAX;AAAA,aAAhD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,sCAAiD;AAAA,uBAAW,OAAKoC,kBAAL,CAAwB9d,OAAxB,CAAX;AAAA,aAAjD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,mCAA8C;AAAA,uBAAW,OAAKqC,eAAL,CAAqB/d,OAArB,CAAX;AAAA,aAA9C,CADJ;AAGH;;2CAED8b,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;2CAEDmC,iDAAoB;AAChB,iBAAKnR,eAAL,CAAqBQ,OAArB,CAA6B,8BAA7B;AACH;;2CAEDqQ,iDAAmB9d,SAAS;AACxB,iBAAKiN,eAAL,CAAqBQ,OAArB,CAA6B,2CAA4BzN,OAA5B,CAA7B;AACH;;2CAED+d,2CAAgB/d,SAAS;AACrB,iBAAKgS,EAAL,CAAQC,IAAR,CAAa5O,SAAb,GAAyB,EAAzB;AACA,iBAAK2O,EAAL,CAAQC,IAAR,CAAa3O,aAAb,GAA6B,EAA7B;AACH;;;;;;;;;;;;;;;;;;;;;QCrEQuG,oBAAAA,oBADZ;AAIG,2BAAYhN,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBAFrHC,EAEqH,GAFhH,EAEgH;;AACjH,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBwH,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAKxM,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;4BAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,sBAAKf,EAAL,CAAQuM,iBAAR,GAA4B,CAAC,KAAD,EAAQ,IAAR,CAA5B;AACA,sBAAKxH,oBAAL;AACAve;AACH,aALM,CAAP;AAMH;;4BAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,wBADZ,EACsCC,QADtC,GAEKC,EAFL,CAEQ,KAAKlF,EAFb;AAGH;;4BAED0E,yBAAOnE,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,mBAAW;AAC1B,uBAAK8U,eAAL,CAAqBQ,OAArB,CAA6B,wCAA7B;AACAjV;AACH,aAHM,CAAP;AAIH;;4BAED4e,qBAAK7E,OAAO;AAAA;;AACR,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,kBAAU;AACZ,wBAAIyD,OAAOS,KAAX,EAAkB;AACd,+BAAKqN,eAAL,CAAqBQ,OAArB,CAA6B,qDAA7B;AACH;AACDjV;AACH,iBANL,EAOKmE,KAPL,CAOW,kBAAU;AACb,yCAAOzE,KAAP,CAAaib,MAAb;AACAkE,2BAAOlE,MAAP;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;;;;;QCvDQxJ,eAAAA,eADZ;AAIG,sBAAY9M,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH;AAAA;;AAAA,iBAFrHC,EAEqH,GAFhH,EAEgH;;AACjH,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBwH,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAKxM,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;uBAED0D,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACAva;AACH,aAHM,CAAP;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCVQgmB,gBAAAA,gBADZ;AAWG,uBAAY3hB,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBATlGC,EASkG,GAT7F;AACDC,sBAAM,EADL;AAEDwM,gCAAgB,IAFf;AAGDC,qCAAqB,KAHpB;AAIDR,wCAAwB;AAJvB,aAS6F;AAAA,iBAFlG1I,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;;AAEA,iBAAK4M,cAAL,GAAsB,uBAAtB;AACH;;wBAED9gB,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,2BAA0C;AAAA,uBAAW,MAAKkD,WAAL,CAAiB5e,OAAjB,CAAX;AAAA,aAA1C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,+BAA8C;AAAA,uBAAW,MAAKmD,eAAL,CAAqB7e,OAArB,CAAX;AAAA,aAA9C,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,yCAAwD;AAAA,uBAAW,MAAKoD,yBAAL,CAA+B9e,OAA/B,CAAX;AAAA,aAAxD,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,kDAA6D;AAAA,uBAAW,MAAKqD,8BAAL,CAAoC/e,OAApC,CAAX;AAAA,aAA7D,CADJ;AAGA,iBAAKwV,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,oCAAmD;AAAA,uBAAW,MAAKsD,oBAAL,CAA0Bhf,OAA1B,CAAX;AAAA,aAAnD,CADJ;AAGH;;wBAED8b,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wBAED2C,mCAAY5e,SAAS;AACjB,iBAAKnD,MAAL,CAAYqW,eAAZ,CAA4B,QAA5B;AACH;;wBAED2L,2CAAgB7e,SAAS;AACrB,gBAAIA,WAAWA,QAAQ+D,cAAR,KAA2B,WAAtC,IAAqD/D,QAAQif,UAAR,KAAuB,UAAhF,EAA4F;AACxF,qBAAKjN,EAAL,CAAQC,IAAR,GAAe,eAASjS,OAAT,CAAf;AACA,qBAAK2e,cAAL,GAAsB,aAAtB;AACH,aAHD,MAGO,IAAI3e,QAAQ+D,cAAR,KAA2B,SAA3B,IAAwC/D,QAAQif,UAAR,KAAuB,UAAnE,EAA+E;AAClF,qBAAKH,yBAAL,CAA+B9e,OAA/B;AACH,aAFM,MAEA,IAAIA,QAAQ+D,cAAR,KAA2B,SAA/B,EAA0C;AAC7C,qBAAKlH,MAAL,CAAYqW,eAAZ,CAA4B,YAA5B;AACH,aAFM,MAEA;AACH,qBAAKyL,cAAL,GAAsB,QAAtB;AACH;AACJ;;wBAEDI,2EAAiC;AAC7B,iBAAKJ,cAAL,GAAsB,8BAAtB;AACH;;wBAEDG,+DAA0B9e,SAAS;AAC/B,iBAAKlD,WAAL,CAAiBoiB,iBAAjB,CAAmC,EAACC,OAAOnf,QAAQiE,SAAhB,EAAnC;AACA,iBAAKpH,MAAL,CAAYqW,eAAZ,CAA4B,cAA5B;AACH;;wBAED8L,qDAAqBhf,SAAS;AAC1B,iBAAKnD,MAAL,CAAYqW,eAAZ,CAA4B,iBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;QCjFQkM,6BAAAA,6BADZ;AAKG,oCAAYviB,MAAZ,EAAoBoQ,eAApB,EAAqC2J,iBAArC,EAAwD9E,aAAxD,EAAuE/U,YAAvE,EAAqFhC,IAArF,EAA2F+B,WAA3F,EAAwGiV,WAAxG,EAAqH8F,YAArH,EAAmI;AAAA;;AAAA,iBAHnI7F,EAGmI,GAH9H,EAG8H;;AAC/H,iBAAKnV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAKD,UAAL,CAAgBwH,eAAhB,GAAkC,mCAAgBC,MAAlD;AACA,iBAAKxM,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAK8F,YAAL,GAAoBA,YAApB;;AAEA,iBAAKI,uBAAL,GAA+B,KAAKC,eAAL,CAAqB/F,IAArB,CAA0B,IAA1B,CAA/B;AACH;;qCAEDsD,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,sBAAKgE,oBAAL;AACA,sBAAK/E,EAAL,CAAQyM,cAAR,GAAyB,IAAzB;AACA,sBAAK5G,YAAL,CAAkBtG,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK0G,uBAApD,EAA6E,KAA7E;AACAzf;AACH,aANM,CAAP;AAOH;;qCAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,QADZ,EACsBC,QADtB,GACiCoD,SADjC,CAC2C,CAD3C,EAC8CC,SAD9C,CACwD,GADxD,EAEKtD,MAFL,CAEY,aAFZ,EAE2BC,QAF3B,GAEsCoD,SAFtC,CAEgD,CAFhD,EAEmDC,SAFnD,CAE6D,GAF7D,EAGKpD,EAHL,CAGQ,KAAKlF,EAAL,CAAQC,IAHhB;AAIH;;qCAEDoG,mCAAa;AACT,iBAAKR,YAAL,CAAkBnG,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKuG,uBAAvD;AACH;;qCAEDC,2CAAgB3F,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM+F,MAAN,CAAalY,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAImS,MAAM+F,MAAN,CAAalY,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAImS,MAAM1W,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK6K,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;qCAEDA,yBAAO6L,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,4BAAIiW,UAAU;AACVxS,uCAAW,OAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,2CAAe,OAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,oCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MAHX;AAIVoa,yCAAa,OAAK3L,EAAL,CAAQC,IAAR,CAAa0L;AAJhB,yBAAd;AAMA,+BAAK5L,WAAL,CAAiBrL,MAAjB,CAAwBmP,OAAxB,EACKna,IADL,CACU,oBAAY;AACd,mCAAKuR,eAAL,CAAqBQ,OAArB,CAA6B,iCAAkBhL,QAAlB,CAA7B;AACAjK;AACH,yBAJL,EAKKmE,KALL,CAKW,kBAAU;AACb,iDAAOzE,KAAP,CAAaib,MAAb;AACAkE,mCAAOlE,MAAP;AACH,yBARL;AASH,qBAhBD,MAgBO;AACH3a;AACH;AACJ,iBArBL,EAsBCmE,KAtBD,CAsBO,0BAAkB;AACrB,yCAAOzE,KAAP,CAAa8lB,cAAb;AACA3G,2BAAO2G,cAAP;AACH,iBAzBD;AA0BH,aA3BM,CAAP;AA4BH;;qCAEDqB,iDAAmB9M,OAAO;AACtB,iBAAKtF,eAAL,CAAqBQ,OAArB,CAA6B,uCAA7B;AACH;;;;;;;;;;;;;;;;;;;;;QC3FQ6R,iBAAAA,iBADZ;AAGG,wBAAYziB,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAC9F,iBAAKlV,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAKjV,WAAL,GAAmBA,WAAnB;AACH;;yBAED2Y,+BAAW;AACP,mBAAO,KAAK3Y,WAAL,CAAiByiB,MAAjB,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;QCdQC,sBAAAA,sBADZ;AAKG,6BAAY3iB,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAHlGC,EAGkG,GAH7F,EAG6F;AAAA,iBAFlGwD,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACH;;8BAED0D,6BAASC,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIxY,UAAU,KAAKN,WAAL,CAAiBO,eAAjB,EAAd;AACA,gBAAIkG,SAASnG,UAAUA,QAAQE,QAAlB,GAA6B,IAA1C;AACA,gBAAIuY,UAAU;AACVtS,wBAAQA;AADE,aAAd;AAGA,mBAAO,KAAKwO,WAAL,CAAiBzK,OAAjB,CAAyBuO,OAAzB,EACFna,IADE,CACG,oBAAY;AACd,sBAAKsW,EAAL,CAAQC,IAAR,GAAe,eAASxP,QAAT,CAAf;AACH,aAHE,EAIF9F,KAJE,CAII,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,sBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACH,aAPE,CAAP;AAQH;;8BAED4d,iDAAmBvD,OAAO;AACtB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,iBAA5B;AACH;;8BAED6C,2CAAgBxD,OAAO;AACnB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,cAA5B;AACH;;8BAED8C,+CAAkBzD,OAAO;AACrB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,gBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;QCxCQuM,wBAAAA,wBADZ;AAKG,+BAAY5iB,MAAZ,EAAoBoQ,eAApB,EAAqC6E,aAArC,EAAoD/U,YAApD,EAAkEhC,IAAlE,EAAwE+B,WAAxE,EAAqFiV,WAArF,EAAkG;AAAA;;AAAA,iBAFlGyD,WAEkG,GAFpF,EAEoF;;AAC9F,iBAAK3Y,MAAL,GAAcA,MAAd;AACA,iBAAKoQ,eAAL,GAAuBA,eAAvB;AACA,iBAAK6E,aAAL,GAAqBA,aAArB;AACA,iBAAK/U,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;;AAEA,gBAAI3U,UAAUN,YAAYO,eAAZ,EAAd;AACA,iBAAK2U,EAAL,CAAQC,IAAR,CAAa1O,MAAb,GAAsBnG,UAAUA,QAAQE,QAAlB,GAA6B,IAAnD;AACH;;gCAEDmY,6BAASC,QAAQC,aAAaC,uBAAuB;AAAA;;AACjD,gBAAIC,UAAU;AACVxS,2BAAW,KAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,+BAAe,KAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,wBAAQ,KAAKyO,EAAL,CAAQC,IAAR,CAAa1O;AAHX,aAAd;AAKA,mBAAO,KAAKwO,WAAL,CAAiBzK,OAAjB,CAAyBuO,OAAzB,EACFna,IADE,CACG,oBAAY;AACd,sBAAKsW,EAAL,CAAQC,IAAR,GAAe,gBAAf;AACA,sBAAKD,EAAL,CAAQC,IAAR,CAAazP,QAAb,CAAsBC,QAAtB;AACH,aAJE,EAKF9F,KALE,CAKI,kBAAU;AACb,qCAAOzE,KAAP,CAAaib,MAAb;AACA,sBAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,gBAAxB;AACH,aARE,CAAP;AASH;;gCAED4d,iDAAmBvD,OAAO;AACtB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,iBAA5B;AACH;;gCAED6C,2CAAgBxD,OAAO;AACnB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,cAA5B;AACH;;gCAED8C,+CAAkBzD,OAAO;AACrB,iBAAK1V,MAAL,CAAYqW,eAAZ,CAA4B,gBAA5B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCzCQwM,gCAAAA,gCADZ;AASG,uCAAYxJ,gBAAZ,EAA8BjJ,eAA9B,EAA+C2J,iBAA/C,EAAkE7Z,YAAlE,EAAgFhC,IAAhF,EAAsF+B,WAAtF,EAAmGiV,WAAnG,EAAgH8F,YAAhH,EAA8H;AAAA;;AAAA,iBAL9HuD,mBAK8H,GALxG,cAAUna,UAAV,CAAqBK,6BAArB,IAAsD,GAKkD;AAAA,iBAJ9H+Z,iBAI8H,GAJ1G,wBAI0G;AAAA,iBAH9HC,oBAG8H,GAHvG,2BAGuG;AAAA,iBAF9H9F,WAE8H,GAFhH,EAEgH;;AAC1H,iBAAKU,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKjJ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAK/Z,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAK8F,YAAL,GAAoBA,YAApB;;AAEA,iBAAKI,uBAAL,GAA+B,KAAKC,eAAL,CAAqB/F,IAArB,CAA0B,IAA1B,CAA/B;AACA,iBAAKoJ,KAAL,GAAa,yBAAe,KAAKtO,eAApB,CAAb;AACH;;wCAEDwI,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,sBAAKgE,oBAAL;AACA,sBAAK/E,EAAL,CAAQyJ,aAAR,GAAwB,MAAKL,mBAA7B;AACA,sBAAKG,KAAL,CAAW9e,KAAX,CAAiB,MAAK2e,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;;AAEA,sBAAKzD,YAAL,CAAkBtG,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK0G,uBAApD,EAA6E,KAA7E;AACAzf;AACH,aARM,CAAP;AASH;;wCAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,kBADZ,EACgCC,QADhC,GAC2CoD,SAD3C,CACqD,CADrD,EACwDC,SADxD,CACkE,CADlE,EAEKpD,EAFL,CAEQ,KAAKlF,EAFb;AAGH;;wCAEDnU,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKL,iBAApC,EAAuD;AAAA,uBAAa,OAAKM,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKpG,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKJ,oBAApC,EAA0D;AAAA,uBAAa,OAAKO,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;wCAEDE,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wCAED5D,mCAAa;AACT,iBAAKkD,KAAL,CAAW/N,IAAX;AACA,iBAAKqK,YAAL,CAAkBnG,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKuG,uBAAvD;AACH;;wCAEDC,2CAAgB3F,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM+F,MAAN,CAAalY,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAImS,MAAM+F,MAAN,CAAalY,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAImS,MAAM1W,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK8jB,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;wCAEDhE,6CAAiBC,WAAW;AACxB,iBAAK5J,EAAL,CAAQyJ,aAAR,GAAwBG,SAAxB;AACH;;wCAEDC,mDAAoBD,WAAW;AAC3B,iBAAK5J,EAAL,CAAQkK,iBAAR,GAA4B,IAA5B;AACH;;wCAEDxF,yBAAOnE,OAAO;AACV,iBAAK2D,gBAAL,CAAsBQ,MAAtB;AACH;;wCAED6C,iCAAWhH,OAAO;AACd,gBAAI9P,WAAW;AACX8W,4BAAY;AADD,aAAf;AAGA,iBAAKrD,gBAAL,CAAsBQ,MAAtB,CAA6BjU,QAA7B;AACH;;wCAEDkd,yBAAOpN,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,4BAAIiW,UAAU;AACVxS,uCAAW,OAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,2CAAe,OAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,oCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MAHX;AAIVqV,yCAAa,OAJH;AAKVH,yCAAa,OAAKzG,EAAL,CAAQpP,YALX;AAMVC,mCAAO,OAAKmP,EAAL,CAAQpP,YANL;AAOVuc,mCAAO,OAAKnN,EAAL,CAAQoH;AAPL,yBAAd;AASA,+BAAKrH,WAAL,CAAiBrK,iBAAjB,CAAmCmO,OAAnC,EACKna,IADL,CACU,oBAAY;AACd,gCAAI+G,SAASM,QAAb,EAAuB;AACnB,uCAAKmT,gBAAL,CAAsBO,EAAtB,CAAyBhU,QAAzB;AACH,6BAFD,MAEO;AACH,uCAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,8BAAxB;AACH;AACDM;AACH,yBARL,EASKmE,KATL,CASW,kBAAU;AACb,iDAAOzE,KAAP,CAAaib,MAAb;AACA,mCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,yBAAxB;AACAmf,mCAAOlE,MAAP;AACH,yBAbL;AAcH;AACJ,iBA3BL;AA4BH,aA7BM,CAAP;AA8BH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC5HQyM,gCAAAA,gCADZ;AASG,uCAAY1J,gBAAZ,EAA8BjJ,eAA9B,EAA+C2J,iBAA/C,EAAkE7Z,YAAlE,EAAgFhC,IAAhF,EAAsF+B,WAAtF,EAAmGiV,WAAnG,EAAgH8F,YAAhH,EAA8H;AAAA;;AAAA,iBAL9HuD,mBAK8H,GALxG,cAAUna,UAAV,CAAqB4e,6BAArB,IAAsD,GAKkD;AAAA,iBAJ9HxE,iBAI8H,GAJ1G,wBAI0G;AAAA,iBAH9HC,oBAG8H,GAHvG,2BAGuG;AAAA,iBAF9H9F,WAE8H,GAFhH,EAEgH;;AAC1H,iBAAKU,gBAAL,GAAwBA,gBAAxB;AACA,iBAAKjJ,eAAL,GAAuBA,eAAvB;AACA,iBAAK4J,UAAL,GAAkBD,kBAAkBE,qBAAlB,EAAlB;AACA,iBAAK/Z,YAAL,GAAoBA,YAApB;AACA,iBAAKhC,IAAL,GAAYA,IAAZ;AACA,iBAAK+B,WAAL,GAAmBA,WAAnB;AACA,iBAAKiV,WAAL,GAAmBA,WAAnB;AACA,iBAAK8F,YAAL,GAAoBA,YAApB;;AAEA,iBAAKI,uBAAL,GAA+B,KAAKC,eAAL,CAAqB/F,IAArB,CAA0B,IAA1B,CAA/B;AACA,iBAAKoJ,KAAL,GAAa,yBAAe,KAAKtO,eAApB,CAAb;AACH;;wCAEDwI,6BAAS1C,WAAW;AAAA;;AAChB,mBAAO,IAAI5a,OAAJ,CAAY,mBAAW;AAC1B,sBAAK6Z,EAAL,GAAUe,SAAV;AACA,sBAAKgE,oBAAL;AACA,sBAAK/E,EAAL,CAAQyJ,aAAR,GAAwB,MAAKL,mBAA7B;AACA,sBAAKG,KAAL,CAAW9e,KAAX,CAAiB,MAAK2e,mBAAtB,EAA2C,MAAKC,iBAAhD,EAAmE,MAAKC,oBAAxE;;AAEA,sBAAKzD,YAAL,CAAkBtG,gBAAlB,CAAmC,UAAnC,EAA+C,MAAK0G,uBAApD,EAA6E,KAA7E;AACAzf;AACH,aARM,CAAP;AASH;;wCAEDue,uDAAuB;AACnB,+CACKC,MADL,CACY,kBADZ,EACgCC,QADhC,GAC2CoD,SAD3C,CACqD,CADrD,EACwDC,SADxD,CACkE,CADlE,EAEKpD,EAFL,CAEQ,KAAKlF,EAFb;AAGH;;wCAEDnU,+BAAW;AAAA;;AACP,iBAAK2X,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKL,iBAApC,EAAuD;AAAA,uBAAa,OAAKM,gBAAL,CAAsBC,SAAtB,CAAb;AAAA,aAAvD,CADJ;AAGA,iBAAKpG,WAAL,CAAiBnR,IAAjB,CACI,KAAK4I,eAAL,CAAqByO,SAArB,CAA+B,KAAKJ,oBAApC,EAA0D;AAAA,uBAAa,OAAKO,mBAAL,CAAyBD,SAAzB,CAAb;AAAA,aAA1D,CADJ;AAGH;;wCAEDE,+BAAW;AACP,6BAAEC,IAAF,CAAO,KAAKvG,WAAZ,EAAyB,UAAUwG,UAAV,EAAsB;AAC3C,oBAAIA,cAAcA,WAAWC,OAA7B,EAAsC;AAClCD,+BAAWC,OAAX;AACH;AACJ,aAJD;AAKH;;wCAED5D,mCAAa;AACT,iBAAKkD,KAAL,CAAW/N,IAAX;AACA,iBAAKqK,YAAL,CAAkBnG,mBAAlB,CAAsC,UAAtC,EAAkD,KAAKuG,uBAAvD;AACH;;wCAEDC,2CAAgB3F,OAAO;AACnB,gBAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,oBAAI,OAAOA,MAAM+F,MAAN,CAAalY,EAApB,KAA2B,WAA/B,EAA4C;AACxC,wBAAImS,MAAM+F,MAAN,CAAalY,EAAb,KAAoB,mBAAxB,EAA6C;AACzC,4BAAImS,MAAM1W,GAAN,KAAc,OAAlB,EAA2B;AACvB,iCAAK8jB,MAAL;AACH;AACJ;AACJ;AACJ;AACJ;;wCAEDhE,6CAAiBC,WAAW;AACxB,iBAAK5J,EAAL,CAAQyJ,aAAR,GAAwBG,SAAxB;AACH;;wCAEDC,mDAAoBD,WAAW;AAC3B,iBAAK5J,EAAL,CAAQkK,iBAAR,GAA4B,IAA5B;AACH;;wCAEDxF,yBAAOnE,OAAO;AACV,iBAAK2D,gBAAL,CAAsBQ,MAAtB;AACH;;wCAED6C,iCAAWhH,OAAO;AACd,gBAAI9P,WAAW;AACX8W,4BAAY;AADD,aAAf;AAGA,iBAAKrD,gBAAL,CAAsBQ,MAAtB,CAA6BjU,QAA7B;AACH;;wCAEDkd,yBAAOpN,OAAO;AAAA;;AACV,mBAAO,IAAIpa,OAAJ,CAAY,UAACK,OAAD,EAAU6e,MAAV,EAAqB;AACpC,uBAAKR,UAAL,CAAgBS,QAAhB,GACK5b,IADL,CACU,oCAA4B;AAC9B,wBAAI6b,yBAAyB3X,KAA7B,EAAoC;AAChC,4BAAIiW,UAAU;AACVxS,uCAAW,OAAK2O,EAAL,CAAQC,IAAR,CAAa5O,SADd;AAEVC,2CAAe,OAAK0O,EAAL,CAAQC,IAAR,CAAa3O,aAFlB;AAGVC,oCAAQ,OAAKyO,EAAL,CAAQC,IAAR,CAAa1O,MAHX;AAIVqV,yCAAa,KAJH;AAKVH,yCAAa,OAAKzG,EAAL,CAAQ7O,WALX;AAMVN,mCAAO,OAAKmP,EAAL,CAAQ7O,WANL;AAOVgc,mCAAO,OAAKnN,EAAL,CAAQoH;AAPL,yBAAd;AASA,+BAAKrH,WAAL,CAAiBrK,iBAAjB,CAAmCmO,OAAnC,EACKna,IADL,CACU,oBAAY;AACd,gCAAI+G,SAASM,QAAb,EAAuB;AACnB,uCAAKmT,gBAAL,CAAsBO,EAAtB,CAAyBhU,QAAzB;AACH,6BAFD,MAEO;AACH,uCAAK1F,YAAL,CAAkB7E,KAAlB,CAAwB,8BAAxB;AACH;AACDM;AACH,yBARL,EASKmE,KATL,CASW,kBAAU;AACb,iDAAOzE,KAAP,CAAaib,MAAb;AACA,mCAAKpW,YAAL,CAAkB7E,KAAlB,CAAwB,yBAAxB;AACAmf,mCAAOlE,MAAP;AACH,yBAbL;AAcH;AACJ,iBA3BL;AA4BH,aA7BM,CAAP;AA8BH","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import routerConfig from 'config/router';\nimport appConfig from 'config/app';\nimport authConfig from 'config/auth';\nimport localConfig from 'config/local';\nimport Backend from 'i18next-xhr-backend';\nimport {Config} from 'aurelia-config';\nimport {Router} from 'aurelia-router';\nimport {AuthenticateStep} from 'aurelia-authentication';\nimport {ValidationMessageProvider} from 'aurelia-validation';\nimport {LogManager} from 'aurelia-framework';\nimport {ConsoleAppender} from 'aurelia-logging-console';\n\nLogManager.addAppender(new ConsoleAppender());\nLogManager.setLevel(window.location.hostname.match(new RegExp('localhost'))\n    ? LogManager.logLevel.debug\n    : LogManager.logLevel.error);\n\nPromise.config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nfunction getLanguage() {\n    return new Promise((resolve) => {\n        let lng = 'en';\n        resolve(lng);\n    });\n}\n\nfunction configureRouter(config) {\n    config.title = appConfig.app.title;\n    config.addPipelineStep('authorize', AuthenticateStep);\n    config.map(routerConfig.routes);\n    config.fallbackRoute(routerConfig.fallbackRoute);\n}\n\nfunction setRoot(aurelia) {\n    if (aurelia.setupAureliaDone && aurelia.setupI18NDone) {\n        aurelia.container.get(Router).configure(configureRouter);\n        aurelia.setRoot('app/app');\n    }\n}\n\nfunction initialize(aurelia, lng) {\n    aurelia.setupAureliaDone = false;\n    aurelia.setupI18NDone = false;\n    aurelia.use\n        .standardConfiguration()\n        .feature('foundation-validation')\n        .feature('resources')\n        .feature('components')\n        .plugin('aurelia-validation')\n        .plugin('aurelia-config', configure => {\n            return configure([\n                'aurelia-api',\n                'aurelia-authentication',\n                'aurelia-notification'\n            ], appConfig, authConfig, localConfig);\n        })\n        .plugin('aurelia-dialog', config => {\n            config.useDefaults();\n            config.useCSS('');\n            config.settings.lock = true;\n            config.settings.centerHorizontalOnly = false;\n            config.settings.startingZIndex = 5;\n            config.settings.enableEscClose = true;\n            config.settings.rejectOnCancel = true;\n        })\n        .plugin('aurelia-i18n', instance => {\n            instance.i18next.use(Backend);\n            let language = localStorage.getItem('language');\n            instance.setup({\n                backend: {\n                    loadPath: 'src/locales/{{lng}}/{{ns}}.json'\n                },\n                lng: language || appConfig.defaultLocale.language,\n                attributes: ['t'],\n                fallbackLng: language || appConfig.defaultLocale.language,\n                debug: appConfig.i18n.debug,\n                interpolation: {\n                    format: function (value, format, lng) {\n                        const parts = format.split(':');\n                        const vc = aurelia.resources.valueConverters[parts.shift()];\n                        return vc ? vc.toView(value, ...parts) : value;\n                    }\n                }\n            }).then(() => {\n                ValidationMessageProvider.prototype.getMessage = function (key) {\n                    const translation = instance.i18next.t(`validationMessages.${key}`);\n                    return this.parser.parseMessage(translation);\n                };\n                ValidationMessageProvider.prototype.getDisplayName = function (propertyName, displayName) {\n                    if (displayName !== null && displayName !== undefined) {\n                        return displayName;\n                    }\n                    return instance.i18next.t(`inputParameters.${propertyName}`);\n                };\n                aurelia.setupI18NDone = true;\n                setRoot(aurelia);\n            });\n        });\n\n    let mergedConfig = aurelia.container.get(Config);\n    if (mergedConfig.fetch('environment') === 'development') {\n        aurelia.use.developmentLogging();\n    }\n\n    if (mergedConfig.fetch('environment') === 'testing') {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => {\n        aurelia.setupAureliaDone = true;\n        setRoot(aurelia);\n    });\n}\n\nexport function configure(aurelia) {\n    getLanguage().then(lang => {\n        initialize(aurelia, lang);\n    }).catch(e => {\n        //lang was unavailable so default to en\n        initialize(aurelia, 'en');\n    });\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-authentication';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {logger} from 'util/logger-helper';\nimport $ from 'jquery';\nimport foundation from 'foundation-sites';\n\n@inject(Router, AuthService, Notification, I18N)\nexport class App {\n\n    languages = [\n        {code: 'en', locale: 'en-US', flag: 'us'},\n        {code: 'nl', locale: 'nl-NL', flag: 'nl'}\n    ];\n\n    constructor(router, authService, notification, i18n) {\n        this.router = router;\n        this.authService = authService;\n        this.notification = notification;\n        this.i18n = i18n;\n\n        let payload = authService.getTokenPayload();\n        this.username = payload ? payload.username : null;\n        this.authenticated = this.authService.isAuthenticated();\n    }\n\n    setLanguage(language) {\n        localStorage.setItem('language', language.code);\n        window.top.location.reload();\n    }\n\n    attached() {\n        $(document).foundation();\n        logger.info(this.i18n.tr('welcome_notification'));\n        this.notification.info('welcome_notification');\n    }\n}\n","export function configure(config) {\n    config.globalResources([\n        \"./nav-bar/nav-bar\",\n        \"./enrollment-nav-bar/enrollment-nav-bar\",\n        \"./site-footer/site-footer\",\n        \"./validation-summary/validation-summary\"\n    ]);\n}\n","import {ValidationRenderer, RenderInstruction, ValidationError} from 'aurelia-validation';\n\nif (window.Element && !Element.prototype.closest) {\n    Element.prototype.closest =\n        function (s) {\n            let matches = (this.document || this.ownerDocument).querySelectorAll(s);\n            let i;\n            let el = this;\n            do {\n                i = matches.length;\n                while (--i >= 0 && matches.item(i) !== el) {\n                }\n            } while ((i < 0) && (el = el.parentElement));\n            return el;\n        };\n}\n\nconst abideLabels = false;\n\nexport class FoundationValidationRenderer {\n    render(instruction) {\n        for (let {result, elements} of instruction.unrender) {\n            for (let element of elements) {\n                FoundationValidationRenderer.remove(element, result);\n            }\n        }\n\n        for (let {result, elements} of instruction.render) {\n            for (let element of elements) {\n                FoundationValidationRenderer.add(element, result);\n            }\n        }\n    }\n\n    static add(element, result) {\n        const formRow = element.closest('.form-row');\n        if (!formRow) {\n            return;\n        }\n\n        const formLabel = formRow.getElementsByTagName('label')[0];\n        const formInput = formRow.getElementsByTagName('input')[0];\n        if (result.valid) {\n            if (abideLabels && formLabel && !formLabel.classList.contains('is-invalid-label')) {\n                formLabel.classList.add('is-valid-label');\n            }\n\n            if (formInput && !formInput.classList.contains('is-invalid-input')) {\n                formInput.classList.add('is-valid-input');\n            }\n        } else {\n            if (abideLabels && formLabel) {\n                formLabel.classList.remove('is-valid-label');\n                formLabel.classList.add('is-invalid-label');\n            }\n\n            if (formInput) {\n                formInput.classList.remove('is-valid-input');\n                formInput.classList.add('is-invalid-input');\n                formInput.setAttribute('aria-invalid', 'true');\n            }\n\n            const message = document.createElement('span');\n            message.className = 'form-error is-visible';\n            message.textContent = result.message;\n            message.id = `validation-message-${result.id}`;\n            formRow.appendChild(message);\n        }\n    }\n\n    static remove(element, result) {\n        const formRow = element.closest('.form-row');\n        if (!formRow) {\n            return;\n        }\n\n        const formLabel = formRow.getElementsByTagName('label')[0];\n        const formInput = formRow.getElementsByTagName('input')[0];\n\n        if (result.valid) {\n            if (abideLabels && formLabel) {\n                formLabel.classList.remove('is-valid-label');\n            }\n\n            if (formInput) {\n                formInput.classList.remove('is-valid-input');\n            }\n        } else {\n            if (abideLabels && formLabel) {\n                formLabel.classList.remove('is-invalid-label');\n            }\n\n            if (formInput) {\n                formInput.classList.remove('is-invalid-input');\n                formInput.setAttribute('aria-invalid', 'false');\n            }\n\n            const message = formRow.querySelector(`#validation-message-${result.id}`);\n            if (message) {\n                formRow.removeChild(message);\n            }\n        }\n    }\n}\n","import {FoundationValidationRenderer} from 'foundation-validation/foundation-validation-renderer';\n\nexport function configure(config) {\n    config.container.registerHandler(\n        'foundation-form',\n        container => container.get(FoundationValidationRenderer));\n}\n","export default {\n    app: {\n        title: 'Corporation Name\\'s Self Service Password Reset',\n        environment: 'development',\n    },\n    logger: {\n        name: 'au-cli-esnext'\n    },\n    i18n: {\n        debug: true\n    },\n    'aurelia-api': {\n        endpoints: [\n            {\n                name: 'user',\n                endpoint: 'http://127.0.0.1:1337/user/',\n                // config  : {},\n                default: true\n            },\n            {\n                name: 'auth',\n                endpoint: 'http://127.0.0.1:1337/',\n                // config  : {}\n            }\n        ],\n    },\n    defaultLocale: {\n        language: 'en',\n        locale: 'en-US'\n    },\n    'aurelia-notification': {\n        notifications: {\n            success: 'humane-flatty-success',\n            error: 'humane-flatty-error',\n            info: 'humane-flatty-info'\n        }\n    },\n    enrollment: {\n        numberOfRequiredChallengeQuestionAnswers: 5,\n        numberOfRequiredSmsInfos: 1,\n        numberOfRequiredEmailInfos: 1,\n        confirmDisclaimerEventTimerStartTime: 1,\n        verifyEmailInfoTimerStartTime: 120\n    }\n};\n","export default {\n    /* @see http://aurelia-authentication.spoonx.org/configuration.html */\n    'aurelia-authentication': {\n        // Which endpoint (in `./app.js`) to use for auth requests.\n        endpoint: 'auth',\n\n        // Which endpoints to patch with the JWT (Authorization header).\n        configureEndpoints: ['auth', 'user'],\n\n        // The base url used for all authentication related requests, including provider.url below.\n        // This appends to the httpClient/endpoint base url (in `./app.js`), it does not override it.\n        baseUrl: 'auth',\n\n        // The API endpoint to which login requests are sent\n        loginUrl: '/login',\n\n        // The API endpoint to which signup requests are sent\n        signupUrl: '/signup',\n\n        // Redirect to this url after successfully logging in\n        loginRedirect: '/#/self-service',\n\n        // The API endpoint used in profile requests (inc. `find/get` and `update`)\n        profileUrl: '/me',\n\n        refreshTokenUrl: '/refresh-token',\n        useRefreshToken: true\n    }\n};\n","/**\n * This file gets copied into place on bundle.\n * This will become local.js in production.\n *\n * NOTE: Make sure this file is altered as needed.\n */\nexport default {\n    app: {\n        // The environment we're running in.\n        environment: '{{environment}}', // Automatically set based on deploy context.\n    },\n    'aurelia-api': {\n        endpoints: [\n            {\n                name: 'user',        // The name by which you reference this endpoint\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\n                default: true          // Set this to the default endpoint (defaults to false)\n            },\n            {\n                name: 'auth',       // The name by which you reference this endpoint\n                endpoint: '{{apiUrl}}', // The URL for this endpoint (defaults to current url)\n            }\n        ]\n    }\n};\n","export default {};\n","export default {\n    routes: [\n        {\n            route: ['', '/login'],\n            name: 'login',\n            moduleId: 'components/views/login/login',\n            nav: false,\n            auth: false,\n            title: 'Login',\n            settings: {\n                t: 'login_route',\n                roles: []\n            }\n        }, {\n            route: '/logout',\n            name: 'logout',\n            moduleId: 'components/views/logout/logout',\n            title: 'Logout',\n            settings: {\n                t: 'logout_route',\n                roles: []\n            }\n        }, {\n            route: '/enrollment',\n            name: 'enrollment',\n            moduleId: 'components/views/enrollment/enrollment',\n            nav: false,\n            auth: true,\n            title: 'Enrollment',\n            settings: {\n                t: 'enrollment_route',\n                roles: ['notenrolled']\n            }\n        }, {\n            route: '/challenge',\n            name: 'challenge',\n            moduleId: 'components/views/challenge/challenge',\n            nav: false,\n            auth: true,\n            title: 'Challenge',\n            settings: {\n                t: 'challenge_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service',\n            name: 'self-service',\n            moduleId: 'components/views/self-service/self-service',\n            nav: false,\n            auth: true,\n            title: 'Self Service',\n            settings: {\n                t: 'self-service_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/change-password',\n            name: 'change-password',\n            moduleId: 'components/views/change-password/change-password',\n            nav: false,\n            auth: true,\n            title: 'Change Password',\n            settings: {\n                t: 'change-password_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/unlock-profile',\n            name: 'unlock-profile',\n            moduleId: 'components/views/unlock-profile/unlock-profile',\n            nav: false,\n            auth: true,\n            title: 'Unlock Profile',\n            settings: {\n                t: 'unlock-profile_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/edit-profile',\n            name: 'edit-profile',\n            moduleId: 'components/views/edit-profile/edit-profile',\n            nav: false,\n            auth: true,\n            title: 'Edit Profile',\n            settings: {\n                t: 'edit-profile_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/edit-challenge-question-answers',\n            name: 'edit-challenge-question-answers',\n            moduleId: 'components/views/edit-challenge-question-answers/edit-challenge-question-answers',\n            nav: false,\n            auth: true,\n            title: 'Edit Challenge Question Answers',\n            settings: {\n                t: 'edit-challenge-question-answers_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/edit-phone-infos',\n            name: 'edit-phone-infos',\n            moduleId: 'components/views/edit-phone-infos/edit-phone-infos',\n            nav: false,\n            auth: true,\n            title: 'Edit Phone Infos',\n            settings: {\n                t: 'edit-phone-infos_route',\n                roles: []\n            }\n        }, {\n            route: '/self-service/edit-email-infos',\n            name: 'edit-email-infos',\n            moduleId: 'components/views/edit-email-infos/edit-email-infos',\n            nav: false,\n            auth: true,\n            title: 'Edit Email Infos',\n            settings: {\n                t: 'edit-email-infos_route',\n                roles: []\n            }\n        }],\n    fallbackRoute: 'login'\n};\n","export class ChallengeQuestion {\n    challengeQuestionId = '';\n    challengeQuestionText = '';\n    userAnswerText = '';\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.challengeQuestionId) {\n                this.challengeQuestionId = response.challengeQuestionId;\n            }\n            if (response.challengeQuestionText) {\n                this.challengeQuestionText = response.challengeQuestionText;\n            }\n        }\n    }\n}\n","export class ChallengeQuestionAnswer {\n    challengeQuestionId = '';\n    challengeQuestionText = '';\n    userAnswerText = '';\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.challengeQuestionId) {\n                this.challengeQuestionId = response.challengeQuestionId;\n            }\n            if (response.challengeQuestionText) {\n                this.challengeQuestionText = response.challengeQuestionText;\n            }\n            if (response.userAnswerText) {\n                this.userAnswerText = response.userAnswerText;\n            }\n        }\n    }\n}\n","export class EmailInfo {\n    emailAddress ='';\n    label = '';\n    isDefault = false;\n    verified = false;\n    hasActiveToken = false;\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.emailAddress) {\n                this.emailAddress = response.emailAddress;\n            }\n            if (response.label) {\n                this.label = response.label;\n            }\n            this.isDefault = Boolean(response.isDefault);\n            this.verified = Boolean(response.verified);\n            this.hasActiveToken = Boolean(response.hasActiveToken);\n        }\n    }\n}\n","export class SmsInfo {\n    phoneNumber ='';\n    label = '';\n    isDefault = false;\n    verified = false;\n    hasActiveToken = false;\n\n    constructor() {\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.phoneNumber) {\n                this.phoneNumber = response.phoneNumber;\n            }\n            if (response.label) {\n                this.label = response.label;\n            }\n            this.isDefault = Boolean(response.isDefault);\n            this.verified = Boolean(response.verified);\n            this.hasActiveToken = Boolean(response.hasActiveToken);\n        }\n    }\n}\n","import {ChallengeQuestion} from 'models/challengeQuestion';\nimport {ChallengeQuestionAnswer} from 'models/challengeQuestionAnswer';\nimport {SmsInfo} from 'models/smsInfo';\nimport {EmailInfo} from 'models/emailInfo';\nimport {AuthStatusCode} from 'util/common-models';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\nexport class User {\n    sessionId = '';\n    transactionId = '';\n    userId = '';\n    fullName = '';\n    _availableChallengeQuestions = [];\n    _challengeQuestionAnswers = [];\n    challengeQuestions = [];\n    smsInfos = [];\n    emailInfos = [];\n    availableChallengeCredentialTypes = [];\n    numberOfRequiredChallengeQuestionAnswers = appConfig.enrollment.numberOfRequiredChallengeQuestionAnswers || 5;\n    numberOfRequiredSmsInfos = appConfig.enrollment.numberOfRequiredSmsInfos || 1;\n    numberOfRequiredEmailInfos = appConfig.enrollment.numberOfRequiredEmailInfos || 1;\n\n    constructor(attributes) {\n        this.fromJson(attributes);\n    }\n\n    fromJson(response) {\n        if (response) {\n            if (response.authStatusCode) {\n                this.authStatusCode = AuthStatusCode[response.authStatusCode];\n            }\n            if (response.sessionId) {\n                this.sessionId = response.sessionId;\n            }\n            if (response.transactionId) {\n                this.transactionId = response.transactionId;\n            }\n            if (response.userId) {\n                this.userId = response.userId;\n            }\n            if (response.userInfo && response.userInfo.fullName) {\n                this.fullName = response.userInfo.fullName;\n            }\n            if (response.authToken) {\n                this.authToken = response.authToken;\n            }\n            let buildChallengeQuestions = false;\n            if (response.availableChallengeQuestionAnswers && response.availableChallengeQuestionAnswers.length && response.availableChallengeQuestionAnswers.length > 0) {\n                buildChallengeQuestions = true;\n                for (let i = 0; i < response.availableChallengeQuestionAnswers.length; i++) {\n                    let newChallengeQuestion = new ChallengeQuestion();\n                    newChallengeQuestion.fromJson(response.availableChallengeQuestionAnswers[i]);\n                    this._availableChallengeQuestions.push(newChallengeQuestion);\n                }\n            }\n            let mapChallengeQuestionAnswers = false;\n            if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\n                mapChallengeQuestionAnswers = true;\n                for (let j = 0; j < response.challengeQuestionAnswers.length; j++) {\n                    let newChallengeQuestionAnswer = new ChallengeQuestionAnswer();\n                    newChallengeQuestionAnswer.fromJson(response.challengeQuestionAnswers[j]);\n                    this._challengeQuestionAnswers.push(newChallengeQuestionAnswer);\n                }\n            }\n            if (response.smsInfos && response.smsInfos.length && response.smsInfos.length > 0) {\n                for (let k = 0; k < response.smsInfos.length; k++) {\n                    let newSmsInfo = new SmsInfo();\n                    newSmsInfo.fromJson(response.smsInfos[k]);\n                    this.smsInfos.push(newSmsInfo);\n                }\n            }\n            if (response.emailInfos && response.emailInfos.length && response.emailInfos.length > 0) {\n                for (let l = 0; l < response.emailInfos.length; l++) {\n                    let newEmailInfo = new EmailInfo();\n                    newEmailInfo.fromJson(response.emailInfos[l]);\n                    this.emailInfos.push(newEmailInfo);\n                }\n            }\n            if (response.credentialTypes && response.credentialTypes.length && response.credentialTypes.length > 0) {\n                for (let m = 0; m < response.credentialTypes.length; m++) {\n                    this.availableChallengeCredentialTypes.push(response.credentialTypes[m]);\n                }\n            }\n\n            if (buildChallengeQuestions) {\n                this.buildChallengeQuestions(this.numberOfRequiredChallengeQuestionAnswers);\n            }\n            if (mapChallengeQuestionAnswers) {\n                if (!buildChallengeQuestions) {\n                    if (response.challengeQuestionAnswers && response.challengeQuestionAnswers.length && response.challengeQuestionAnswers.length > 0) {\n                        for (let n = 0; n < response.challengeQuestionAnswers.length; n++) {\n                            let newChallengeQuestion = new ChallengeQuestion();\n                            newChallengeQuestion.fromJson(response.challengeQuestionAnswers[n]);\n                            this._availableChallengeQuestions.push(newChallengeQuestion);\n                        }\n                        this.buildChallengeQuestions(response.challengeQuestionAnswers.length);\n                    }\n                }\n                this.mapChallengeQuestionAnswers();\n            }\n        }\n    }\n\n    buildChallengeQuestions(numberOfChallengeQuestions) {\n        this.challengeQuestions = [];\n        for (let i = 0; i < numberOfChallengeQuestions; i++) {\n            this.challengeQuestions.push({\n                availableChallengeQuestions: _.orderBy(_.cloneDeep(this._availableChallengeQuestions, ['challengeQuestionId'], ['asc'])),\n                selectedAvailableChallengeQuestion: null,\n                previouslySelectedAvailableChallengeQuestion: null,\n                userAnswerText: '',\n                showActualAnswer: false\n            });\n        }\n    }\n\n    updateAvailableChallengeQuestions(selectedChallengeQuestion, selectedAvailableChallengeQuestion) {\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let currentChallengeQuestion = this.challengeQuestions[i];\n            if (currentChallengeQuestion !== selectedChallengeQuestion) {\n                let removedAvailableChallengeQuestion;\n                if (selectedAvailableChallengeQuestion !== null) {\n                    let index = _.findIndex(currentChallengeQuestion.availableChallengeQuestions, selectedAvailableChallengeQuestion);\n                    if (index > -1) {\n                        removedAvailableChallengeQuestion = currentChallengeQuestion.availableChallengeQuestions.splice(index, 1);\n                    }\n                }\n                if (selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion !== null) {\n                    currentChallengeQuestion.availableChallengeQuestions.splice(0, 0, selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion);\n                }\n            }\n        }\n\n        selectedChallengeQuestion.previouslySelectedAvailableChallengeQuestion = selectedAvailableChallengeQuestion;\n    }\n\n    getChallengeQuestionAnswers() {\n        let challengeQuestionAnswers = [];\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let challengeQuestion = this.challengeQuestions[i];\n            if (challengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId && challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText && challengeQuestion.userAnswerText) {\n                challengeQuestionAnswers.push({\n                    challengeQuestionId: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId,\n                    challengeQuestionText: challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionText,\n                    userAnswerText: challengeQuestion.userAnswerText\n                });\n            }\n        }\n        return challengeQuestionAnswers;\n    }\n\n    mapChallengeQuestionAnswers() {\n        for (let i = 0; i < this.challengeQuestions.length; i++) {\n            let challengeQuestion = this.challengeQuestions[i];\n            let challengeQuestionAnswer = this._challengeQuestionAnswers[i];\n            if (challengeQuestion && challengeQuestionAnswer) {\n                challengeQuestion.selectedAvailableChallengeQuestion = _.find(challengeQuestion.availableChallengeQuestions, function (a) {\n                    return a.challengeQuestionId === challengeQuestionAnswer.challengeQuestionId;\n                });\n                this.updateAvailableChallengeQuestions(challengeQuestion, challengeQuestion.selectedAvailableChallengeQuestion)\n            }\n        }\n    }\n\n    get challengeQuestionAnswersComplete() {\n        return this._challengeQuestionAnswers && this._challengeQuestionAnswers.length && this._challengeQuestionAnswers.length >= this.numberOfRequiredChallengeQuestionAnswers;\n    }\n\n    get smsInfosComplete() {\n        return this.smsInfos && this.smsInfos.length && this.smsInfos.length >= this.numberOfRequiredSmsInfos;\n    }\n\n    get emailInfosComplete() {\n        let isValid = false;\n        if (this.emailInfos && this.emailInfos.length && this.emailInfos.length >= this.numberOfRequiredEmailInfos) {\n            if (this.emailInfos.length > 1) {\n                isValid = true;\n            } else {\n                if (!this.emailInfos[0].emailAddress.match('companyname.com')) {\n                    isValid = true;\n                }\n            }\n        }\n        return isValid;\n    }\n}\n","export function configure(config) {\n    config.globalResources([\n        \"./value-converters/date-formatter\",\n        \"./value-converters/phone-formatter\",\n        \"./value-converters/timer-formatter\"\n    ]);\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {Config} from 'aurelia-api';\nimport {logger} from 'util/logger-helper';\nimport {DeviceHelper} from 'util/device-helper';\n\n@inject(Config, DeviceHelper)\nexport class UserService {\n    isRequesting = false;\n\n    constructor(config, deviceHelper) {\n        this.userEndpoint = config.getEndpoint(\"user\");\n        this.deviceHelper = deviceHelper;\n    }\n\n    signin(signinRequest) {\n        this.isRequesting = true;\n        signinRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('signin', signinRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    analyzeUser(analyzeUserRequest) {\n        this.isRequesting = true;\n        analyzeUserRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('analyzeuser', analyzeUserRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    challengeUser(challengeUserRequest) {\n        this.isRequesting = true;\n        challengeUserRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('challengeuser', challengeUserRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    authenticateUser(authenticateUserRequest) {\n        this.isRequesting = true;\n        authenticateUserRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('authenticateuser', authenticateUserRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    getUser(getUserRequest) {\n        this.isRequesting = true;\n        getUserRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('getuser', getUserRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    addChallengeQuestionAnswers(addChallengeQuestionAnswersRequest) {\n        this.isRequesting = true;\n        addChallengeQuestionAnswersRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('addchallengequestionanswers', addChallengeQuestionAnswersRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    verifyContactInfo(verifyContactInfoRequest) {\n        this.isRequesting = true;\n        verifyContactInfoRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('verifycontactinfo', verifyContactInfoRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    removeContactInfo(removeContactInfoRequest) {\n        this.isRequesting = true;\n        removeContactInfoRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('removecontactinfo', removeContactInfoRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n\n    resetPassword(resetPasswordRequest) {\n        this.isRequesting = true;\n        resetPasswordRequest.deviceRequest = this.deviceHelper.deviceRequest;\n        return this.userEndpoint.post('resetcredentials', resetPasswordRequest)\n            .then(response => {\n                this.isRequesting = false;\n                if (response.deviceRequest && response.deviceRequest.deviceTokenCookie) {\n                    this.deviceHelper.setDeviceTokenCookie(response.deviceRequest.deviceTokenCookie);\n                }\n                return response;\n            });\n    }\n}\n","import _ from 'lodash';\n\nexport class EnumSymbol {\n    sym = Symbol.for(name);\n    ordinal;\n    description;\n    keyName;\n\n    constructor(name, {ordinal, description}) {\n        if (!Object.is) {\n            Object.is = function (x, y) {\n                // SameValue algorithm\n                if (x === y) { // Steps 1-5, 7-10\n                    // Steps 6.b-6.e: +0 != -0\n                    return x !== 0 || 1 / x === 1 / y;\n                } else {\n                    // Step 6.a: NaN == NaN\n                    return x !== x && y !== y;\n                }\n            };\n        }\n        if (!Object.is(ordinal, undefined)) {\n            this.ordinal = ordinal;\n        }\n        if (description) {\n            this.description = description;\n        }\n        this.keyName = name;\n        Object.freeze(this);\n    }\n\n    get display() {\n        return this.description || Symbol.keyFor(this.sym);\n    }\n\n    get key() {\n        return this.keyName;\n    }\n\n    toString() {\n        return this.sym;\n    }\n\n    valueOf() {\n        return this.ordinal;\n    }\n}\n\nexport class Enum {\n    constructor(enumLiterals) {\n        for (let key in enumLiterals) {\n            if (enumLiterals.hasOwnProperty(key)) {\n                if (!enumLiterals[key]) {\n                    throw new TypeError('each enum should have been initialized with at least empty {} value');\n                }\n                this[key] = new EnumSymbol(key, enumLiterals[key]);\n            }\n        }\n        Object.freeze(this);\n    }\n\n    symbols() {\n        let syms = [];\n        let self = this;\n        Object.keys(this).forEach(function (k) {\n            syms.push(self[k]);\n        });\n        return syms; //for (key of Object.keys(this)) this[key];\n    }\n\n    keys() {\n        return Object.keys(this);\n    }\n\n    contains(sym) {\n        if (!(sym instanceof EnumSymbol)) {\n            return false;\n        }\n        return this[Symbol.keyFor(sym.sym)] === sym;\n    }\n\n    get(ordinal) {\n        let self = this;\n        let symbol;\n        this.keys().forEach(k => {\n            if (self[k].ordinal === +ordinal) {\n                symbol = self[k];\n            }\n        });\n        return symbol;\n    }\n}\n\nexport const AuthStatusCode = new Enum({\n    Success: {ordinal: 0, description: 'authStatusCode.success'},\n    Deny: {ordinal: 1, description: 'authStatusCode.deny'},\n    Pending: {ordinal: 2, description: 'authStatusCode.pending'},\n    Challenge: {ordinal: 3, description: 'authStatusCode.challenge'}\n});\n\nexport const EnrollmentStep = new Enum({\n    DISCLAIMER: {ordinal: 0, description: 'enrollmentStep.disclaimer'},\n    INTRO: {ordinal: 1, description: 'enrollmentStep.intro'},\n    QUESTIONS: {ordinal: 2, description: 'enrollmentStep.questions'},\n    PHONE: {ordinal: 3, description: 'enrollmentStep.phone'},\n    EMAIL: {ordinal: 4, description: 'enrollmentStep.email'},\n    SUMMARY: {ordinal: 5, description: 'enrollmentStep.summary'}\n});\n\nexport const ActionCode = new Enum({\n    ALLOW: {ordinal: 0, description: 'actionCode.allow'},\n    CHALLENGE: {ordinal: 1, description: 'actionCode.challenge'},\n    NONE: {ordinal: 2, description: 'actionCode.none'},\n    REVIEW: {ordinal: 3, description: 'actionCode.review'}\n});\n\nexport const CredentialType = new Enum({\n    PASSWORD: {ordinal: 0, description: 'credentialType.password'},\n    QUESTIONS: {ordinal: 1, description: 'credentialType.questions'},\n    SMS: {ordinal: 2, description: 'credentialType.sms'},\n    EMAIL: {ordinal: 3, description: 'credentialType.email'},\n    ONETIMETOKEN: {ordinal: 4, description: 'credentialType.oneTimeToken'}\n});\n\nexport const ContactType = new Enum({\n    PHONE: {ordinal: 0, description: 'contactType.Phone'},\n    EMAIL: {ordinal: 1, description: 'contactType.Email'}\n});\n\nexport const UserStatus = new Enum({\n    ALLOW: {ordinal: 0, description: 'actionCode.allow'},\n    LOCKEDOUT: {ordinal: 1, description: 'actionCode.lockedOut'},\n    NONE: {ordinal: 2, description: 'actionCode.none'},\n    REVIEW: {ordinal: 3, description: 'actionCode.review'}\n});\n\nlet determineShiftedValues = (total, highestValue) => {\n    let values = [];\n    let runningTotal = total;\n    for (let i = highestValue; i >= 0; i--) {\n        if (runningTotal >> i === 1) {\n            let binValue = Math.pow(2, i);\n            runningTotal = runningTotal - binValue;\n            values.push(binValue);\n        }\n    }\n    return values;\n};\n\nexport let EnumeratedTypeHelper = function () {\n    return {\n        asArray: (type, value) => {\n            if (value === undefined) {\n                return [];\n            }\n            let v = determineShiftedValues(value, type.symbols().length);\n            let enums = [];\n            _.forEach(v, ordinal => {\n                enums.push(type.get(ordinal));\n            });\n            return enums;\n        }\n    };\n}();\n","export class DeviceHelper {\n\n    constructor() {\n    }\n\n    get deviceRequest() {\n        let devicePrint = encode_deviceprint();\n\n        //Gather existing token value from cookie\n        let deviceTokenCookie = this.deviceTokenCookie;\n\n        return {\n            \"devicePrint\": devicePrint,\n            \"deviceTokenCookie\": deviceTokenCookie,\n            \"deviceTokenFSO\": deviceTokenCookie,\n            \"httpAccept\": null,\n            \"httpAcceptChars\": null,\n            \"httpAcceptEncoding\": null,\n            \"httpAcceptLanguage\": null,\n            \"httpReferrer\": null,\n            \"ipAddress\": null,\n            \"userAgent\": null\n        };\n    }\n\n    setDeviceTokenCookie(cDeviceToken) {\n        let cname = \"PMData\";\n        let cmaxage = 365;\n        let d = new Date();\n        d.setTime(d.getTime() + (cmaxage * 24 * 60 * 60 * 1000));\n        let expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cDeviceToken + \";\" + expires + \";path=/;\";\n    }\n\n    get deviceTokenCookie() {\n        let cname = \"PMData=\";\n        let ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(cname) === 0) {\n                return c.substring(cname.length, c.length);\n            }\n        }\n        return \"\";\n    }\n}\n","export default class EventTimer {\n\n    constructor(eventAggregator) {\n        this.eventAggregator = eventAggregator;\n    }\n\n    start(interval, tickKey, timeoutKey) {\n        let currentTime = interval;\n\n        this.intervalId = window.setInterval(() => {\n            if (--currentTime < 0) {\n                this.stop();\n                if (this.eventAggregator && this.eventAggregator.publish && timeoutKey) {\n                    this.eventAggregator.publish(timeoutKey, 0);\n                }\n            }\n            if (this.eventAggregator && this.eventAggregator.publish && tickKey) {\n                this.eventAggregator.publish(tickKey, currentTime);\n            }\n        }, 1000);\n    }\n\n    stop() {\n        window.clearInterval(this.intervalId);\n    }\n}\n","function LocationHelperFunction() {\n    return {\n        getQueryParameter: function (key, default_) {\n            if (default_ == null) {\n                default_ = null;\n            }\n            key = key.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n            key = key.replace(\"$\", \"\\\\$\");\n            let regex = new RegExp(\"[\\\\?&]\" + key + \"=([^&#]*)\");\n            let qs = regex.exec(window.location.href);\n            if (qs == null) {\n                return default_;\n            } else {\n                return decodeURIComponent(qs[1]);\n            }\n        }\n    };\n}\n\nexport let LocationHelper = new LocationHelperFunction();\n","import {LogManager} from 'aurelia-framework';\nimport appConfig from 'config/app';\n\nexport let logger = LogManager.getLogger(appConfig.logger.name);\n","import ODataFilter from 'odata-filter-parser';\nimport _ from 'lodash';\n\nlet Operators = ODataFilter.Operators;\n\nexport let ObjectUtilities = {\n    isEqual: function (objA, objB) {\n        if (!objA || !objB) {\n            return (!objA && !objB);\n        }\n        let aKeys = Object.keys(objA);\n        let bKeys = Object.keys(objB);\n        if (aKeys.length !== bKeys.length) {\n            return false;\n        }\n        for (let i = 0, len = aKeys.length; i < len; i++) {\n            let key = aKeys[i];\n            if (!objB.hasOwnProperty(key) || objA[key] !== objB[key]) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    deepExtend: function (destination, source) {\n        for (let property in source) {\n            if (source.hasOwnProperty(property)) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    ObjectUtilities.deepExtend(destination[property], source[property]);\n                } else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n        return destination;\n    }\n};\n\nexport let PredicateUtilities = {\n    removeMatches(subject, predicates) {\n        let predicateList = _.clone(predicates);\n        if (predicateList.length === 1 && !Operators.isLogical(predicateList[0].operator)) {\n            if (predicateList[0].subject === subject) {\n                predicateList.splice(0, 1);\n            }\n        } else {\n            _.remove(predicateList, item => {\n                return item.subject === subject;\n            });\n            let logicals = _.filter(predicateList, item => {\n                return Operators.isLogical(item.operator);\n            });\n            if (logicals.length > 0) {\n                _.forEach(logicals, logical => {\n                    let flattened = logical.flatten();\n                    let processed = PredicateUtilities.removeMatches(subject, flattened);\n                    if (processed.length < flattened.length) {\n                        let indx = _.indexOf(predicateList, logical);\n                        predicateList.splice(indx, 1);\n                    }\n                });\n            }\n        }\n        return predicateList;\n    }\n};\n\nexport let StringUtil = {\n    pluralize: function (str, count) {\n        let s = str;\n        if (count > 1) {\n            if (str.endsWith(\"y\")) {\n                s = str.substring(0, str.length - 1) + 'ies';\n            } else {\n                s += 's';\n            }\n        }\n        return s;\n    }\n};\n","import moment from 'moment';\nimport {logger} from 'util/logger-helper';\n\nfunction StringHelperFunction() {\n    return {\n        formatDate: function(date) {\n            let formattedDate = '';\n            if (date) {\n                try {\n                    let d = new Date(date);\n                    formattedDate = moment(d).format('MM/DD/YYYY');\n                } catch (dateErr) {\n                    logger.warn(\"Invalid value for view:\" + value, dateErr);\n                }\n            }\n            if (formattedDate === 'Invalid date') { // this will force the text to be \"\" for invalid dates\n                formattedDate = null;\n            }\n            return formattedDate;\n        },\n\n        parseDate: function(date) {\n            let parsedDate = '';\n            if (date) {\n                if (date === 'Invalid date') { // this will force the text to be \"\" for invalid dates\n                    return null;\n                }\n                try {\n                    parsedDate = moment(new Date(date)).format('YYYY-MM-DDTHH:mm:ssZ');\n                } catch (dateErr) {\n                    parsedDate = null;\n                    logger.warn(\"invalid value from view: \" + value, dateErr);\n                }\n            }\n            return parsedDate;\n        },\n\n        formatPhoneNumber: function(phoneNumber) {\n            let formattedPhoneNumber = '';\n            if (phoneNumber) {\n                let rawPhoneNumber = phoneNumber.replace(/\\D/g,'');\n                let size = rawPhoneNumber.length;\n    \n                if(size > 10)\n                {\n                    rawPhoneNumber = rawPhoneNumber.substring(1, 11);\n                }\n\n                formattedPhoneNumber = rawPhoneNumber.toString();\n                if (size > 0 && size < 4) {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber;\n                } else if (size < 7) {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6);\n                } else {\n                    formattedPhoneNumber = '(' + formattedPhoneNumber.substring(0, 3) + ') ' + formattedPhoneNumber.substring(3, 6) + ' - ' + formattedPhoneNumber.substring(6, 10);\n                }\n            }\n            return formattedPhoneNumber;\n        },\n\n        parsePhoneNumber: function(phoneNumber) {\n            let parsedPhoneNumber = '';\n            if (phoneNumber) {\n                parsedPhoneNumber = phoneNumber.replace(/\\D/g,'').substring(0,10);\n            }\n            return parsedPhoneNumber;\n        }\n    };\n}\n\nexport let StringHelper = new StringHelperFunction();\n","export class WindowHelper {\n    \n    constructor() {\n    }\n\n    addEventListener(type, listener, options) {\n        if (window && window.addEventListener) {\n            window.addEventListener(type, listener, options);\n        }\n    }\n    removeEventListener(type, listener, options, useCapture) {\n        if (window && window.removeEventListener) {\n            window.removeEventListener(type, listener, options);\n        }\n    }\n}\n","import {inject, bindable, computedFrom, bindingMode, BindingEngine} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    GoToChallengeQuestionAnswers,\n    GoToPhoneInfos,\n    GoToEmailInfos\n} from 'resources/messages/enrollment-messages';\n\n@inject(BindingEngine, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentNavBar {\n    vm = {\n        user: {},\n        showNavBar: false\n    };\n\n    constructor(bindingEngine, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.bindingEngine = bindingEngine;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n    }\n\n    bind(bindingContext, overrideContext) {\n        this.vm = bindingContext.vm;\n    }\n\n    goToChallengeQuestionAnswers(event) {\n        this.eventAggregator.publish(new GoToChallengeQuestionAnswers());\n    }\n\n    goToPhoneInfos(event) {\n        this.eventAggregator.publish(new GoToPhoneInfos());\n    }\n\n    goToEmailInfos(event) {\n        this.eventAggregator.publish(new GoToEmailInfos());\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class NavBar {\n    @bindable router = null;\n    @bindable username = null;\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    get isAuthenticated() {\n        return this.authService.isAuthenticated();\n    }\n\n    goToLogout() {\n        let confirmDialogModel = this.i18n.tr('logout-dialog', {returnObjects: true});\n\n        this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n            .then(response => {\n                if (!response.wasCancelled) {\n                    this.router.navigateToRoute('logout');\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class SiteFooter {\n    @bindable router = null;\n    @bindable languages = null;\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    setLanguage(event, language) {\n        localStorage.setItem('language', language.code);\n        logger.info('language_changed');\n        window.top.location.reload();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\n\nexport class ValidationSummary {\n    @bindable errors = null;\n    @bindable autofocus = null;\n}\n","export class GoToChallenge {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToChallengeWithCredentials {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeCancel {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeFail {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\n","export class GoToEnrollmentDisclaimer {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEnrollmentIntro {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToChallengeQuestionAnswers {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class ChallengeQuestionAnswersDone {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToPhoneInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class PhoneInfosDone {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEmailInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EmailInfosDone {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEnrollmentSummary {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class EnrollmentDone {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","export class GoToLogin {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class SigninSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToChallenge {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class AuthenticateUserSuccess {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToForgotPassword {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","export class GoToChangePassword {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditProfile {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToUnlockProfile {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditChallengeQuestionAnswers {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditPhoneInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n\nexport class GoToEditEmailInfos {\n    constructor(attributes) {\n        if (attributes) {\n            Object.assign(this, attributes);\n        }\n    }\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport StringHelper from 'util/string-helper';\n\n@valueConverter(\"dateFormatter\")\nexport class dateFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatDate(value);\n    }\n\n    fromView(value) {\n        return StringHelper.parseDate(value);\n    }\n\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport {StringHelper} from 'util/string-helper';\n\n@valueConverter(\"intervalFormatter\")\nexport class intervalFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatInterval(value);\n    }\n\n}\n","import {inject, bindable, computedFrom, valueConverter} from 'aurelia-framework';\nimport {logger} from 'util/logger-helper';\nimport {StringHelper} from 'util/string-helper';\n\n@valueConverter(\"phoneFormatter\")\nexport class phoneFormatterValueConverter {\n\n    toView(value) {\n        return StringHelper.formatPhoneNumber(value);\n    }\n\n    fromView(value) {\n        return StringHelper.parsePhoneNumber(value)\n    }\n}\n","import numbro from 'numbro';\n\nexport class TimerFormatterValueConverter {\n    toView(value) {\n        if (value === '0') {\n            return 'Invalid time';\n        } else {\n            let formattedValue = numbro(value).format('0:0');\n            return formattedValue.substring(formattedValue.length - 5, formattedValue.length);\n        }\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChangePassword {\n    vm;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.userId = payload ? payload.username : null;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User();\n                this.vm.user.fromJson(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    goToChangePassword(event) {\n        this.router.navigateToRoute('change-password');\n    }\n\n    goToEditProfile(event) {\n        this.router.navigateToRoute('edit-profile');\n    }\n\n    goToUnlockAccount(event) {\n        this.router.navigateToRoute('unlock-account');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(DialogController, EventAggregator, Notification, I18N, AuthService, UserService)\nexport class ConfirmDialog {\n    vm = {\n        headerIcon: '',\n        headerText: '',\n        message: '',\n        messageParams: {},\n        cancelButtonText: '',\n        confirmButtonText: '',\n    };\n\n    constructor(dialogController, eventAggregator, notification, i18n, authService, userService) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        this.vm = viewModel;\n    }\n\n    confirm(event) {\n        this.dialogController.ok();\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {EnrollChallengeQuestionAnswersDone, GoToEnrollmentIntro} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollChallengeQuestionAnswers {\n    vm = {\n        user: {\n            challengeQuestions: [{}, {}, {}, {}, {}]\n        }\n    };\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm.user = viewModel.user;\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\n            ValidationRules\n                .ensure('userAnswerText').required()\n                .on(challengeQuestion);\n        }\n    }\n\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new GoToEnrollmentIntro());\n            resolve();\n        });\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let challengeQuestionAnswers = this.vm.user.getChallengeQuestionAnswers();\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            challengeQuestionAnswers: challengeQuestionAnswers\n                        };\n                        this.userService.addChallengeQuestionAnswers(request)\n                            .then(response => {\n                                this.onAddChallengeQuestionAnswersSuccess();\n                                this.notification.success('add-challenge-question-answers_success');\n                                this.eventAggregator.publish(new EnrollChallengeQuestionAnswersDone());\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('add-challenge-question-answers_error');\n                                reject(reason);\n                            });\n                    } else {\n                        let validateError = new Error('validate_error');\n                        logger.error(validateError);\n                        this.notification.error('validate_error');\n                        reject(validateError);\n                    }\n                })\n                .catch(exception => {\n                    logger.error(exception);\n                    reject(exception);\n                });\n        });\n    }\n\n    onAddChallengeQuestionAnswersSuccess(message) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                logger.error('get-user_success');\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {VerifyEmailInfoDialog} from 'components/views/verify-email-info-dialog/verify-email-info-dialog';\nimport {EnrollEmailInfosDone} from 'resources/messages/enrollment-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class EnrollEmailInfos {\n    vm = {\n        user: {\n            emailInfos: [],\n        },\n        showEnrollEmailInfoWarning: true,\n        emailAddress: '',\n        emailAddressHasFocus: true,\n        showAddEmailInfoForm: true\n    };\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm.user = viewModel.user;\n            if (this.vm.user.emailInfos.length > 0) {\n                this.vm.showAddEmailInfoForm = false;\n            } else {\n                this.vm.emailAddressHasFocus = true;\n            }\n            this.applyValidationRules();\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('emailAddress').required().email().withMessage(`\\${$value} is not a valid email address.`)\n            .on(this.vm);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'email-address-input') {\n                    if (event.key === 'Enter') {\n                        this.addEmailInfo();\n                    }\n                }\n            }\n        }\n    }\n\n    removeEmailInfo(event, contactInfo) {\n        let confirmDialogModel = this.i18n.tr('confirm-remove-email-info-dialog', {returnObjects: true});\n        confirmDialogModel.messageParams = {\n            'emailAddress': contactInfo.emailAddress\n        };\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n            .then(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.onConfirmRemoveEmailInfo(contactInfo);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n    onConfirmRemoveEmailInfo(contactInfo) {\n        let request = {\n            userId: this.vm.userId,\n            contactType: 'Email',\n            contactInfo: contactInfo.emailAddress,\n            label: contactInfo.label,\n            verified: contactInfo.verified,\n            hasActiveToken: contactInfo.hasActiveToken,\n            isDefault: true\n        };\n        return this.userService.removeContactInfo(request)\n            .then(response => {\n                this.vm.user.sessionId = response.sessionId;\n                this.vm.user.transactionId = response.transactionId;\n                if (response.success) {\n                    this.notification.info('remove-contact-info_success');\n                    this.vm.user.emailInfos.splice(_.findIndex(this.vm.user.emailInfos, contactInfo), 1);\n                } else {\n                    logger.error(response);\n                    this.notification.error('remove-contact-info_error');\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('remove-contact-info_error');\n            });\n    }\n\n    isEmailAddressUnique(emailAddress) {\n        let idx = _.findIndex(this.vm.user.emailInfos, function (s) {\n            return s.label === emailAddress;\n        });\n        return idx < 0;\n    }\n\n    addEmailInfo(event) {\n        return new Promise((resolve, reject) => {\n            if (this.isEmailAddressUnique(this.vm.emailAddress)) {\n                this.controller.validate()\n                    .then(controllerValidateResult => {\n                        if (controllerValidateResult.valid) {\n                            let request = {\n                                userId: this.vm.user.userId,\n                                credentialType: 'SMS',\n                                contactInfo: this.vm.emailAddress,\n                                label: this.vm.emailAddress,\n                                isDefault: true\n                            };\n                            this.userService.challengeUser(request)\n                                .then(response => {\n                                    this.vm.user.sessionId = response.sessionId;\n                                    this.vm.user.transactionId = response.transactionId;\n                                    if (response.challengeStatus !== 'Deny') {\n                                        this.goToVerifyEmailInfo(response);\n                                    } else {\n                                        this.notification.error('challenge-user-deny_error');\n                                    }\n                                    resolve();\n                                })\n                                .catch(reason => {\n                                    logger.error(reason);\n                                    this.notification.error('challenge-user_error');\n                                    reject(reason);\n                                });\n                        } else {\n                            resolve();\n                        }\n                    })\n                    .catch(exception => {\n                        logger.error(exception);\n                        reject(exception);\n                    });\n            } else {\n                let duplicateEmailError = new Error('duplicate-email_error');\n                this.notification.error(duplicateEmailError);\n                reject(duplicateEmailError);\n            }\n        });\n    }\n\n    goToVerifyEmailInfo(message) {\n        let verifyEmailInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyEmailInfoModel.messageParams = {\n            'emailAddress': this.vm.emailAddress\n        };\n        return this.dialogService.open({viewModel: VerifyEmailInfoDialog, model: verifyEmailInfoModel})\n            .then(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-email-info_resend');\n                        this.addEmailInfo();\n                    } else {\n                        this.notification.info('verify-email-info_canceled');\n                    }\n                } else {\n                    this.onVerifyEmailInfoSuccess(openDialogResult.output);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-email-info_error');\n            });\n    }\n\n    onVerifyEmailInfoSuccess(message) {\n        let contactInfo = '1' + JSON.parse(JSON.stringify(message.contactInfo));\n        let emailInfo = {\n            emailAddress: contactInfo,\n            label: contactInfo.substring(1, 11),\n            isDefault: false,\n            verified: true,\n            hasActiveToken: false\n        };\n        this.vm.user.emailInfos.push(emailInfo);\n\n        this.vm.user.sessionId = null;\n        this.vm.user.transactionId = null;\n        this.vm.emailAddress = '';\n        this.vm.emailAddressHasFocus = true;\n        this.vm.showAddEmailInfoForm = false;\n    }\n\n    showAddEmailInfoForm(event) {\n        return new Promise(resolve => {\n            this.vm.showAddEmailInfoForm = true;\n            resolve();\n        });\n    }\n\n    get isEmailInfosComplete() {\n        return this.vm.user.emailInfosComplete;\n    }\n\n    skip(event) {\n        let confirmDialogModel = this.i18n.tr('confirm-skip-enroll-email-infos-dialog', {returnObjects: true});\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n            .then(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.eventAggregator.publish(new EnrollEmailInfosDone({emailInfosSkipped: true}));\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('confirm_error');\n            });\n    }\n\n    next(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new EnrollEmailInfosDone());\n            resolve();\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {VerifyPhoneInfoDialog} from 'components/views/verify-phone-info-dialog/verify-phone-info-dialog';\nimport {PhoneInfosDone} from 'resources/messages/enrollment-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class EnrollPhoneInfos {\n    vm = {\n        user: {\n            phoneInfos: [],\n        },\n        showEnrollPhoneInfoWarning: true,\n        phoneNumber: '',\n        phoneNumberHasFocus: true,\n        showAddPhoneInfoForm: true\n    };\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm.user = viewModel.user;\n            if (this.vm.user.smsInfos.length > 0) {\n                this.vm.showAddPhoneInfoForm = false;\n            } else {\n                this.vm.phoneNumberHasFocus = true;\n            }\n            this.applyValidationRules();\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('phoneNumber')\n            .required()\n            .minLength(10)\n            .maxLength(11)\n            .matches(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?\\D?\\D?(\\d{4})$/)\n            .withMessage(`\\${$value} is not a valid phone number.`)\n            .on(this.vm);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'phone-number-input') {\n                    if (event.key === 'Enter') {\n                        this.addPhoneInfo();\n                    }\n                }\n            }\n        }\n    }\n\n    removePhoneInfo(event, contactInfo) {\n        let confirmDialogModel = this.i18n.tr('confirm-remove-phone-info-dialog', {returnObjects: true});\n        confirmDialogModel.messageParams = {\n            'phoneNumber': contactInfo.phoneNumber\n        };\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n            .then(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.onConfirmRemovePhoneInfo(contactInfo);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('logout_error');\n            });\n    }\n\n    onConfirmRemovePhoneInfo(contactInfo) {\n        let request = {\n            userId: this.vm.userId,\n            contactType: 'Phone',\n            contactInfo: contactInfo.phoneNumber,\n            label: contactInfo.label,\n            verified: contactInfo.verified,\n            hasActiveToken: contactInfo.hasActiveToken,\n            isDefault: true\n        };\n        return this.userService.removeContactInfo(request)\n            .then(response => {\n                this.vm.user.sessionId = response.sessionId;\n                this.vm.user.transactionId = response.transactionId;\n                if (response.success) {\n                    this.notification.info('remove-contact-info_success');\n                    this.vm.user.smsInfos.splice(_.findIndex(this.vm.user.smsInfos, contactInfo), 1);\n                } else {\n                    logger.error(response);\n                    this.notification.error('remove-contact-info_error');\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('remove-contact-info_error');\n            });\n    }\n\n    isPhoneNumberUnique(phoneNumber) {\n        let idx = _.findIndex(this.vm.user.smsInfos, function (s) {\n            return s.label === phoneNumber;\n        });\n        return idx < 0;\n    }\n\n    addPhoneInfo(event) {\n        return new Promise((resolve, reject) => {\n            if (this.isPhoneNumberUnique(this.vm.phoneNumber)) {\n                this.controller.validate()\n                    .then(controllerValidateResult => {\n                        if (controllerValidateResult.valid) {\n                            let request = {\n                                userId: this.vm.user.userId,\n                                credentialType: 'SMS',\n                                contactInfo: this.vm.phoneNumber,\n                                label: this.vm.phoneNumber,\n                                isDefault: true\n                            };\n                            this.userService.challengeUser(request)\n                                .then(response => {\n                                    this.vm.user.sessionId = response.sessionId;\n                                    this.vm.user.transactionId = response.transactionId;\n                                    if (response.challengeStatus !== 'Deny') {\n                                        this.goToVerifyPhoneInfo(response);\n                                    } else {\n                                        this.notification.error('challenge-user-deny_error');\n                                    }\n                                    resolve();\n                                })\n                                .catch(reason => {\n                                    logger.error(reason);\n                                    this.notification.error('challenge-user_error');\n                                    reject(reason);\n                                });\n                        } else {\n                            resolve();\n                        }\n                    })\n                    .catch(exception => {\n                        logger.error(exception);\n                        reject(exception);\n                    });\n            } else {\n                let duplicatePhoneError = new Error('duplicate-phone_error');\n                this.notification.error(duplicatePhoneError);\n                reject(duplicatePhoneError);\n            }\n        });\n    }\n\n    goToVerifyPhoneInfo(message) {\n        let verifyPhoneInfoModel = {\n            user: {\n                userId: this.vm.user.userId,\n                sessionId: this.vm.user.sessionId,\n                transactionId: this.vm.user.transactionId\n            },\n            verificationCode: '',\n            verificationCodeHasFocus: true\n        };\n        verifyPhoneInfoModel.messageParams = {\n            'phoneNumber': this.vm.phoneNumber\n        };\n        return this.dialogService.open({viewModel: VerifyPhoneInfoDialog, model: verifyPhoneInfoModel})\n            .then(openDialogResult => {\n                if (openDialogResult.wasCancelled) {\n                    if (openDialogResult.output && openDialogResult.output.resendCode) {\n                        this.notification.info('verify-phone-info_resend');\n                        this.addPhoneInfo();\n                    } else {\n                        this.notification.info('verify-phone-info_canceled');\n                    }\n                } else {\n                    this.onVerifyPhoneInfoSuccess(openDialogResult.output);\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.info('verify-phone-info_error');\n            });\n    }\n\n    onVerifyPhoneInfoSuccess(message) {\n        let contactInfo = '1' + JSON.parse(JSON.stringify(message.contactInfo));\n        let phoneInfo = {\n            phoneNumber: contactInfo,\n            label: contactInfo.substring(1, 11),\n            isDefault: false,\n            verified: true,\n            hasActiveToken: false\n        };\n        this.vm.user.smsInfos.push(phoneInfo);\n\n        this.vm.user.sessionId = null;\n        this.vm.user.transactionId = null;\n        this.vm.phoneNumber = '';\n        this.vm.phoneNumberHasFocus = true;\n        this.vm.showAddPhoneInfoForm = false;\n    }\n\n    showAddPhoneInfoForm(event) {\n        return new Promise(resolve => {\n            this.vm.showAddPhoneInfoForm = true;\n            resolve();\n        });\n    }\n\n    get isPhoneInfosComplete() {\n        return this.vm.user.phoneInfosComplete;\n    }\n\n    skip(event) {\n        let confirmDialogModel = this.i18n.tr('confirm-skip-enroll-phone-infos-dialog', {returnObjects: true});\n        return this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n            .then(openDialogResult => {\n                if (!openDialogResult.wasCancelled) {\n                    this.eventAggregator.publish(new EnrollPhoneInfosDone({phoneInfosSkipped: true}));\n                }\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('confirm_error');\n            });\n    }\n\n    next(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new EnrollPhoneInfosDone());\n            resolve();\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport {\n    GoToEnrollmentIntro\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentDisclaimer {\n    vm = {};\n    eventTimerStartTime = appConfig.enrollment.confirmDisclaimerEventTimerStartTime || 5;\n    eventTimerTickKey = 'enrollment-disclaimer-tick';\n    eventTimerTimeoutKey = 'enrollment-disclaimer-timeout';\n    subscribers = [];\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('confirmDisclaimerChecked').equals(true)\n            .on(this.vm);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        this.eventAggregator.publish(new GoToEnrollmentIntro());\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {\n    GoToChallengeQuestionAnswers,\n    GoToPhoneInfos,\n    GoToEmailInfos\n} from 'resources/messages/enrollment-messages';\nimport {logger} from 'util/logger-helper';\n\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentIntro {\n    vm = {};\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n\n    goToChallengeQuestionAnswers(event) {\n        this.eventAggregator.publish(new GoToChallengeQuestionAnswers());\n    }\n\n    goToPhoneInfos(event) {\n        this.eventAggregator.publish(new GoToPhoneInfos());\n    }\n\n    goToEmailInfos(event) {\n        this.eventAggregator.publish(new GoToEmailInfos());\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {ConfirmDialog} from 'components/views/confirm-dialog/confirm-dialog';\nimport {\n    EnrollmentDone\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class EnrollmentReview {\n    vm = {};\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm.user = viewModel.user;\n            resolve();\n        });\n    }\n\n    goToEnrollChallengeQuestionAnswers(event) {\n        this.router.navigateToRoute('edit-challenge-question-answers');\n    }\n\n    goToEnrollPhoneInfos(event) {\n        this.router.navigateToRoute('edit-phone-infos');\n    }\n\n    goToEnrollEmailInfos(event) {\n        this.router.navigateToRoute('edit-email-infos');\n    }\n\n    done(event) {\n        return new Promise((resolve, reject) => {\n            if (this.vm.challengeQuestionAnswersComplete &&\n                this.vm.user.smsInfosComplete &&\n                this.vm.user.emailInfosComplete) {\n                this.eventAggregator.publish(new EnrollmentDone());\n                resolve();\n            } else {\n                let confirmDialogModel = {\n                    \"headerIcon\": \"dialog-enroll-review-warning.header-icon\",\n                    \"headerText\": \"dialog-enroll-review-warning.header-text\",\n                    \"message\": \"dialog-enroll-review-warning.message\",\n                    \"cancelButtonStyle\": \"dialog-enroll-review-warning.cancel-button-style\",\n                    \"cancelButtonText\": \"dialog-enroll-review-warning.cancel-button-text\",\n                    \"confirmButtonStyle\": \"dialog-enroll-review-warning.confirm-button-style\",\n                    \"confirmButtonText\": \"dialog-enroll-review-warning.confirm-button-text\"\n                };\n                this.dialogService.open({viewModel: ConfirmDialog, model: confirmDialogModel})\n                    .then(openDialogResult => {\n                        if (!openDialogResult.wasCancelled) {\n                            this.eventAggregator.publish(new EnrollmentDone());\n                            resolve();\n                        } else {\n                            reject(new Error('confirm_canceled'));\n                        }\n                    })\n                    .catch(reason => {\n                        logger.error(reason);\n                        this.notification.error('confirm_error');\n                        reject(reason);\n                    });\n\n            }\n        });\n    }\n\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\nimport {EnrollmentStep} from 'util/common-models';\nimport {\n    GoToEnrollmentDisclaimer,\n    GoToEnrollmentIntro,\n    GoToChallengeQuestionAnswers,\n    ChallengeQuestionAnswersDone,\n    GoToPhoneInfos,\n    PhoneInfosDone,\n    GoToEmailInfos,\n    EmailInfosDone,\n    GoToEnrollmentSummary,\n    EnrollmentDone\n} from 'resources/messages/enrollment-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Enrollment {\n    vm = {\n        user: {},\n        showNavBar: false,\n        confirmDisclaimerChecked: false,\n        remainingTime: 0,\n        eventTimerExpired: false\n    };\n    enrollmentViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.userId = payload ? payload.username : null;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User();\n                this.vm.user.fromJson(response);\n                this.onGoToEnrollmentIntro(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToEnrollmentDisclaimer, message => this.onGoToEnrollmentDisclaimer(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToEnrollmentIntro, message => this.onGoToEnrollmentIntro(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToChallengeQuestionAnswers, message => this.onGoToEnrollChallengeQuestionAnswers(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeQuestionAnswersDone, message => this.onEnrollChallengeQuestionAnswersDone(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToPhoneInfos, message => this.onGoToEnrollPhoneInfos(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(PhoneInfosDone, message => this.onEnrollPhoneInfosDone(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToEmailInfos, message => this.onGoToEnrollEmailInfos(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EmailInfosDone, message => this.onEnrollEmailInfosDone(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToEnrollmentSummary, message => this.onGoToEnrollmentSummary(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(EnrollmentDone, message => this.onEnrollmentDone(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onGoToEnrollmentDisclaimer(message) {\n        this.vm.showNavBar = false;\n        this.vm.enrollmentStep = EnrollmentStep.DISCLAIMER;\n        this.enrollmentViewModel = './enrollment-disclaimer';\n    }\n\n    onGoToEnrollmentIntro(message) {\n        this.vm.showNavBar = false;\n        this.vm.enrollmentStep = EnrollmentStep.INTRO;\n        this.enrollmentViewModel = './enrollment-intro';\n    }\n\n    onGoToEnrollChallengeQuestionAnswers(message) {\n        this.vm.showNavBar = true;\n        this.vm.enrollmentStep = EnrollmentStep.QUESTIONS;\n        this.enrollmentViewModel = './enroll-challenge-question-answers';\n    }\n\n    onEnrollChallengeQuestionAnswersDone(message) {\n        this.vm.challengeQuestionAnswersComplete = this.vm.user.challengeQuestionAnswersComplete;\n        this.onGoToEnrollPhoneInfos();\n    }\n\n    onGoToEnrollPhoneInfos(message) {\n        this.vm.showNavBar = true;\n        this.vm.enrollmentStep = EnrollmentStep.PHONE;\n        this.enrollmentViewModel = './enroll-phone-infos';\n    }\n\n    onEnrollPhoneInfosDone(message) {\n        if (this.vm.user.smsInfosComplete) {\n            this.vm.phoneInfosComplete = true;\n            this.vm.phoneInfosSkipped = false;\n        }\n        else {\n            if (message && message.phoneInfosSkipped) {\n                this.vm.phoneInfosComplete = false;\n                this.vm.phoneInfosSkipped = true;\n            }\n        }\n        this.onGoToEnrollEmailInfos();\n    }\n\n    onGoToEnrollEmailInfos(message) {\n        this.vm.showNavBar = true;\n        this.vm.enrollmentStep = EnrollmentStep.EMAIL;\n        this.enrollmentViewModel = './enroll-email-infos';\n    }\n\n    onEnrollEmailInfosDone(message) {\n        if (this.vm.user.emailInfosComplete) {\n            this.vm.emailInfosComplete = true;\n            this.vm.emailInfosSkipped = false;\n        }\n        else {\n            if (message && message.emailInfosSkipped) {\n                this.vm.emailInfosComplete = false;\n                this.vm.emailInfosSkipped = true;\n            }\n        }\n        this.onGoToEnrollmentSummary();\n    }\n\n    onGoToEnrollmentSummary(message) {\n        this.vm.showNavBar = false;\n        this.vm.enrollmentStep = EnrollmentStep.SUMMARY;\n        this.enrollmentViewModel = './enrollment-review';\n    }\n\n    onEnrollmentDone(message) {\n        this.router.navigateToRoute('self-service');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\nimport {\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail\n} from 'resources/messages/challenge-messages';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithChallengeQuestions {\n    vm = {};\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise((resolve, reject) => {\n            this.vm = viewModel;\n            let request = {\n                userId: this.vm.user.userId,\n                credentialType: 'Questions',\n                authToken: this.vm.authToken\n            };\n            this.userService.challengeUser(request)\n                .then(response => {\n                    if (response.challengeStatus !== 'Deny') {\n                        this.vm.user.fromJson(response);\n                        this.applyValidationRules();\n                    } else {\n                        this.notification.error('challenge-user_error');\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    this.notification.error('challenge-user_error');\n                    reject(reason);\n                });\n        });\n    }\n\n    applyValidationRules() {\n        for (let i = 0; i < this.vm.user.challengeQuestions.length; i++) {\n            let challengeQuestion = this.vm.user.challengeQuestions[i];\n            ValidationRules\n                .ensure('userAnswerText').required()\n                .on(challengeQuestion);\n        }\n    }\n\n    onSelectedAvailableChallengeQuestionAnswerChanged(event, bindingContext, selectedAvailableChallengeQuestion) {\n        this.vm.user.updateAvailableChallengeQuestions(bindingContext.challengeQuestion, selectedAvailableChallengeQuestion);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new ChallengeCancel());\n            resolve();\n        });\n    }\n\n    _getCredentials() {\n        let credentials = '';\n        for (let challengeQuestion of this.vm.user.challengeQuestions) {\n            if (challengeQuestion.userAnswerText !== null || challengeQuestion.userAnswerText.length >= 0) {\n                credentials = credentials + challengeQuestion.selectedAvailableChallengeQuestion.challengeQuestionId + '|' + challengeQuestion.userAnswerText + ',';\n            }\n        }\n        credentials = _.trimEnd(credentials, ',');\n        return credentials;\n    }\n\n    next() {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let credentials = this._getCredentials();\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            authToken: this.vm.user.authToken,\n                            credentialType: 'Questions',\n                            credentials: credentials,\n                            bindDevice: this.vm.bindDevice\n                        };\n                        this.userService.authenticateUser(request)\n                            .then(response => {\n                                if (response.authStatusCode !== 'Deny') {\n                                    this.onChallengeSuccess(response);\n                                } else {\n                                    this.notification.error('challenge_error');\n                                    this.onChallengeFail(response);\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('challenge_error');\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n                .catch(validateReason => {\n                    logger.error(validateReason);\n                    this.notification.error('challenge_error');\n                    reject(validateReason);\n                });\n        });\n\n    }\n\n    onChallengeSuccess(message) {\n        this.eventAggregator.publish(new ChallengeSuccess(message));\n    }\n\n    onChallengeFail(message) {\n        this.eventAggregator.publish(new ChallengeFail(message));\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {\n    GoToLogin,\n    AuthenticateUserSuccess\n} from 'resources/messages/login-messages';\nimport {\n    ChallengeCancel,\n    ChallengeSuccess,\n    ChallengeFail\n} from 'resources/messages/challenge-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class ChallengeWithCredentials {\n    vm = {};\n    challengeWithCredentialsViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            if (this.vm.selectedCredentialType === 'challenge-questions') {\n                this.challengeWithCredentialsViewModel = './challenge-with-challenge-questions';\n            } else if (this.vm.selectedCredentialType === 'phone-info') {\n                this.challengeWithCredentialsViewModel = './challenge-with-phone-info';\n            } else if (this.vm.selectedCredentialType === 'email-info') {\n                this.challengeWithCredentialsViewModel = './challenge-with-email-info';\n            } else if (this.vm.selectedCredentialType === 'rsa-token') {\n                this.challengeWithCredentialsViewModel = './challenge-with-rsa-token';\n            } else {\n                this.eventAggregator.publish(new ChallengeFail());\n            }\n            resolve();\n        });\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeCancel, message => this.onChallengeCancel(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeSuccess, message => this.onChallengeSuccess(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(ChallengeFail, message => this.onChallengeFail(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onChallengeCancel() {\n        this.eventAggregator.publish(new GoToLogin());\n    }\n\n    onChallengeSuccess(message) {\n        this.eventAggregator.publish(new AuthenticateUserSuccess(message));\n    }\n\n    onChallengeFail(message) {\n        this.vm.user.sessionId = '';\n        this.vm.user.transactionId = '';\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {\n    ChallengeCancel,\n    GoToChallengeWithCredentials\n} from 'resources/messages/challenge-messages';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class Challenge {\n    vm = {};\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.vm.bindDeviceOptions = ['yes', 'no'];\n            this.applyValidationRules();\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('selectedCredentialType').required()\n            .on(this.vm);\n    }\n\n    cancel(event) {\n        return new Promise(resolve => {\n            this.eventAggregator.publish(new ChallengeCancel());\n            resolve();\n        });\n    }\n\n    next(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(result => {\n                    if (result.valid) {\n                        this.eventAggregator.publish(new GoToChallengeWithCredentials());\n                    }\n                    resolve();\n                })\n                .catch(reason => {\n                    logger.error(reason);\n                    reject(reason);\n                })\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService)\nexport class Deny {\n    vm = {};\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            resolve();\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {\n    GoToLogin,\n    SigninSuccess,\n    AuthenticateUserSuccess,\n    GoToForgotPassword\n} from 'resources/messages/login-messages';\nimport {\n    GoToChallengeWithCredentials\n} from 'resources/messages/challenge-messages';\nimport {logger} from 'util/logger-helper';\nimport _ from 'lodash';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Login {\n    vm = {\n        user: {},\n        userIdHasFocus: true,\n        credentialsHasFocus: false,\n        selectedCredentialType: null\n    };\n    loginViewModel;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        this.loginViewModel = './network-credentials';\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToLogin, message => this.onGoToLogin(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(SigninSuccess, message => this.onSigninSuccess(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(AuthenticateUserSuccess, message => this.onAuthenticateUserSuccess(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToChallengeWithCredentials, message => this.onGoToChallengeWithCredentials(message))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(GoToForgotPassword, message => this.onGoToForgotPassword(message))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    onGoToLogin(message) {\n        this.router.navigateToRoute('logout');\n    }\n\n    onSigninSuccess(message) {\n        if (message && message.authStatusCode === 'Challenge' && message.userStatus === 'Enrolled') {\n            this.vm.user = new User(message);\n            this.loginViewModel = './challenge';\n        } else if (message.authStatusCode === 'Success' && message.userStatus === 'Enrolled') {\n            this.onAuthenticateUserSuccess(message);\n        } else if (message.authStatusCode === 'Success') {\n            this.router.navigateToRoute('enrollment');\n        } else {\n            this.loginViewModel = './deny';\n        }\n    }\n\n    onGoToChallengeWithCredentials() {\n        this.loginViewModel = './challenge-with-credentials';\n    }\n\n    onAuthenticateUserSuccess(message) {\n        this.authService.setResponseObject({token: message.authToken});\n        this.router.navigateToRoute('self-service');\n    }\n\n    onGoToForgotPassword(message) {\n        this.router.navigateToRoute('forgot-password');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {\n    SigninSuccess,\n    GoToForgotPassword\n} from 'resources/messages/login-messages';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, ValidationControllerFactory, DialogService, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class NetworkCredentials {\n    vm = {};\n    onKeypressInputCallback;\n\n    constructor(router, eventAggregator, controllerFactory, dialogService, notification, i18n, authService, userService, windowHelper) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.validateTrigger = validateTrigger.manual;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.userIdHasFocus = true;\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('userId').required().minLength(1).maxLength(256)\n            .ensure('credentials').required().minLength(1).maxLength(256)\n            .on(this.vm.user);\n    }\n\n    deactivate() {\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'credentials-input') {\n                    if (event.key === 'Enter') {\n                        this.signin();\n                    }\n                }\n            }\n        }\n    }\n\n    signin(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            credentials: this.vm.user.credentials\n                        };\n                        this.userService.signin(request)\n                            .then(response => {\n                                this.eventAggregator.publish(new SigninSuccess(response));\n                                resolve();\n                            })\n                            .catch(reason => { \n                                logger.error(reason);\n                                reject(reason);\n                            });\n                    } else {\n                        resolve();\n                    }\n                })\n            .catch(validateReason => {\n                logger.error(validateReason);\n                reject(validateReason);\n            })\n        });\n    }\n\n    goToForgotPassword(event) {\n        this.eventAggregator.publish(new GoToForgotPassword());\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class Logout {\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.authService = authService;\n    }\n\n    activate() {\n        return this.authService.logout();\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class SelfService {\n    vm = {};\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let payload = this.authService.getTokenPayload();\n        let userId = payload ? payload.username : null;\n        let request = {\n            userId: userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    goToChangePassword(event) {\n        this.router.navigateToRoute('change-password');\n    }\n\n    goToEditProfile(event) {\n        this.router.navigateToRoute('edit-profile');\n    }\n\n    goToUnlockAccount(event) {\n        this.router.navigateToRoute('unlock-account');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {DialogService} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {User} from 'models/user';\nimport {logger} from 'util/logger-helper';\n\n@inject(Router, EventAggregator, DialogService, Notification, I18N, AuthService, UserService)\nexport class UnlockAccount {\n    vm;\n    subscribers = [];\n\n    constructor(router, eventAggregator, dialogService, notification, i18n, authService, userService) {\n        this.router = router;\n        this.eventAggregator = eventAggregator;\n        this.dialogService = dialogService;\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n\n        let payload = authService.getTokenPayload();\n        this.vm.user.userId = payload ? payload.username : null;\n    }\n\n    activate(params, routeConfig, navigationInstruction) {\n        let request = {\n            sessionId: this.vm.user.sessionId,\n            transactionId: this.vm.user.transactionId,\n            userId: this.vm.user.userId\n        };\n        return this.userService.getUser(request)\n            .then(response => {\n                this.vm.user = new User();\n                this.vm.user.fromJson(response);\n            })\n            .catch(reason => {\n                logger.error(reason);\n                this.notification.error('get-user_error');\n            });\n    }\n\n    goToChangePassword(event) {\n        this.router.navigateToRoute('change-password');\n    }\n\n    goToEditProfile(event) {\n        this.router.navigateToRoute('edit-profile');\n    }\n\n    goToUnlockAccount(event) {\n        this.router.navigateToRoute('unlock-account');\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class VerifyEmailInfoDialog {\n    vm;\n    onKeypressInputCallback;\n    eventTimerStartTime = appConfig.enrollment.verifyEmailInfoTimerStartTime || 120;\n    eventTimerTickKey = 'verify-email-info_tick';\n    eventTimerTimeoutKey = 'verify-email-info_timeout';\n    subscribers = [];\n\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\n            .on(this.vm);\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'verification-code') {\n                    if (event.key === 'Enter') {\n                        this.verify();\n                    }\n                }\n            }\n        }\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n\n    resendCode(event) {\n        let response = {\n            resendCode: true\n        };\n        this.dialogController.cancel(response);\n    }\n\n    verify(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            contactType: 'Email',\n                            contactInfo: this.vm.emailAddress,\n                            label: this.vm.emailAddress,\n                            token: this.vm.verificationCode\n                        };\n                        this.userService.verifyContactInfo(request)\n                            .then(response => {\n                                if (response.verified) {\n                                    this.dialogController.ok(response);\n                                } else {\n                                    this.notification.error('verify-email-info-fail_error');\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('verify-email-info_error');\n                                reject(reason);\n                            });\n                    }\n                });\n        });\n    }\n}\n","import {inject, bindable, computedFrom} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationControllerFactory, ValidationController, ValidationRules} from 'aurelia-validation';\nimport {DialogController} from 'aurelia-dialog';\nimport {Notification} from 'aurelia-notification';\nimport {I18N} from 'aurelia-i18n';\nimport {AuthService} from 'aurelia-authentication';\nimport {UserService} from 'services/user-service';\nimport {WindowHelper} from 'util/window-helper';\nimport {logger} from 'util/logger-helper';\nimport EventTimer from 'util/event-timer';\nimport appConfig from 'config/app';\nimport _ from 'lodash';\n\n@inject(DialogController, EventAggregator, ValidationControllerFactory, Notification, I18N, AuthService, UserService, WindowHelper)\nexport class VerifyPhoneInfoDialog {\n    vm;\n    onKeypressInputCallback;\n    eventTimerStartTime = appConfig.enrollment.verifyPhoneInfoTimerStartTime || 120;\n    eventTimerTickKey = 'verify-phone-info_tick';\n    eventTimerTimeoutKey = 'verify-phone-info_timeout';\n    subscribers = [];\n\n    constructor(dialogController, eventAggregator, controllerFactory, notification, i18n, authService, userService, windowHelper) {\n        this.dialogController = dialogController;\n        this.eventAggregator = eventAggregator;\n        this.controller = controllerFactory.createForCurrentScope();\n        this.notification = notification;\n        this.i18n = i18n;\n        this.authService = authService;\n        this.userService = userService;\n        this.windowHelper = windowHelper;\n\n        this.onKeypressInputCallback = this.onKeypressInput.bind(this);\n        this.timer = new EventTimer(this.eventAggregator);\n    }\n\n    activate(viewModel) {\n        return new Promise(resolve => {\n            this.vm = viewModel;\n            this.applyValidationRules();\n            this.vm.remainingTime = this.eventTimerStartTime;\n            this.timer.start(this.eventTimerStartTime, this.eventTimerTickKey, this.eventTimerTimeoutKey);\n\n            this.windowHelper.addEventListener('keypress', this.onKeypressInputCallback, false);\n            resolve();\n        });\n    }\n\n    applyValidationRules() {\n        ValidationRules\n            .ensure('verificationCode').required().minLength(8).maxLength(8)\n            .on(this.vm);\n    }\n\n    attached() {\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTickKey, startTime => this.onEventTimerTick(startTime))\n        );\n        this.subscribers.push(\n            this.eventAggregator.subscribe(this.eventTimerTimeoutKey, startTime => this.onEventTimerTimeout(startTime))\n        );\n    }\n\n    detached() {\n        _.each(this.subscribers, function (subscriber) {\n            if (subscriber && subscriber.dispose) {\n                subscriber.dispose();\n            }\n        });\n    }\n\n    deactivate() {\n        this.timer.stop();\n        this.windowHelper.removeEventListener('keypress', this.onKeypressInputCallback);\n    }\n\n    onKeypressInput(event) {\n        if (typeof event !== 'undefined') {\n            if (typeof event.target.id !== 'undefined') {\n                if (event.target.id === 'verification-code') {\n                    if (event.key === 'Enter') {\n                        this.verify();\n                    }\n                }\n            }\n        }\n    }\n\n    onEventTimerTick(startTime) {\n        this.vm.remainingTime = startTime;\n    }\n\n    onEventTimerTimeout(startTime) {\n        this.vm.eventTimerExpired = true;\n    }\n\n    cancel(event) {\n        this.dialogController.cancel();\n    }\n\n    resendCode(event) {\n        let response = {\n            resendCode: true\n        };\n        this.dialogController.cancel(response);\n    }\n\n    verify(event) {\n        return new Promise((resolve, reject) => {\n            this.controller.validate()\n                .then(controllerValidateResult => {\n                    if (controllerValidateResult.valid) {\n                        let request = {\n                            sessionId: this.vm.user.sessionId,\n                            transactionId: this.vm.user.transactionId,\n                            userId: this.vm.user.userId,\n                            contactType: 'SMS',\n                            contactInfo: this.vm.phoneNumber,\n                            label: this.vm.phoneNumber,\n                            token: this.vm.verificationCode\n                        };\n                        this.userService.verifyContactInfo(request)\n                            .then(response => {\n                                if (response.verified) {\n                                    this.dialogController.ok(response);\n                                } else {\n                                    this.notification.error('verify-phone-info-fail_error');\n                                }\n                                resolve();\n                            })\n                            .catch(reason => {\n                                logger.error(reason);\n                                this.notification.error('verify-phone-info_error');\n                                reject(reason);\n                            });\n                    }\n                });\n        });\n    }\n}\n"],"sourceRoot":".."}